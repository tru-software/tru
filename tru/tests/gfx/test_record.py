from tru.gfx.thumbs import Operations
from PIL import Image
import pytest

def test_record():

	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 1)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 2)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 3)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(None, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 1)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 2)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 3)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(0, 7)
	res = op(img)
	assert res.size == (400, 4)


	# FitWidth(1, None)((400, 4)) -> FAIL
	# FitWidth(1, 0)((400, 4)) -> FAIL
	# FitWidth(1, 1)((400, 4)) -> FAIL
	# FitWidth(1, 2)((400, 4)) -> FAIL
	# FitWidth(1, 3)((400, 4)) -> FAIL
	# FitWidth(1, 4)((400, 4)) -> FAIL
	# FitWidth(1, 5)((400, 4)) -> FAIL
	# FitWidth(1, 6)((400, 4)) -> FAIL
	# FitWidth(1, 7)((400, 4)) -> FAIL
	# FitWidth(2, None)((400, 4)) -> FAIL
	# FitWidth(2, 0)((400, 4)) -> FAIL
	# FitWidth(2, 1)((400, 4)) -> FAIL
	# FitWidth(2, 2)((400, 4)) -> FAIL
	# FitWidth(2, 3)((400, 4)) -> FAIL
	# FitWidth(2, 4)((400, 4)) -> FAIL
	# FitWidth(2, 5)((400, 4)) -> FAIL
	# FitWidth(2, 6)((400, 4)) -> FAIL
	# FitWidth(2, 7)((400, 4)) -> FAIL
	# FitWidth(3, None)((400, 4)) -> FAIL
	# FitWidth(3, 0)((400, 4)) -> FAIL
	# FitWidth(3, 1)((400, 4)) -> FAIL
	# FitWidth(3, 2)((400, 4)) -> FAIL
	# FitWidth(3, 3)((400, 4)) -> FAIL
	# FitWidth(3, 4)((400, 4)) -> FAIL
	# FitWidth(3, 5)((400, 4)) -> FAIL
	# FitWidth(3, 6)((400, 4)) -> FAIL
	# FitWidth(3, 7)((400, 4)) -> FAIL
	# FitWidth(4, None)((400, 4)) -> FAIL
	# FitWidth(4, 0)((400, 4)) -> FAIL
	# FitWidth(4, 1)((400, 4)) -> FAIL
	# FitWidth(4, 2)((400, 4)) -> FAIL
	# FitWidth(4, 3)((400, 4)) -> FAIL
	# FitWidth(4, 4)((400, 4)) -> FAIL
	# FitWidth(4, 5)((400, 4)) -> FAIL
	# FitWidth(4, 6)((400, 4)) -> FAIL
	# FitWidth(4, 7)((400, 4)) -> FAIL
	# FitWidth(5, None)((400, 4)) -> FAIL
	# FitWidth(5, 0)((400, 4)) -> FAIL
	# FitWidth(5, 1)((400, 4)) -> FAIL
	# FitWidth(5, 2)((400, 4)) -> FAIL
	# FitWidth(5, 3)((400, 4)) -> FAIL
	# FitWidth(5, 4)((400, 4)) -> FAIL
	# FitWidth(5, 5)((400, 4)) -> FAIL
	# FitWidth(5, 6)((400, 4)) -> FAIL
	# FitWidth(5, 7)((400, 4)) -> FAIL
	# FitWidth(6, None)((400, 4)) -> FAIL
	# FitWidth(6, 0)((400, 4)) -> FAIL
	# FitWidth(6, 1)((400, 4)) -> FAIL
	# FitWidth(6, 2)((400, 4)) -> FAIL
	# FitWidth(6, 3)((400, 4)) -> FAIL
	# FitWidth(6, 4)((400, 4)) -> FAIL
	# FitWidth(6, 5)((400, 4)) -> FAIL
	# FitWidth(6, 6)((400, 4)) -> FAIL
	# FitWidth(6, 7)((400, 4)) -> FAIL
	# FitWidth(7, None)((400, 4)) -> FAIL
	# FitWidth(7, 0)((400, 4)) -> FAIL
	# FitWidth(7, 1)((400, 4)) -> FAIL
	# FitWidth(7, 2)((400, 4)) -> FAIL
	# FitWidth(7, 3)((400, 4)) -> FAIL
	# FitWidth(7, 4)((400, 4)) -> FAIL
	# FitWidth(7, 5)((400, 4)) -> FAIL
	# FitWidth(7, 6)((400, 4)) -> FAIL
	# FitWidth(7, 7)((400, 4)) -> FAIL
	# FitWidth(8, None)((400, 4)) -> FAIL
	# FitWidth(8, 0)((400, 4)) -> FAIL
	# FitWidth(8, 1)((400, 4)) -> FAIL
	# FitWidth(8, 2)((400, 4)) -> FAIL
	# FitWidth(8, 3)((400, 4)) -> FAIL
	# FitWidth(8, 4)((400, 4)) -> FAIL
	# FitWidth(8, 5)((400, 4)) -> FAIL
	# FitWidth(8, 6)((400, 4)) -> FAIL
	# FitWidth(8, 7)((400, 4)) -> FAIL
	# FitWidth(9, None)((400, 4)) -> FAIL
	# FitWidth(9, 0)((400, 4)) -> FAIL
	# FitWidth(9, 1)((400, 4)) -> FAIL
	# FitWidth(9, 2)((400, 4)) -> FAIL
	# FitWidth(9, 3)((400, 4)) -> FAIL
	# FitWidth(9, 4)((400, 4)) -> FAIL
	# FitWidth(9, 5)((400, 4)) -> FAIL
	# FitWidth(9, 6)((400, 4)) -> FAIL
	# FitWidth(9, 7)((400, 4)) -> FAIL
	# FitWidth(10, None)((400, 4)) -> FAIL
	# FitWidth(10, 0)((400, 4)) -> FAIL
	# FitWidth(10, 1)((400, 4)) -> FAIL
	# FitWidth(10, 2)((400, 4)) -> FAIL
	# FitWidth(10, 3)((400, 4)) -> FAIL
	# FitWidth(10, 4)((400, 4)) -> FAIL
	# FitWidth(10, 5)((400, 4)) -> FAIL
	# FitWidth(10, 6)((400, 4)) -> FAIL
	# FitWidth(10, 7)((400, 4)) -> FAIL
	# FitWidth(11, None)((400, 4)) -> FAIL
	# FitWidth(11, 0)((400, 4)) -> FAIL
	# FitWidth(11, 1)((400, 4)) -> FAIL
	# FitWidth(11, 2)((400, 4)) -> FAIL
	# FitWidth(11, 3)((400, 4)) -> FAIL
	# FitWidth(11, 4)((400, 4)) -> FAIL
	# FitWidth(11, 5)((400, 4)) -> FAIL
	# FitWidth(11, 6)((400, 4)) -> FAIL
	# FitWidth(11, 7)((400, 4)) -> FAIL
	# FitWidth(12, None)((400, 4)) -> FAIL
	# FitWidth(12, 0)((400, 4)) -> FAIL
	# FitWidth(12, 1)((400, 4)) -> FAIL
	# FitWidth(12, 2)((400, 4)) -> FAIL
	# FitWidth(12, 3)((400, 4)) -> FAIL
	# FitWidth(12, 4)((400, 4)) -> FAIL
	# FitWidth(12, 5)((400, 4)) -> FAIL
	# FitWidth(12, 6)((400, 4)) -> FAIL
	# FitWidth(12, 7)((400, 4)) -> FAIL
	# FitWidth(13, None)((400, 4)) -> FAIL
	# FitWidth(13, 0)((400, 4)) -> FAIL
	# FitWidth(13, 1)((400, 4)) -> FAIL
	# FitWidth(13, 2)((400, 4)) -> FAIL
	# FitWidth(13, 3)((400, 4)) -> FAIL
	# FitWidth(13, 4)((400, 4)) -> FAIL
	# FitWidth(13, 5)((400, 4)) -> FAIL
	# FitWidth(13, 6)((400, 4)) -> FAIL
	# FitWidth(13, 7)((400, 4)) -> FAIL
	# FitWidth(14, None)((400, 4)) -> FAIL
	# FitWidth(14, 0)((400, 4)) -> FAIL
	# FitWidth(14, 1)((400, 4)) -> FAIL
	# FitWidth(14, 2)((400, 4)) -> FAIL
	# FitWidth(14, 3)((400, 4)) -> FAIL
	# FitWidth(14, 4)((400, 4)) -> FAIL
	# FitWidth(14, 5)((400, 4)) -> FAIL
	# FitWidth(14, 6)((400, 4)) -> FAIL
	# FitWidth(14, 7)((400, 4)) -> FAIL
	# FitWidth(15, None)((400, 4)) -> FAIL
	# FitWidth(15, 0)((400, 4)) -> FAIL
	# FitWidth(15, 1)((400, 4)) -> FAIL
	# FitWidth(15, 2)((400, 4)) -> FAIL
	# FitWidth(15, 3)((400, 4)) -> FAIL
	# FitWidth(15, 4)((400, 4)) -> FAIL
	# FitWidth(15, 5)((400, 4)) -> FAIL
	# FitWidth(15, 6)((400, 4)) -> FAIL
	# FitWidth(15, 7)((400, 4)) -> FAIL
	# FitWidth(16, None)((400, 4)) -> FAIL
	# FitWidth(16, 0)((400, 4)) -> FAIL
	# FitWidth(16, 1)((400, 4)) -> FAIL
	# FitWidth(16, 2)((400, 4)) -> FAIL
	# FitWidth(16, 3)((400, 4)) -> FAIL
	# FitWidth(16, 4)((400, 4)) -> FAIL
	# FitWidth(16, 5)((400, 4)) -> FAIL
	# FitWidth(16, 6)((400, 4)) -> FAIL
	# FitWidth(16, 7)((400, 4)) -> FAIL
	# FitWidth(17, None)((400, 4)) -> FAIL
	# FitWidth(17, 0)((400, 4)) -> FAIL
	# FitWidth(17, 1)((400, 4)) -> FAIL
	# FitWidth(17, 2)((400, 4)) -> FAIL
	# FitWidth(17, 3)((400, 4)) -> FAIL
	# FitWidth(17, 4)((400, 4)) -> FAIL
	# FitWidth(17, 5)((400, 4)) -> FAIL
	# FitWidth(17, 6)((400, 4)) -> FAIL
	# FitWidth(17, 7)((400, 4)) -> FAIL
	# FitWidth(18, None)((400, 4)) -> FAIL
	# FitWidth(18, 0)((400, 4)) -> FAIL
	# FitWidth(18, 1)((400, 4)) -> FAIL
	# FitWidth(18, 2)((400, 4)) -> FAIL
	# FitWidth(18, 3)((400, 4)) -> FAIL
	# FitWidth(18, 4)((400, 4)) -> FAIL
	# FitWidth(18, 5)((400, 4)) -> FAIL
	# FitWidth(18, 6)((400, 4)) -> FAIL
	# FitWidth(18, 7)((400, 4)) -> FAIL
	# FitWidth(19, None)((400, 4)) -> FAIL
	# FitWidth(19, 0)((400, 4)) -> FAIL
	# FitWidth(19, 1)((400, 4)) -> FAIL
	# FitWidth(19, 2)((400, 4)) -> FAIL
	# FitWidth(19, 3)((400, 4)) -> FAIL
	# FitWidth(19, 4)((400, 4)) -> FAIL
	# FitWidth(19, 5)((400, 4)) -> FAIL
	# FitWidth(19, 6)((400, 4)) -> FAIL
	# FitWidth(19, 7)((400, 4)) -> FAIL
	# FitWidth(20, None)((400, 4)) -> FAIL
	# FitWidth(20, 0)((400, 4)) -> FAIL
	# FitWidth(20, 1)((400, 4)) -> FAIL
	# FitWidth(20, 2)((400, 4)) -> FAIL
	# FitWidth(20, 3)((400, 4)) -> FAIL
	# FitWidth(20, 4)((400, 4)) -> FAIL
	# FitWidth(20, 5)((400, 4)) -> FAIL
	# FitWidth(20, 6)((400, 4)) -> FAIL
	# FitWidth(20, 7)((400, 4)) -> FAIL
	# FitWidth(21, None)((400, 4)) -> FAIL
	# FitWidth(21, 0)((400, 4)) -> FAIL
	# FitWidth(21, 1)((400, 4)) -> FAIL
	# FitWidth(21, 2)((400, 4)) -> FAIL
	# FitWidth(21, 3)((400, 4)) -> FAIL
	# FitWidth(21, 4)((400, 4)) -> FAIL
	# FitWidth(21, 5)((400, 4)) -> FAIL
	# FitWidth(21, 6)((400, 4)) -> FAIL
	# FitWidth(21, 7)((400, 4)) -> FAIL
	# FitWidth(22, None)((400, 4)) -> FAIL
	# FitWidth(22, 0)((400, 4)) -> FAIL
	# FitWidth(22, 1)((400, 4)) -> FAIL
	# FitWidth(22, 2)((400, 4)) -> FAIL
	# FitWidth(22, 3)((400, 4)) -> FAIL
	# FitWidth(22, 4)((400, 4)) -> FAIL
	# FitWidth(22, 5)((400, 4)) -> FAIL
	# FitWidth(22, 6)((400, 4)) -> FAIL
	# FitWidth(22, 7)((400, 4)) -> FAIL
	# FitWidth(23, None)((400, 4)) -> FAIL
	# FitWidth(23, 0)((400, 4)) -> FAIL
	# FitWidth(23, 1)((400, 4)) -> FAIL
	# FitWidth(23, 2)((400, 4)) -> FAIL
	# FitWidth(23, 3)((400, 4)) -> FAIL
	# FitWidth(23, 4)((400, 4)) -> FAIL
	# FitWidth(23, 5)((400, 4)) -> FAIL
	# FitWidth(23, 6)((400, 4)) -> FAIL
	# FitWidth(23, 7)((400, 4)) -> FAIL
	# FitWidth(24, None)((400, 4)) -> FAIL
	# FitWidth(24, 0)((400, 4)) -> FAIL
	# FitWidth(24, 1)((400, 4)) -> FAIL
	# FitWidth(24, 2)((400, 4)) -> FAIL
	# FitWidth(24, 3)((400, 4)) -> FAIL
	# FitWidth(24, 4)((400, 4)) -> FAIL
	# FitWidth(24, 5)((400, 4)) -> FAIL
	# FitWidth(24, 6)((400, 4)) -> FAIL
	# FitWidth(24, 7)((400, 4)) -> FAIL
	# FitWidth(25, None)((400, 4)) -> FAIL
	# FitWidth(25, 0)((400, 4)) -> FAIL
	# FitWidth(25, 1)((400, 4)) -> FAIL
	# FitWidth(25, 2)((400, 4)) -> FAIL
	# FitWidth(25, 3)((400, 4)) -> FAIL
	# FitWidth(25, 4)((400, 4)) -> FAIL
	# FitWidth(25, 5)((400, 4)) -> FAIL
	# FitWidth(25, 6)((400, 4)) -> FAIL
	# FitWidth(25, 7)((400, 4)) -> FAIL
	# FitWidth(26, None)((400, 4)) -> FAIL
	# FitWidth(26, 0)((400, 4)) -> FAIL
	# FitWidth(26, 1)((400, 4)) -> FAIL
	# FitWidth(26, 2)((400, 4)) -> FAIL
	# FitWidth(26, 3)((400, 4)) -> FAIL
	# FitWidth(26, 4)((400, 4)) -> FAIL
	# FitWidth(26, 5)((400, 4)) -> FAIL
	# FitWidth(26, 6)((400, 4)) -> FAIL
	# FitWidth(26, 7)((400, 4)) -> FAIL
	# FitWidth(27, None)((400, 4)) -> FAIL
	# FitWidth(27, 0)((400, 4)) -> FAIL
	# FitWidth(27, 1)((400, 4)) -> FAIL
	# FitWidth(27, 2)((400, 4)) -> FAIL
	# FitWidth(27, 3)((400, 4)) -> FAIL
	# FitWidth(27, 4)((400, 4)) -> FAIL
	# FitWidth(27, 5)((400, 4)) -> FAIL
	# FitWidth(27, 6)((400, 4)) -> FAIL
	# FitWidth(27, 7)((400, 4)) -> FAIL
	# FitWidth(28, None)((400, 4)) -> FAIL
	# FitWidth(28, 0)((400, 4)) -> FAIL
	# FitWidth(28, 1)((400, 4)) -> FAIL
	# FitWidth(28, 2)((400, 4)) -> FAIL
	# FitWidth(28, 3)((400, 4)) -> FAIL
	# FitWidth(28, 4)((400, 4)) -> FAIL
	# FitWidth(28, 5)((400, 4)) -> FAIL
	# FitWidth(28, 6)((400, 4)) -> FAIL
	# FitWidth(28, 7)((400, 4)) -> FAIL
	# FitWidth(29, None)((400, 4)) -> FAIL
	# FitWidth(29, 0)((400, 4)) -> FAIL
	# FitWidth(29, 1)((400, 4)) -> FAIL
	# FitWidth(29, 2)((400, 4)) -> FAIL
	# FitWidth(29, 3)((400, 4)) -> FAIL
	# FitWidth(29, 4)((400, 4)) -> FAIL
	# FitWidth(29, 5)((400, 4)) -> FAIL
	# FitWidth(29, 6)((400, 4)) -> FAIL
	# FitWidth(29, 7)((400, 4)) -> FAIL
	# FitWidth(30, None)((400, 4)) -> FAIL
	# FitWidth(30, 0)((400, 4)) -> FAIL
	# FitWidth(30, 1)((400, 4)) -> FAIL
	# FitWidth(30, 2)((400, 4)) -> FAIL
	# FitWidth(30, 3)((400, 4)) -> FAIL
	# FitWidth(30, 4)((400, 4)) -> FAIL
	# FitWidth(30, 5)((400, 4)) -> FAIL
	# FitWidth(30, 6)((400, 4)) -> FAIL
	# FitWidth(30, 7)((400, 4)) -> FAIL
	# FitWidth(31, None)((400, 4)) -> FAIL
	# FitWidth(31, 0)((400, 4)) -> FAIL
	# FitWidth(31, 1)((400, 4)) -> FAIL
	# FitWidth(31, 2)((400, 4)) -> FAIL
	# FitWidth(31, 3)((400, 4)) -> FAIL
	# FitWidth(31, 4)((400, 4)) -> FAIL
	# FitWidth(31, 5)((400, 4)) -> FAIL
	# FitWidth(31, 6)((400, 4)) -> FAIL
	# FitWidth(31, 7)((400, 4)) -> FAIL
	# FitWidth(32, None)((400, 4)) -> FAIL
	# FitWidth(32, 0)((400, 4)) -> FAIL
	# FitWidth(32, 1)((400, 4)) -> FAIL
	# FitWidth(32, 2)((400, 4)) -> FAIL
	# FitWidth(32, 3)((400, 4)) -> FAIL
	# FitWidth(32, 4)((400, 4)) -> FAIL
	# FitWidth(32, 5)((400, 4)) -> FAIL
	# FitWidth(32, 6)((400, 4)) -> FAIL
	# FitWidth(32, 7)((400, 4)) -> FAIL
	# FitWidth(33, None)((400, 4)) -> FAIL
	# FitWidth(33, 0)((400, 4)) -> FAIL
	# FitWidth(33, 1)((400, 4)) -> FAIL
	# FitWidth(33, 2)((400, 4)) -> FAIL
	# FitWidth(33, 3)((400, 4)) -> FAIL
	# FitWidth(33, 4)((400, 4)) -> FAIL
	# FitWidth(33, 5)((400, 4)) -> FAIL
	# FitWidth(33, 6)((400, 4)) -> FAIL
	# FitWidth(33, 7)((400, 4)) -> FAIL
	# FitWidth(34, None)((400, 4)) -> FAIL
	# FitWidth(34, 0)((400, 4)) -> FAIL
	# FitWidth(34, 1)((400, 4)) -> FAIL
	# FitWidth(34, 2)((400, 4)) -> FAIL
	# FitWidth(34, 3)((400, 4)) -> FAIL
	# FitWidth(34, 4)((400, 4)) -> FAIL
	# FitWidth(34, 5)((400, 4)) -> FAIL
	# FitWidth(34, 6)((400, 4)) -> FAIL
	# FitWidth(34, 7)((400, 4)) -> FAIL
	# FitWidth(35, None)((400, 4)) -> FAIL
	# FitWidth(35, 0)((400, 4)) -> FAIL
	# FitWidth(35, 1)((400, 4)) -> FAIL
	# FitWidth(35, 2)((400, 4)) -> FAIL
	# FitWidth(35, 3)((400, 4)) -> FAIL
	# FitWidth(35, 4)((400, 4)) -> FAIL
	# FitWidth(35, 5)((400, 4)) -> FAIL
	# FitWidth(35, 6)((400, 4)) -> FAIL
	# FitWidth(35, 7)((400, 4)) -> FAIL
	# FitWidth(36, None)((400, 4)) -> FAIL
	# FitWidth(36, 0)((400, 4)) -> FAIL
	# FitWidth(36, 1)((400, 4)) -> FAIL
	# FitWidth(36, 2)((400, 4)) -> FAIL
	# FitWidth(36, 3)((400, 4)) -> FAIL
	# FitWidth(36, 4)((400, 4)) -> FAIL
	# FitWidth(36, 5)((400, 4)) -> FAIL
	# FitWidth(36, 6)((400, 4)) -> FAIL
	# FitWidth(36, 7)((400, 4)) -> FAIL
	# FitWidth(37, None)((400, 4)) -> FAIL
	# FitWidth(37, 0)((400, 4)) -> FAIL
	# FitWidth(37, 1)((400, 4)) -> FAIL
	# FitWidth(37, 2)((400, 4)) -> FAIL
	# FitWidth(37, 3)((400, 4)) -> FAIL
	# FitWidth(37, 4)((400, 4)) -> FAIL
	# FitWidth(37, 5)((400, 4)) -> FAIL
	# FitWidth(37, 6)((400, 4)) -> FAIL
	# FitWidth(37, 7)((400, 4)) -> FAIL
	# FitWidth(38, None)((400, 4)) -> FAIL
	# FitWidth(38, 0)((400, 4)) -> FAIL
	# FitWidth(38, 1)((400, 4)) -> FAIL
	# FitWidth(38, 2)((400, 4)) -> FAIL
	# FitWidth(38, 3)((400, 4)) -> FAIL
	# FitWidth(38, 4)((400, 4)) -> FAIL
	# FitWidth(38, 5)((400, 4)) -> FAIL
	# FitWidth(38, 6)((400, 4)) -> FAIL
	# FitWidth(38, 7)((400, 4)) -> FAIL
	# FitWidth(39, None)((400, 4)) -> FAIL
	# FitWidth(39, 0)((400, 4)) -> FAIL
	# FitWidth(39, 1)((400, 4)) -> FAIL
	# FitWidth(39, 2)((400, 4)) -> FAIL
	# FitWidth(39, 3)((400, 4)) -> FAIL
	# FitWidth(39, 4)((400, 4)) -> FAIL
	# FitWidth(39, 5)((400, 4)) -> FAIL
	# FitWidth(39, 6)((400, 4)) -> FAIL
	# FitWidth(39, 7)((400, 4)) -> FAIL
	# FitWidth(40, None)((400, 4)) -> FAIL
	# FitWidth(40, 0)((400, 4)) -> FAIL
	# FitWidth(40, 1)((400, 4)) -> FAIL
	# FitWidth(40, 2)((400, 4)) -> FAIL
	# FitWidth(40, 3)((400, 4)) -> FAIL
	# FitWidth(40, 4)((400, 4)) -> FAIL
	# FitWidth(40, 5)((400, 4)) -> FAIL
	# FitWidth(40, 6)((400, 4)) -> FAIL
	# FitWidth(40, 7)((400, 4)) -> FAIL
	# FitWidth(41, None)((400, 4)) -> FAIL
	# FitWidth(41, 0)((400, 4)) -> FAIL
	# FitWidth(41, 1)((400, 4)) -> FAIL
	# FitWidth(41, 2)((400, 4)) -> FAIL
	# FitWidth(41, 3)((400, 4)) -> FAIL
	# FitWidth(41, 4)((400, 4)) -> FAIL
	# FitWidth(41, 5)((400, 4)) -> FAIL
	# FitWidth(41, 6)((400, 4)) -> FAIL
	# FitWidth(41, 7)((400, 4)) -> FAIL
	# FitWidth(42, None)((400, 4)) -> FAIL
	# FitWidth(42, 0)((400, 4)) -> FAIL
	# FitWidth(42, 1)((400, 4)) -> FAIL
	# FitWidth(42, 2)((400, 4)) -> FAIL
	# FitWidth(42, 3)((400, 4)) -> FAIL
	# FitWidth(42, 4)((400, 4)) -> FAIL
	# FitWidth(42, 5)((400, 4)) -> FAIL
	# FitWidth(42, 6)((400, 4)) -> FAIL
	# FitWidth(42, 7)((400, 4)) -> FAIL
	# FitWidth(43, None)((400, 4)) -> FAIL
	# FitWidth(43, 0)((400, 4)) -> FAIL
	# FitWidth(43, 1)((400, 4)) -> FAIL
	# FitWidth(43, 2)((400, 4)) -> FAIL
	# FitWidth(43, 3)((400, 4)) -> FAIL
	# FitWidth(43, 4)((400, 4)) -> FAIL
	# FitWidth(43, 5)((400, 4)) -> FAIL
	# FitWidth(43, 6)((400, 4)) -> FAIL
	# FitWidth(43, 7)((400, 4)) -> FAIL
	# FitWidth(44, None)((400, 4)) -> FAIL
	# FitWidth(44, 0)((400, 4)) -> FAIL
	# FitWidth(44, 1)((400, 4)) -> FAIL
	# FitWidth(44, 2)((400, 4)) -> FAIL
	# FitWidth(44, 3)((400, 4)) -> FAIL
	# FitWidth(44, 4)((400, 4)) -> FAIL
	# FitWidth(44, 5)((400, 4)) -> FAIL
	# FitWidth(44, 6)((400, 4)) -> FAIL
	# FitWidth(44, 7)((400, 4)) -> FAIL
	# FitWidth(45, None)((400, 4)) -> FAIL
	# FitWidth(45, 0)((400, 4)) -> FAIL
	# FitWidth(45, 1)((400, 4)) -> FAIL
	# FitWidth(45, 2)((400, 4)) -> FAIL
	# FitWidth(45, 3)((400, 4)) -> FAIL
	# FitWidth(45, 4)((400, 4)) -> FAIL
	# FitWidth(45, 5)((400, 4)) -> FAIL
	# FitWidth(45, 6)((400, 4)) -> FAIL
	# FitWidth(45, 7)((400, 4)) -> FAIL
	# FitWidth(46, None)((400, 4)) -> FAIL
	# FitWidth(46, 0)((400, 4)) -> FAIL
	# FitWidth(46, 1)((400, 4)) -> FAIL
	# FitWidth(46, 2)((400, 4)) -> FAIL
	# FitWidth(46, 3)((400, 4)) -> FAIL
	# FitWidth(46, 4)((400, 4)) -> FAIL
	# FitWidth(46, 5)((400, 4)) -> FAIL
	# FitWidth(46, 6)((400, 4)) -> FAIL
	# FitWidth(46, 7)((400, 4)) -> FAIL
	# FitWidth(47, None)((400, 4)) -> FAIL
	# FitWidth(47, 0)((400, 4)) -> FAIL
	# FitWidth(47, 1)((400, 4)) -> FAIL
	# FitWidth(47, 2)((400, 4)) -> FAIL
	# FitWidth(47, 3)((400, 4)) -> FAIL
	# FitWidth(47, 4)((400, 4)) -> FAIL
	# FitWidth(47, 5)((400, 4)) -> FAIL
	# FitWidth(47, 6)((400, 4)) -> FAIL
	# FitWidth(47, 7)((400, 4)) -> FAIL
	# FitWidth(48, None)((400, 4)) -> FAIL
	# FitWidth(48, 0)((400, 4)) -> FAIL
	# FitWidth(48, 1)((400, 4)) -> FAIL
	# FitWidth(48, 2)((400, 4)) -> FAIL
	# FitWidth(48, 3)((400, 4)) -> FAIL
	# FitWidth(48, 4)((400, 4)) -> FAIL
	# FitWidth(48, 5)((400, 4)) -> FAIL
	# FitWidth(48, 6)((400, 4)) -> FAIL
	# FitWidth(48, 7)((400, 4)) -> FAIL
	# FitWidth(49, None)((400, 4)) -> FAIL
	# FitWidth(49, 0)((400, 4)) -> FAIL
	# FitWidth(49, 1)((400, 4)) -> FAIL
	# FitWidth(49, 2)((400, 4)) -> FAIL
	# FitWidth(49, 3)((400, 4)) -> FAIL
	# FitWidth(49, 4)((400, 4)) -> FAIL
	# FitWidth(49, 5)((400, 4)) -> FAIL
	# FitWidth(49, 6)((400, 4)) -> FAIL
	# FitWidth(49, 7)((400, 4)) -> FAIL
	# FitWidth(50, None)((400, 4)) -> FAIL
	# FitWidth(50, 0)((400, 4)) -> FAIL
	# FitWidth(50, 1)((400, 4)) -> FAIL
	# FitWidth(50, 2)((400, 4)) -> FAIL
	# FitWidth(50, 3)((400, 4)) -> FAIL
	# FitWidth(50, 4)((400, 4)) -> FAIL
	# FitWidth(50, 5)((400, 4)) -> FAIL
	# FitWidth(50, 6)((400, 4)) -> FAIL
	# FitWidth(50, 7)((400, 4)) -> FAIL
	# FitWidth(51, None)((400, 4)) -> FAIL
	# FitWidth(51, 0)((400, 4)) -> FAIL
	# FitWidth(51, 1)((400, 4)) -> FAIL
	# FitWidth(51, 2)((400, 4)) -> FAIL
	# FitWidth(51, 3)((400, 4)) -> FAIL
	# FitWidth(51, 4)((400, 4)) -> FAIL
	# FitWidth(51, 5)((400, 4)) -> FAIL
	# FitWidth(51, 6)((400, 4)) -> FAIL
	# FitWidth(51, 7)((400, 4)) -> FAIL
	# FitWidth(52, None)((400, 4)) -> FAIL
	# FitWidth(52, 0)((400, 4)) -> FAIL
	# FitWidth(52, 1)((400, 4)) -> FAIL
	# FitWidth(52, 2)((400, 4)) -> FAIL
	# FitWidth(52, 3)((400, 4)) -> FAIL
	# FitWidth(52, 4)((400, 4)) -> FAIL
	# FitWidth(52, 5)((400, 4)) -> FAIL
	# FitWidth(52, 6)((400, 4)) -> FAIL
	# FitWidth(52, 7)((400, 4)) -> FAIL
	# FitWidth(53, None)((400, 4)) -> FAIL
	# FitWidth(53, 0)((400, 4)) -> FAIL
	# FitWidth(53, 1)((400, 4)) -> FAIL
	# FitWidth(53, 2)((400, 4)) -> FAIL
	# FitWidth(53, 3)((400, 4)) -> FAIL
	# FitWidth(53, 4)((400, 4)) -> FAIL
	# FitWidth(53, 5)((400, 4)) -> FAIL
	# FitWidth(53, 6)((400, 4)) -> FAIL
	# FitWidth(53, 7)((400, 4)) -> FAIL
	# FitWidth(54, None)((400, 4)) -> FAIL
	# FitWidth(54, 0)((400, 4)) -> FAIL
	# FitWidth(54, 1)((400, 4)) -> FAIL
	# FitWidth(54, 2)((400, 4)) -> FAIL
	# FitWidth(54, 3)((400, 4)) -> FAIL
	# FitWidth(54, 4)((400, 4)) -> FAIL
	# FitWidth(54, 5)((400, 4)) -> FAIL
	# FitWidth(54, 6)((400, 4)) -> FAIL
	# FitWidth(54, 7)((400, 4)) -> FAIL
	# FitWidth(55, None)((400, 4)) -> FAIL
	# FitWidth(55, 0)((400, 4)) -> FAIL
	# FitWidth(55, 1)((400, 4)) -> FAIL
	# FitWidth(55, 2)((400, 4)) -> FAIL
	# FitWidth(55, 3)((400, 4)) -> FAIL
	# FitWidth(55, 4)((400, 4)) -> FAIL
	# FitWidth(55, 5)((400, 4)) -> FAIL
	# FitWidth(55, 6)((400, 4)) -> FAIL
	# FitWidth(55, 7)((400, 4)) -> FAIL
	# FitWidth(56, None)((400, 4)) -> FAIL
	# FitWidth(56, 0)((400, 4)) -> FAIL
	# FitWidth(56, 1)((400, 4)) -> FAIL
	# FitWidth(56, 2)((400, 4)) -> FAIL
	# FitWidth(56, 3)((400, 4)) -> FAIL
	# FitWidth(56, 4)((400, 4)) -> FAIL
	# FitWidth(56, 5)((400, 4)) -> FAIL
	# FitWidth(56, 6)((400, 4)) -> FAIL
	# FitWidth(56, 7)((400, 4)) -> FAIL
	# FitWidth(57, None)((400, 4)) -> FAIL
	# FitWidth(57, 0)((400, 4)) -> FAIL
	# FitWidth(57, 1)((400, 4)) -> FAIL
	# FitWidth(57, 2)((400, 4)) -> FAIL
	# FitWidth(57, 3)((400, 4)) -> FAIL
	# FitWidth(57, 4)((400, 4)) -> FAIL
	# FitWidth(57, 5)((400, 4)) -> FAIL
	# FitWidth(57, 6)((400, 4)) -> FAIL
	# FitWidth(57, 7)((400, 4)) -> FAIL
	# FitWidth(58, None)((400, 4)) -> FAIL
	# FitWidth(58, 0)((400, 4)) -> FAIL
	# FitWidth(58, 1)((400, 4)) -> FAIL
	# FitWidth(58, 2)((400, 4)) -> FAIL
	# FitWidth(58, 3)((400, 4)) -> FAIL
	# FitWidth(58, 4)((400, 4)) -> FAIL
	# FitWidth(58, 5)((400, 4)) -> FAIL
	# FitWidth(58, 6)((400, 4)) -> FAIL
	# FitWidth(58, 7)((400, 4)) -> FAIL
	# FitWidth(59, None)((400, 4)) -> FAIL
	# FitWidth(59, 0)((400, 4)) -> FAIL
	# FitWidth(59, 1)((400, 4)) -> FAIL
	# FitWidth(59, 2)((400, 4)) -> FAIL
	# FitWidth(59, 3)((400, 4)) -> FAIL
	# FitWidth(59, 4)((400, 4)) -> FAIL
	# FitWidth(59, 5)((400, 4)) -> FAIL
	# FitWidth(59, 6)((400, 4)) -> FAIL
	# FitWidth(59, 7)((400, 4)) -> FAIL
	# FitWidth(60, None)((400, 4)) -> FAIL
	# FitWidth(60, 0)((400, 4)) -> FAIL
	# FitWidth(60, 1)((400, 4)) -> FAIL
	# FitWidth(60, 2)((400, 4)) -> FAIL
	# FitWidth(60, 3)((400, 4)) -> FAIL
	# FitWidth(60, 4)((400, 4)) -> FAIL
	# FitWidth(60, 5)((400, 4)) -> FAIL
	# FitWidth(60, 6)((400, 4)) -> FAIL
	# FitWidth(60, 7)((400, 4)) -> FAIL
	# FitWidth(61, None)((400, 4)) -> FAIL
	# FitWidth(61, 0)((400, 4)) -> FAIL
	# FitWidth(61, 1)((400, 4)) -> FAIL
	# FitWidth(61, 2)((400, 4)) -> FAIL
	# FitWidth(61, 3)((400, 4)) -> FAIL
	# FitWidth(61, 4)((400, 4)) -> FAIL
	# FitWidth(61, 5)((400, 4)) -> FAIL
	# FitWidth(61, 6)((400, 4)) -> FAIL
	# FitWidth(61, 7)((400, 4)) -> FAIL
	# FitWidth(62, None)((400, 4)) -> FAIL
	# FitWidth(62, 0)((400, 4)) -> FAIL
	# FitWidth(62, 1)((400, 4)) -> FAIL
	# FitWidth(62, 2)((400, 4)) -> FAIL
	# FitWidth(62, 3)((400, 4)) -> FAIL
	# FitWidth(62, 4)((400, 4)) -> FAIL
	# FitWidth(62, 5)((400, 4)) -> FAIL
	# FitWidth(62, 6)((400, 4)) -> FAIL
	# FitWidth(62, 7)((400, 4)) -> FAIL
	# FitWidth(63, None)((400, 4)) -> FAIL
	# FitWidth(63, 0)((400, 4)) -> FAIL
	# FitWidth(63, 1)((400, 4)) -> FAIL
	# FitWidth(63, 2)((400, 4)) -> FAIL
	# FitWidth(63, 3)((400, 4)) -> FAIL
	# FitWidth(63, 4)((400, 4)) -> FAIL
	# FitWidth(63, 5)((400, 4)) -> FAIL
	# FitWidth(63, 6)((400, 4)) -> FAIL
	# FitWidth(63, 7)((400, 4)) -> FAIL
	# FitWidth(64, None)((400, 4)) -> FAIL
	# FitWidth(64, 0)((400, 4)) -> FAIL
	# FitWidth(64, 1)((400, 4)) -> FAIL
	# FitWidth(64, 2)((400, 4)) -> FAIL
	# FitWidth(64, 3)((400, 4)) -> FAIL
	# FitWidth(64, 4)((400, 4)) -> FAIL
	# FitWidth(64, 5)((400, 4)) -> FAIL
	# FitWidth(64, 6)((400, 4)) -> FAIL
	# FitWidth(64, 7)((400, 4)) -> FAIL
	# FitWidth(65, None)((400, 4)) -> FAIL
	# FitWidth(65, 0)((400, 4)) -> FAIL
	# FitWidth(65, 1)((400, 4)) -> FAIL
	# FitWidth(65, 2)((400, 4)) -> FAIL
	# FitWidth(65, 3)((400, 4)) -> FAIL
	# FitWidth(65, 4)((400, 4)) -> FAIL
	# FitWidth(65, 5)((400, 4)) -> FAIL
	# FitWidth(65, 6)((400, 4)) -> FAIL
	# FitWidth(65, 7)((400, 4)) -> FAIL
	# FitWidth(66, None)((400, 4)) -> FAIL
	# FitWidth(66, 0)((400, 4)) -> FAIL
	# FitWidth(66, 1)((400, 4)) -> FAIL
	# FitWidth(66, 2)((400, 4)) -> FAIL
	# FitWidth(66, 3)((400, 4)) -> FAIL
	# FitWidth(66, 4)((400, 4)) -> FAIL
	# FitWidth(66, 5)((400, 4)) -> FAIL
	# FitWidth(66, 6)((400, 4)) -> FAIL
	# FitWidth(66, 7)((400, 4)) -> FAIL
	# FitWidth(67, None)((400, 4)) -> FAIL
	# FitWidth(67, 0)((400, 4)) -> FAIL
	# FitWidth(67, 1)((400, 4)) -> FAIL
	# FitWidth(67, 2)((400, 4)) -> FAIL
	# FitWidth(67, 3)((400, 4)) -> FAIL
	# FitWidth(67, 4)((400, 4)) -> FAIL
	# FitWidth(67, 5)((400, 4)) -> FAIL
	# FitWidth(67, 6)((400, 4)) -> FAIL
	# FitWidth(67, 7)((400, 4)) -> FAIL
	# FitWidth(68, None)((400, 4)) -> FAIL
	# FitWidth(68, 0)((400, 4)) -> FAIL
	# FitWidth(68, 1)((400, 4)) -> FAIL
	# FitWidth(68, 2)((400, 4)) -> FAIL
	# FitWidth(68, 3)((400, 4)) -> FAIL
	# FitWidth(68, 4)((400, 4)) -> FAIL
	# FitWidth(68, 5)((400, 4)) -> FAIL
	# FitWidth(68, 6)((400, 4)) -> FAIL
	# FitWidth(68, 7)((400, 4)) -> FAIL
	# FitWidth(69, None)((400, 4)) -> FAIL
	# FitWidth(69, 0)((400, 4)) -> FAIL
	# FitWidth(69, 1)((400, 4)) -> FAIL
	# FitWidth(69, 2)((400, 4)) -> FAIL
	# FitWidth(69, 3)((400, 4)) -> FAIL
	# FitWidth(69, 4)((400, 4)) -> FAIL
	# FitWidth(69, 5)((400, 4)) -> FAIL
	# FitWidth(69, 6)((400, 4)) -> FAIL
	# FitWidth(69, 7)((400, 4)) -> FAIL
	# FitWidth(70, None)((400, 4)) -> FAIL
	# FitWidth(70, 0)((400, 4)) -> FAIL
	# FitWidth(70, 1)((400, 4)) -> FAIL
	# FitWidth(70, 2)((400, 4)) -> FAIL
	# FitWidth(70, 3)((400, 4)) -> FAIL
	# FitWidth(70, 4)((400, 4)) -> FAIL
	# FitWidth(70, 5)((400, 4)) -> FAIL
	# FitWidth(70, 6)((400, 4)) -> FAIL
	# FitWidth(70, 7)((400, 4)) -> FAIL
	# FitWidth(71, None)((400, 4)) -> FAIL
	# FitWidth(71, 0)((400, 4)) -> FAIL
	# FitWidth(71, 1)((400, 4)) -> FAIL
	# FitWidth(71, 2)((400, 4)) -> FAIL
	# FitWidth(71, 3)((400, 4)) -> FAIL
	# FitWidth(71, 4)((400, 4)) -> FAIL
	# FitWidth(71, 5)((400, 4)) -> FAIL
	# FitWidth(71, 6)((400, 4)) -> FAIL
	# FitWidth(71, 7)((400, 4)) -> FAIL
	# FitWidth(72, None)((400, 4)) -> FAIL
	# FitWidth(72, 0)((400, 4)) -> FAIL
	# FitWidth(72, 1)((400, 4)) -> FAIL
	# FitWidth(72, 2)((400, 4)) -> FAIL
	# FitWidth(72, 3)((400, 4)) -> FAIL
	# FitWidth(72, 4)((400, 4)) -> FAIL
	# FitWidth(72, 5)((400, 4)) -> FAIL
	# FitWidth(72, 6)((400, 4)) -> FAIL
	# FitWidth(72, 7)((400, 4)) -> FAIL
	# FitWidth(73, None)((400, 4)) -> FAIL
	# FitWidth(73, 0)((400, 4)) -> FAIL
	# FitWidth(73, 1)((400, 4)) -> FAIL
	# FitWidth(73, 2)((400, 4)) -> FAIL
	# FitWidth(73, 3)((400, 4)) -> FAIL
	# FitWidth(73, 4)((400, 4)) -> FAIL
	# FitWidth(73, 5)((400, 4)) -> FAIL
	# FitWidth(73, 6)((400, 4)) -> FAIL
	# FitWidth(73, 7)((400, 4)) -> FAIL
	# FitWidth(74, None)((400, 4)) -> FAIL
	# FitWidth(74, 0)((400, 4)) -> FAIL
	# FitWidth(74, 1)((400, 4)) -> FAIL
	# FitWidth(74, 2)((400, 4)) -> FAIL
	# FitWidth(74, 3)((400, 4)) -> FAIL
	# FitWidth(74, 4)((400, 4)) -> FAIL
	# FitWidth(74, 5)((400, 4)) -> FAIL
	# FitWidth(74, 6)((400, 4)) -> FAIL
	# FitWidth(74, 7)((400, 4)) -> FAIL
	# FitWidth(75, None)((400, 4)) -> FAIL
	# FitWidth(75, 0)((400, 4)) -> FAIL
	# FitWidth(75, 1)((400, 4)) -> FAIL
	# FitWidth(75, 2)((400, 4)) -> FAIL
	# FitWidth(75, 3)((400, 4)) -> FAIL
	# FitWidth(75, 4)((400, 4)) -> FAIL
	# FitWidth(75, 5)((400, 4)) -> FAIL
	# FitWidth(75, 6)((400, 4)) -> FAIL
	# FitWidth(75, 7)((400, 4)) -> FAIL
	# FitWidth(76, None)((400, 4)) -> FAIL
	# FitWidth(76, 0)((400, 4)) -> FAIL
	# FitWidth(76, 1)((400, 4)) -> FAIL
	# FitWidth(76, 2)((400, 4)) -> FAIL
	# FitWidth(76, 3)((400, 4)) -> FAIL
	# FitWidth(76, 4)((400, 4)) -> FAIL
	# FitWidth(76, 5)((400, 4)) -> FAIL
	# FitWidth(76, 6)((400, 4)) -> FAIL
	# FitWidth(76, 7)((400, 4)) -> FAIL
	# FitWidth(77, None)((400, 4)) -> FAIL
	# FitWidth(77, 0)((400, 4)) -> FAIL
	# FitWidth(77, 1)((400, 4)) -> FAIL
	# FitWidth(77, 2)((400, 4)) -> FAIL
	# FitWidth(77, 3)((400, 4)) -> FAIL
	# FitWidth(77, 4)((400, 4)) -> FAIL
	# FitWidth(77, 5)((400, 4)) -> FAIL
	# FitWidth(77, 6)((400, 4)) -> FAIL
	# FitWidth(77, 7)((400, 4)) -> FAIL
	# FitWidth(78, None)((400, 4)) -> FAIL
	# FitWidth(78, 0)((400, 4)) -> FAIL
	# FitWidth(78, 1)((400, 4)) -> FAIL
	# FitWidth(78, 2)((400, 4)) -> FAIL
	# FitWidth(78, 3)((400, 4)) -> FAIL
	# FitWidth(78, 4)((400, 4)) -> FAIL
	# FitWidth(78, 5)((400, 4)) -> FAIL
	# FitWidth(78, 6)((400, 4)) -> FAIL
	# FitWidth(78, 7)((400, 4)) -> FAIL
	# FitWidth(79, None)((400, 4)) -> FAIL
	# FitWidth(79, 0)((400, 4)) -> FAIL
	# FitWidth(79, 1)((400, 4)) -> FAIL
	# FitWidth(79, 2)((400, 4)) -> FAIL
	# FitWidth(79, 3)((400, 4)) -> FAIL
	# FitWidth(79, 4)((400, 4)) -> FAIL
	# FitWidth(79, 5)((400, 4)) -> FAIL
	# FitWidth(79, 6)((400, 4)) -> FAIL
	# FitWidth(79, 7)((400, 4)) -> FAIL
	# FitWidth(80, None)((400, 4)) -> FAIL
	# FitWidth(80, 0)((400, 4)) -> FAIL
	# FitWidth(80, 1)((400, 4)) -> FAIL
	# FitWidth(80, 2)((400, 4)) -> FAIL
	# FitWidth(80, 3)((400, 4)) -> FAIL
	# FitWidth(80, 4)((400, 4)) -> FAIL
	# FitWidth(80, 5)((400, 4)) -> FAIL
	# FitWidth(80, 6)((400, 4)) -> FAIL
	# FitWidth(80, 7)((400, 4)) -> FAIL
	# FitWidth(81, None)((400, 4)) -> FAIL
	# FitWidth(81, 0)((400, 4)) -> FAIL
	# FitWidth(81, 1)((400, 4)) -> FAIL
	# FitWidth(81, 2)((400, 4)) -> FAIL
	# FitWidth(81, 3)((400, 4)) -> FAIL
	# FitWidth(81, 4)((400, 4)) -> FAIL
	# FitWidth(81, 5)((400, 4)) -> FAIL
	# FitWidth(81, 6)((400, 4)) -> FAIL
	# FitWidth(81, 7)((400, 4)) -> FAIL
	# FitWidth(82, None)((400, 4)) -> FAIL
	# FitWidth(82, 0)((400, 4)) -> FAIL
	# FitWidth(82, 1)((400, 4)) -> FAIL
	# FitWidth(82, 2)((400, 4)) -> FAIL
	# FitWidth(82, 3)((400, 4)) -> FAIL
	# FitWidth(82, 4)((400, 4)) -> FAIL
	# FitWidth(82, 5)((400, 4)) -> FAIL
	# FitWidth(82, 6)((400, 4)) -> FAIL
	# FitWidth(82, 7)((400, 4)) -> FAIL
	# FitWidth(83, None)((400, 4)) -> FAIL
	# FitWidth(83, 0)((400, 4)) -> FAIL
	# FitWidth(83, 1)((400, 4)) -> FAIL
	# FitWidth(83, 2)((400, 4)) -> FAIL
	# FitWidth(83, 3)((400, 4)) -> FAIL
	# FitWidth(83, 4)((400, 4)) -> FAIL
	# FitWidth(83, 5)((400, 4)) -> FAIL
	# FitWidth(83, 6)((400, 4)) -> FAIL
	# FitWidth(83, 7)((400, 4)) -> FAIL
	# FitWidth(84, None)((400, 4)) -> FAIL
	# FitWidth(84, 0)((400, 4)) -> FAIL
	# FitWidth(84, 1)((400, 4)) -> FAIL
	# FitWidth(84, 2)((400, 4)) -> FAIL
	# FitWidth(84, 3)((400, 4)) -> FAIL
	# FitWidth(84, 4)((400, 4)) -> FAIL
	# FitWidth(84, 5)((400, 4)) -> FAIL
	# FitWidth(84, 6)((400, 4)) -> FAIL
	# FitWidth(84, 7)((400, 4)) -> FAIL
	# FitWidth(85, None)((400, 4)) -> FAIL
	# FitWidth(85, 0)((400, 4)) -> FAIL
	# FitWidth(85, 1)((400, 4)) -> FAIL
	# FitWidth(85, 2)((400, 4)) -> FAIL
	# FitWidth(85, 3)((400, 4)) -> FAIL
	# FitWidth(85, 4)((400, 4)) -> FAIL
	# FitWidth(85, 5)((400, 4)) -> FAIL
	# FitWidth(85, 6)((400, 4)) -> FAIL
	# FitWidth(85, 7)((400, 4)) -> FAIL
	# FitWidth(86, None)((400, 4)) -> FAIL
	# FitWidth(86, 0)((400, 4)) -> FAIL
	# FitWidth(86, 1)((400, 4)) -> FAIL
	# FitWidth(86, 2)((400, 4)) -> FAIL
	# FitWidth(86, 3)((400, 4)) -> FAIL
	# FitWidth(86, 4)((400, 4)) -> FAIL
	# FitWidth(86, 5)((400, 4)) -> FAIL
	# FitWidth(86, 6)((400, 4)) -> FAIL
	# FitWidth(86, 7)((400, 4)) -> FAIL
	# FitWidth(87, None)((400, 4)) -> FAIL
	# FitWidth(87, 0)((400, 4)) -> FAIL
	# FitWidth(87, 1)((400, 4)) -> FAIL
	# FitWidth(87, 2)((400, 4)) -> FAIL
	# FitWidth(87, 3)((400, 4)) -> FAIL
	# FitWidth(87, 4)((400, 4)) -> FAIL
	# FitWidth(87, 5)((400, 4)) -> FAIL
	# FitWidth(87, 6)((400, 4)) -> FAIL
	# FitWidth(87, 7)((400, 4)) -> FAIL
	# FitWidth(88, None)((400, 4)) -> FAIL
	# FitWidth(88, 0)((400, 4)) -> FAIL
	# FitWidth(88, 1)((400, 4)) -> FAIL
	# FitWidth(88, 2)((400, 4)) -> FAIL
	# FitWidth(88, 3)((400, 4)) -> FAIL
	# FitWidth(88, 4)((400, 4)) -> FAIL
	# FitWidth(88, 5)((400, 4)) -> FAIL
	# FitWidth(88, 6)((400, 4)) -> FAIL
	# FitWidth(88, 7)((400, 4)) -> FAIL
	# FitWidth(89, None)((400, 4)) -> FAIL
	# FitWidth(89, 0)((400, 4)) -> FAIL
	# FitWidth(89, 1)((400, 4)) -> FAIL
	# FitWidth(89, 2)((400, 4)) -> FAIL
	# FitWidth(89, 3)((400, 4)) -> FAIL
	# FitWidth(89, 4)((400, 4)) -> FAIL
	# FitWidth(89, 5)((400, 4)) -> FAIL
	# FitWidth(89, 6)((400, 4)) -> FAIL
	# FitWidth(89, 7)((400, 4)) -> FAIL
	# FitWidth(90, None)((400, 4)) -> FAIL
	# FitWidth(90, 0)((400, 4)) -> FAIL
	# FitWidth(90, 1)((400, 4)) -> FAIL
	# FitWidth(90, 2)((400, 4)) -> FAIL
	# FitWidth(90, 3)((400, 4)) -> FAIL
	# FitWidth(90, 4)((400, 4)) -> FAIL
	# FitWidth(90, 5)((400, 4)) -> FAIL
	# FitWidth(90, 6)((400, 4)) -> FAIL
	# FitWidth(90, 7)((400, 4)) -> FAIL
	# FitWidth(91, None)((400, 4)) -> FAIL
	# FitWidth(91, 0)((400, 4)) -> FAIL
	# FitWidth(91, 1)((400, 4)) -> FAIL
	# FitWidth(91, 2)((400, 4)) -> FAIL
	# FitWidth(91, 3)((400, 4)) -> FAIL
	# FitWidth(91, 4)((400, 4)) -> FAIL
	# FitWidth(91, 5)((400, 4)) -> FAIL
	# FitWidth(91, 6)((400, 4)) -> FAIL
	# FitWidth(91, 7)((400, 4)) -> FAIL
	# FitWidth(92, None)((400, 4)) -> FAIL
	# FitWidth(92, 0)((400, 4)) -> FAIL
	# FitWidth(92, 1)((400, 4)) -> FAIL
	# FitWidth(92, 2)((400, 4)) -> FAIL
	# FitWidth(92, 3)((400, 4)) -> FAIL
	# FitWidth(92, 4)((400, 4)) -> FAIL
	# FitWidth(92, 5)((400, 4)) -> FAIL
	# FitWidth(92, 6)((400, 4)) -> FAIL
	# FitWidth(92, 7)((400, 4)) -> FAIL
	# FitWidth(93, None)((400, 4)) -> FAIL
	# FitWidth(93, 0)((400, 4)) -> FAIL
	# FitWidth(93, 1)((400, 4)) -> FAIL
	# FitWidth(93, 2)((400, 4)) -> FAIL
	# FitWidth(93, 3)((400, 4)) -> FAIL
	# FitWidth(93, 4)((400, 4)) -> FAIL
	# FitWidth(93, 5)((400, 4)) -> FAIL
	# FitWidth(93, 6)((400, 4)) -> FAIL
	# FitWidth(93, 7)((400, 4)) -> FAIL
	# FitWidth(94, None)((400, 4)) -> FAIL
	# FitWidth(94, 0)((400, 4)) -> FAIL
	# FitWidth(94, 1)((400, 4)) -> FAIL
	# FitWidth(94, 2)((400, 4)) -> FAIL
	# FitWidth(94, 3)((400, 4)) -> FAIL
	# FitWidth(94, 4)((400, 4)) -> FAIL
	# FitWidth(94, 5)((400, 4)) -> FAIL
	# FitWidth(94, 6)((400, 4)) -> FAIL
	# FitWidth(94, 7)((400, 4)) -> FAIL
	# FitWidth(95, None)((400, 4)) -> FAIL
	# FitWidth(95, 0)((400, 4)) -> FAIL
	# FitWidth(95, 1)((400, 4)) -> FAIL
	# FitWidth(95, 2)((400, 4)) -> FAIL
	# FitWidth(95, 3)((400, 4)) -> FAIL
	# FitWidth(95, 4)((400, 4)) -> FAIL
	# FitWidth(95, 5)((400, 4)) -> FAIL
	# FitWidth(95, 6)((400, 4)) -> FAIL
	# FitWidth(95, 7)((400, 4)) -> FAIL
	# FitWidth(96, None)((400, 4)) -> FAIL
	# FitWidth(96, 0)((400, 4)) -> FAIL
	# FitWidth(96, 1)((400, 4)) -> FAIL
	# FitWidth(96, 2)((400, 4)) -> FAIL
	# FitWidth(96, 3)((400, 4)) -> FAIL
	# FitWidth(96, 4)((400, 4)) -> FAIL
	# FitWidth(96, 5)((400, 4)) -> FAIL
	# FitWidth(96, 6)((400, 4)) -> FAIL
	# FitWidth(96, 7)((400, 4)) -> FAIL
	# FitWidth(97, None)((400, 4)) -> FAIL
	# FitWidth(97, 0)((400, 4)) -> FAIL
	# FitWidth(97, 1)((400, 4)) -> FAIL
	# FitWidth(97, 2)((400, 4)) -> FAIL
	# FitWidth(97, 3)((400, 4)) -> FAIL
	# FitWidth(97, 4)((400, 4)) -> FAIL
	# FitWidth(97, 5)((400, 4)) -> FAIL
	# FitWidth(97, 6)((400, 4)) -> FAIL
	# FitWidth(97, 7)((400, 4)) -> FAIL
	# FitWidth(98, None)((400, 4)) -> FAIL
	# FitWidth(98, 0)((400, 4)) -> FAIL
	# FitWidth(98, 1)((400, 4)) -> FAIL
	# FitWidth(98, 2)((400, 4)) -> FAIL
	# FitWidth(98, 3)((400, 4)) -> FAIL
	# FitWidth(98, 4)((400, 4)) -> FAIL
	# FitWidth(98, 5)((400, 4)) -> FAIL
	# FitWidth(98, 6)((400, 4)) -> FAIL
	# FitWidth(98, 7)((400, 4)) -> FAIL
	# FitWidth(99, None)((400, 4)) -> FAIL
	# FitWidth(99, 0)((400, 4)) -> FAIL
	# FitWidth(99, 1)((400, 4)) -> FAIL
	# FitWidth(99, 2)((400, 4)) -> FAIL
	# FitWidth(99, 3)((400, 4)) -> FAIL
	# FitWidth(99, 4)((400, 4)) -> FAIL
	# FitWidth(99, 5)((400, 4)) -> FAIL
	# FitWidth(99, 6)((400, 4)) -> FAIL
	# FitWidth(99, 7)((400, 4)) -> FAIL
	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, None)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 0)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 2)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 3)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 4)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 5)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 6)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(100, 7)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, None)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 0)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 2)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 3)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 4)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 5)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 6)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(101, 7)
	res = op(img)
	assert res.size == (101, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, None)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 0)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 2)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 3)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 4)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 5)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 6)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(102, 7)
	res = op(img)
	assert res.size == (102, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, None)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 0)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 2)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 3)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 4)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 5)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 6)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(103, 7)
	res = op(img)
	assert res.size == (103, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, None)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 0)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 2)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 3)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 4)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 5)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 6)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(104, 7)
	res = op(img)
	assert res.size == (104, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, None)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 0)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 2)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 3)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 4)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 5)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 6)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(105, 7)
	res = op(img)
	assert res.size == (105, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, None)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 0)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 2)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 3)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 4)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 5)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 6)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(106, 7)
	res = op(img)
	assert res.size == (106, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, None)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 0)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 2)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 3)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 4)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 5)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 6)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(107, 7)
	res = op(img)
	assert res.size == (107, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, None)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 0)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 2)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 3)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 4)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 5)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 6)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(108, 7)
	res = op(img)
	assert res.size == (108, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, None)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 0)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 2)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 3)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 4)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 5)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 6)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(109, 7)
	res = op(img)
	assert res.size == (109, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, None)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 0)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 2)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 3)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 4)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 5)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 6)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(110, 7)
	res = op(img)
	assert res.size == (110, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, None)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 0)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 2)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 3)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 4)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 5)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 6)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(111, 7)
	res = op(img)
	assert res.size == (111, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, None)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 0)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 2)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 3)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 4)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 5)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 6)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(112, 7)
	res = op(img)
	assert res.size == (112, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, None)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 0)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 2)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 3)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 4)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 5)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 6)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(113, 7)
	res = op(img)
	assert res.size == (113, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, None)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 0)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 2)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 3)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 4)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 5)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 6)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(114, 7)
	res = op(img)
	assert res.size == (114, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, None)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 0)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 2)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 3)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 4)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 5)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 6)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(115, 7)
	res = op(img)
	assert res.size == (115, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, None)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 0)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 2)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 3)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 4)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 5)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 6)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(116, 7)
	res = op(img)
	assert res.size == (116, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, None)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 0)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 2)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 3)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 4)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 5)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 6)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(117, 7)
	res = op(img)
	assert res.size == (117, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, None)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 0)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 2)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 3)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 4)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 5)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 6)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(118, 7)
	res = op(img)
	assert res.size == (118, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, None)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 0)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 2)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 3)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 4)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 5)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 6)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(119, 7)
	res = op(img)
	assert res.size == (119, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, None)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 0)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 2)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 3)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 4)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 5)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 6)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(120, 7)
	res = op(img)
	assert res.size == (120, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, None)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 0)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 2)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 3)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 4)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 5)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 6)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(121, 7)
	res = op(img)
	assert res.size == (121, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, None)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 0)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 2)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 3)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 4)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 5)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 6)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(122, 7)
	res = op(img)
	assert res.size == (122, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, None)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 0)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 2)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 3)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 4)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 5)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 6)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(123, 7)
	res = op(img)
	assert res.size == (123, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, None)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 0)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 2)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 3)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 4)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 5)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 6)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(124, 7)
	res = op(img)
	assert res.size == (124, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, None)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 0)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 2)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 3)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 4)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 5)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 6)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(125, 7)
	res = op(img)
	assert res.size == (125, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, None)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 0)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 2)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 3)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 4)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 5)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 6)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(126, 7)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, None)
	res = op(img)
	assert res.size == (127, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 0)
	res = op(img)
	assert res.size == (127, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 2)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 3)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 4)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 5)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 6)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(127, 7)
	res = op(img)
	assert res.size == (126, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, None)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 0)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 2)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 3)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 4)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 5)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 6)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(128, 7)
	res = op(img)
	assert res.size == (128, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, None)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 0)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 2)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 3)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 4)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 5)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 6)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(129, 7)
	res = op(img)
	assert res.size == (129, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, None)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 0)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 2)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 3)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 4)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 5)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 6)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(130, 7)
	res = op(img)
	assert res.size == (130, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, None)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 0)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 2)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 3)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 4)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 5)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 6)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(131, 7)
	res = op(img)
	assert res.size == (131, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, None)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 0)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 2)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 3)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 4)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 5)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 6)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(132, 7)
	res = op(img)
	assert res.size == (132, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, None)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 0)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 2)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 3)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 4)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 5)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 6)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(133, 7)
	res = op(img)
	assert res.size == (133, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, None)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 0)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 2)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 3)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 4)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 5)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 6)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(134, 7)
	res = op(img)
	assert res.size == (134, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, None)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 0)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 2)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 3)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 4)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 5)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 6)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(135, 7)
	res = op(img)
	assert res.size == (135, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, None)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 0)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 2)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 3)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 4)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 5)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 6)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(136, 7)
	res = op(img)
	assert res.size == (136, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, None)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 0)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 2)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 3)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 4)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 5)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 6)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(137, 7)
	res = op(img)
	assert res.size == (137, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, None)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 0)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 2)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 3)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 4)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 5)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 6)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(138, 7)
	res = op(img)
	assert res.size == (138, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, None)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 0)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 2)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 3)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 4)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 5)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 6)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(139, 7)
	res = op(img)
	assert res.size == (139, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, None)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 0)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 2)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 3)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 4)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 5)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 6)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(140, 7)
	res = op(img)
	assert res.size == (140, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, None)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 0)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 2)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 3)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 4)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 5)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 6)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(141, 7)
	res = op(img)
	assert res.size == (141, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, None)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 0)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 2)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 3)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 4)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 5)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 6)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(142, 7)
	res = op(img)
	assert res.size == (142, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, None)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 0)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 2)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 3)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 4)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 5)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 6)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(143, 7)
	res = op(img)
	assert res.size == (143, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, None)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 0)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 2)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 3)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 4)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 5)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 6)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(144, 7)
	res = op(img)
	assert res.size == (144, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, None)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 0)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 2)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 3)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 4)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 5)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 6)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(145, 7)
	res = op(img)
	assert res.size == (145, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, None)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 0)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 2)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 3)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 4)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 5)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 6)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(146, 7)
	res = op(img)
	assert res.size == (146, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, None)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 0)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 2)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 3)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 4)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 5)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 6)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(147, 7)
	res = op(img)
	assert res.size == (147, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, None)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 0)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 2)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 3)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 4)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 5)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 6)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(148, 7)
	res = op(img)
	assert res.size == (148, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, None)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 0)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 2)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 3)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 4)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 5)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 6)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(149, 7)
	res = op(img)
	assert res.size == (149, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, None)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 0)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 2)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 3)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 4)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 5)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 6)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(150, 7)
	res = op(img)
	assert res.size == (150, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, None)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 0)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 2)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 3)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 4)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 5)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 6)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(151, 7)
	res = op(img)
	assert res.size == (151, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, None)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 0)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 2)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 3)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 4)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 5)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 6)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(152, 7)
	res = op(img)
	assert res.size == (152, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, None)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 0)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 2)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 3)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 4)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 5)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 6)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(153, 7)
	res = op(img)
	assert res.size == (153, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, None)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 0)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 2)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 3)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 4)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 5)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 6)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(154, 7)
	res = op(img)
	assert res.size == (154, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, None)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 0)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 2)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 3)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 4)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 5)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 6)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(155, 7)
	res = op(img)
	assert res.size == (155, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, None)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 0)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 2)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 3)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 4)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 5)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 6)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(156, 7)
	res = op(img)
	assert res.size == (156, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, None)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 0)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 2)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 3)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 4)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 5)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 6)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(157, 7)
	res = op(img)
	assert res.size == (157, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, None)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 0)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 2)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 3)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 4)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 5)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 6)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(158, 7)
	res = op(img)
	assert res.size == (158, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, None)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 0)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 2)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 3)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 4)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 5)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 6)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(159, 7)
	res = op(img)
	assert res.size == (159, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, None)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 0)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 2)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 3)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 4)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 5)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 6)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(160, 7)
	res = op(img)
	assert res.size == (160, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, None)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 0)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 2)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 3)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 4)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 5)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 6)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(161, 7)
	res = op(img)
	assert res.size == (161, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, None)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 0)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 2)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 3)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 4)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 5)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 6)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(162, 7)
	res = op(img)
	assert res.size == (162, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, None)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 0)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 2)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 3)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 4)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 5)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 6)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(163, 7)
	res = op(img)
	assert res.size == (163, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, None)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 0)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 2)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 3)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 4)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 5)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 6)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(164, 7)
	res = op(img)
	assert res.size == (164, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, None)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 0)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 2)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 3)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 4)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 5)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 6)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(165, 7)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, None)
	res = op(img)
	assert res.size == (166, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 0)
	res = op(img)
	assert res.size == (166, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 2)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 3)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 4)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 5)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 6)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(166, 7)
	res = op(img)
	assert res.size == (165, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, None)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 0)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 2)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 3)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 4)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 5)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 6)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(167, 7)
	res = op(img)
	assert res.size == (167, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, None)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 0)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 2)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 3)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 4)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 5)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 6)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(168, 7)
	res = op(img)
	assert res.size == (168, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, None)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 0)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 2)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 3)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 4)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 5)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 6)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(169, 7)
	res = op(img)
	assert res.size == (169, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, None)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 0)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 2)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 3)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 4)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 5)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 6)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(170, 7)
	res = op(img)
	assert res.size == (170, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, None)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 0)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 2)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 3)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 4)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 5)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 6)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(171, 7)
	res = op(img)
	assert res.size == (171, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, None)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 0)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 2)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 3)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 4)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 5)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 6)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(172, 7)
	res = op(img)
	assert res.size == (172, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, None)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 0)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 2)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 3)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 4)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 5)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 6)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(173, 7)
	res = op(img)
	assert res.size == (173, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, None)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 0)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 2)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 3)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 4)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 5)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 6)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(174, 7)
	res = op(img)
	assert res.size == (174, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, None)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 0)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 2)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 3)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 4)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 5)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 6)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(175, 7)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, None)
	res = op(img)
	assert res.size == (176, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 0)
	res = op(img)
	assert res.size == (176, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 2)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 3)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 4)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 5)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 6)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(176, 7)
	res = op(img)
	assert res.size == (175, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, None)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 0)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 2)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 3)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 4)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 5)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 6)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(177, 7)
	res = op(img)
	assert res.size == (177, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, None)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 0)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 2)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 3)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 4)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 5)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 6)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(178, 7)
	res = op(img)
	assert res.size == (178, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, None)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 0)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 2)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 3)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 4)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 5)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 6)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(179, 7)
	res = op(img)
	assert res.size == (179, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, None)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 0)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 2)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 3)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 4)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 5)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 6)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(180, 7)
	res = op(img)
	assert res.size == (180, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, None)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 0)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 2)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 3)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 4)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 5)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 6)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(181, 7)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, None)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 0)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 2)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 3)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 4)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 5)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 6)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(182, 7)
	res = op(img)
	assert res.size == (181, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, None)
	res = op(img)
	assert res.size == (183, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 0)
	res = op(img)
	assert res.size == (183, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 2)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 3)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 4)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 5)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 6)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(183, 7)
	res = op(img)
	assert res.size == (182, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, None)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 0)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 2)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 3)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 4)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 5)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 6)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(184, 7)
	res = op(img)
	assert res.size == (184, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, None)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 0)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 2)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 3)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 4)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 5)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 6)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(185, 7)
	res = op(img)
	assert res.size == (185, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, None)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 0)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 2)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 3)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 4)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 5)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 6)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(186, 7)
	res = op(img)
	assert res.size == (186, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, None)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 0)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 2)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 3)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 4)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 5)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 6)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(187, 7)
	res = op(img)
	assert res.size == (187, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, None)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 0)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 2)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 3)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 4)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 5)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 6)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(188, 7)
	res = op(img)
	assert res.size == (188, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, None)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 0)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 2)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 3)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 4)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 5)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 6)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(189, 7)
	res = op(img)
	assert res.size == (189, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, None)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 0)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 2)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 3)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 4)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 5)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 6)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(190, 7)
	res = op(img)
	assert res.size == (190, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, None)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 0)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 2)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 3)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 4)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 5)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 6)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(191, 7)
	res = op(img)
	assert res.size == (191, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, None)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 0)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 2)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 3)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 4)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 5)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 6)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(192, 7)
	res = op(img)
	assert res.size == (192, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, None)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 0)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 2)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 3)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 4)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 5)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 6)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(193, 7)
	res = op(img)
	assert res.size == (193, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, None)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 0)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 2)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 3)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 4)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 5)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 6)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(194, 7)
	res = op(img)
	assert res.size == (194, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, None)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 0)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 2)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 3)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 4)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 5)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 6)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(195, 7)
	res = op(img)
	assert res.size == (195, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, None)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 0)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 2)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 3)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 4)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 5)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 6)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(196, 7)
	res = op(img)
	assert res.size == (196, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, None)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 0)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 2)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 3)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 4)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 5)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 6)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(197, 7)
	res = op(img)
	assert res.size == (197, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, None)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 0)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 2)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 3)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 4)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 5)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 6)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(198, 7)
	res = op(img)
	assert res.size == (198, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, None)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 0)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 2)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 3)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 4)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 5)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 6)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(199, 7)
	res = op(img)
	assert res.size == (199, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, None)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 0)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 3)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 4)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 5)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 6)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(200, 7)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, None)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 0)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 3)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 4)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 5)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 6)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(201, 7)
	res = op(img)
	assert res.size == (201, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, None)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 0)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 3)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 4)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 5)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 6)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(202, 7)
	res = op(img)
	assert res.size == (202, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, None)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 0)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 3)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 4)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 5)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 6)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(203, 7)
	res = op(img)
	assert res.size == (203, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, None)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 0)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 3)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 4)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 5)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 6)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(204, 7)
	res = op(img)
	assert res.size == (204, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, None)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 0)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 3)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 4)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 5)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 6)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(205, 7)
	res = op(img)
	assert res.size == (205, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, None)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 0)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 3)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 4)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 5)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 6)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(206, 7)
	res = op(img)
	assert res.size == (206, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, None)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 0)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 3)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 4)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 5)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 6)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(207, 7)
	res = op(img)
	assert res.size == (207, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, None)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 0)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 3)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 4)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 5)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 6)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(208, 7)
	res = op(img)
	assert res.size == (208, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, None)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 0)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 3)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 4)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 5)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 6)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(209, 7)
	res = op(img)
	assert res.size == (209, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, None)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 0)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 3)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 4)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 5)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 6)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(210, 7)
	res = op(img)
	assert res.size == (210, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, None)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 0)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 3)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 4)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 5)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 6)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(211, 7)
	res = op(img)
	assert res.size == (211, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, None)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 0)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 3)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 4)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 5)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 6)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(212, 7)
	res = op(img)
	assert res.size == (212, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, None)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 0)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 3)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 4)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 5)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 6)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(213, 7)
	res = op(img)
	assert res.size == (213, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, None)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 0)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 3)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 4)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 5)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 6)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(214, 7)
	res = op(img)
	assert res.size == (214, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, None)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 0)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 3)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 4)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 5)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 6)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(215, 7)
	res = op(img)
	assert res.size == (215, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, None)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 0)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 3)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 4)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 5)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 6)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(216, 7)
	res = op(img)
	assert res.size == (216, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, None)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 0)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 3)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 4)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 5)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 6)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(217, 7)
	res = op(img)
	assert res.size == (217, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, None)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 0)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 3)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 4)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 5)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 6)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(218, 7)
	res = op(img)
	assert res.size == (218, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, None)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 0)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 3)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 4)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 5)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 6)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(219, 7)
	res = op(img)
	assert res.size == (219, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, None)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 0)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 3)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 4)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 5)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 6)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(220, 7)
	res = op(img)
	assert res.size == (220, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, None)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 0)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 3)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 4)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 5)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 6)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(221, 7)
	res = op(img)
	assert res.size == (221, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, None)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 0)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 3)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 4)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 5)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 6)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(222, 7)
	res = op(img)
	assert res.size == (222, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, None)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 0)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 3)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 4)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 5)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 6)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(223, 7)
	res = op(img)
	assert res.size == (223, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, None)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 0)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 3)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 4)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 5)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 6)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(224, 7)
	res = op(img)
	assert res.size == (224, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, None)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 0)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 3)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 4)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 5)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 6)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(225, 7)
	res = op(img)
	assert res.size == (225, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, None)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 0)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 3)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 4)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 5)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 6)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(226, 7)
	res = op(img)
	assert res.size == (226, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, None)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 0)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 3)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 4)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 5)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 6)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(227, 7)
	res = op(img)
	assert res.size == (227, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, None)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 0)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 3)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 4)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 5)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 6)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(228, 7)
	res = op(img)
	assert res.size == (228, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, None)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 0)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 3)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 4)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 5)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 6)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(229, 7)
	res = op(img)
	assert res.size == (229, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, None)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 0)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 3)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 4)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 5)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 6)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(230, 7)
	res = op(img)
	assert res.size == (230, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, None)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 0)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 3)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 4)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 5)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 6)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(231, 7)
	res = op(img)
	assert res.size == (231, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, None)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 0)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 3)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 4)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 5)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 6)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(232, 7)
	res = op(img)
	assert res.size == (232, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, None)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 0)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 3)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 4)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 5)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 6)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(233, 7)
	res = op(img)
	assert res.size == (233, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, None)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 0)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 3)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 4)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 5)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 6)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(234, 7)
	res = op(img)
	assert res.size == (234, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, None)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 0)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 3)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 4)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 5)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 6)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(235, 7)
	res = op(img)
	assert res.size == (235, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, None)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 0)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 3)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 4)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 5)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 6)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(236, 7)
	res = op(img)
	assert res.size == (236, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, None)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 0)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 3)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 4)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 5)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 6)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(237, 7)
	res = op(img)
	assert res.size == (237, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, None)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 0)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 3)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 4)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 5)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 6)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(238, 7)
	res = op(img)
	assert res.size == (238, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, None)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 0)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 3)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 4)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 5)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 6)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(239, 7)
	res = op(img)
	assert res.size == (239, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, None)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 0)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 3)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 4)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 5)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 6)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(240, 7)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, None)
	res = op(img)
	assert res.size == (241, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 0)
	res = op(img)
	assert res.size == (241, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 3)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 4)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 5)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 6)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(241, 7)
	res = op(img)
	assert res.size == (240, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, None)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 0)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 3)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 4)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 5)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 6)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(242, 7)
	res = op(img)
	assert res.size == (242, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, None)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 0)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 3)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 4)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 5)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 6)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(243, 7)
	res = op(img)
	assert res.size == (243, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, None)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 0)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 3)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 4)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 5)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 6)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(244, 7)
	res = op(img)
	assert res.size == (244, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, None)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 0)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 3)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 4)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 5)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 6)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(245, 7)
	res = op(img)
	assert res.size == (245, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, None)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 0)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 3)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 4)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 5)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 6)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(246, 7)
	res = op(img)
	assert res.size == (246, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, None)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 0)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 3)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 4)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 5)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 6)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(247, 7)
	res = op(img)
	assert res.size == (247, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, None)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 0)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 3)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 4)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 5)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 6)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(248, 7)
	res = op(img)
	assert res.size == (248, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, None)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 0)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 3)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 4)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 5)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 6)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(249, 7)
	res = op(img)
	assert res.size == (249, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, None)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 0)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 3)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 4)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 5)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 6)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(250, 7)
	res = op(img)
	assert res.size == (250, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, None)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 0)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 3)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 4)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 5)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 6)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(251, 7)
	res = op(img)
	assert res.size == (251, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, None)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 0)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 3)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 4)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 5)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 6)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(252, 7)
	res = op(img)
	assert res.size == (252, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, None)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 0)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 3)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 4)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 5)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 6)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(253, 7)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, None)
	res = op(img)
	assert res.size == (254, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 0)
	res = op(img)
	assert res.size == (254, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 3)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 4)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 5)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 6)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(254, 7)
	res = op(img)
	assert res.size == (253, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, None)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 0)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 3)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 4)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 5)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 6)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(255, 7)
	res = op(img)
	assert res.size == (255, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, None)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 0)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 3)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 4)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 5)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 6)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(256, 7)
	res = op(img)
	assert res.size == (256, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, None)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 0)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 3)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 4)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 5)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 6)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(257, 7)
	res = op(img)
	assert res.size == (257, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, None)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 0)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 3)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 4)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 5)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 6)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(258, 7)
	res = op(img)
	assert res.size == (258, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, None)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 0)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 3)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 4)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 5)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 6)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(259, 7)
	res = op(img)
	assert res.size == (259, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, None)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 0)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 3)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 4)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 5)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 6)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(260, 7)
	res = op(img)
	assert res.size == (260, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, None)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 0)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 3)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 4)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 5)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 6)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(261, 7)
	res = op(img)
	assert res.size == (261, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, None)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 0)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 3)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 4)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 5)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 6)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(262, 7)
	res = op(img)
	assert res.size == (262, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, None)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 0)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 3)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 4)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 5)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 6)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(263, 7)
	res = op(img)
	assert res.size == (263, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, None)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 0)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 3)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 4)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 5)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 6)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(264, 7)
	res = op(img)
	assert res.size == (264, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, None)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 0)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 3)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 4)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 5)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 6)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(265, 7)
	res = op(img)
	assert res.size == (265, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, None)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 0)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 3)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 4)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 5)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 6)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(266, 7)
	res = op(img)
	assert res.size == (266, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, None)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 0)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 3)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 4)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 5)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 6)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(267, 7)
	res = op(img)
	assert res.size == (267, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, None)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 0)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 3)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 4)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 5)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 6)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(268, 7)
	res = op(img)
	assert res.size == (268, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, None)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 0)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 3)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 4)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 5)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 6)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(269, 7)
	res = op(img)
	assert res.size == (269, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, None)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 0)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 3)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 4)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 5)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 6)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(270, 7)
	res = op(img)
	assert res.size == (270, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, None)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 0)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 3)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 4)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 5)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 6)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(271, 7)
	res = op(img)
	assert res.size == (271, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, None)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 0)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 3)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 4)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 5)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 6)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(272, 7)
	res = op(img)
	assert res.size == (272, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, None)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 0)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 3)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 4)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 5)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 6)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(273, 7)
	res = op(img)
	assert res.size == (273, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, None)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 0)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 3)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 4)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 5)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 6)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(274, 7)
	res = op(img)
	assert res.size == (274, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, None)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 0)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 3)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 4)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 5)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 6)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(275, 7)
	res = op(img)
	assert res.size == (275, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, None)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 0)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 3)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 4)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 5)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 6)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(276, 7)
	res = op(img)
	assert res.size == (276, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, None)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 0)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 3)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 4)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 5)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 6)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(277, 7)
	res = op(img)
	assert res.size == (277, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, None)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 0)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 3)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 4)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 5)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 6)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(278, 7)
	res = op(img)
	assert res.size == (278, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, None)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 0)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 3)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 4)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 5)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 6)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(279, 7)
	res = op(img)
	assert res.size == (279, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, None)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 0)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 3)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 4)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 5)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 6)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(280, 7)
	res = op(img)
	assert res.size == (280, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, None)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 0)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 3)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 4)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 5)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 6)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(281, 7)
	res = op(img)
	assert res.size == (281, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, None)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 0)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 3)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 4)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 5)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 6)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(282, 7)
	res = op(img)
	assert res.size == (282, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, None)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 0)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 3)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 4)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 5)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 6)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(283, 7)
	res = op(img)
	assert res.size == (283, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, None)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 0)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 3)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 4)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 5)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 6)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(284, 7)
	res = op(img)
	assert res.size == (284, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, None)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 0)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 3)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 4)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 5)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 6)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(285, 7)
	res = op(img)
	assert res.size == (285, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, None)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 0)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 3)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 4)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 5)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 6)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(286, 7)
	res = op(img)
	assert res.size == (286, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, None)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 0)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 3)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 4)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 5)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 6)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(287, 7)
	res = op(img)
	assert res.size == (287, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, None)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 0)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 3)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 4)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 5)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 6)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(288, 7)
	res = op(img)
	assert res.size == (288, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, None)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 0)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 3)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 4)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 5)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 6)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(289, 7)
	res = op(img)
	assert res.size == (289, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, None)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 0)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 3)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 4)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 5)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 6)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(290, 7)
	res = op(img)
	assert res.size == (290, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, None)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 0)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 3)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 4)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 5)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 6)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(291, 7)
	res = op(img)
	assert res.size == (291, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, None)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 0)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 3)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 4)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 5)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 6)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(292, 7)
	res = op(img)
	assert res.size == (292, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, None)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 0)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 3)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 4)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 5)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 6)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(293, 7)
	res = op(img)
	assert res.size == (293, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, None)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 0)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 3)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 4)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 5)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 6)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(294, 7)
	res = op(img)
	assert res.size == (294, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, None)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 0)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 3)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 4)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 5)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 6)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(295, 7)
	res = op(img)
	assert res.size == (295, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, None)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 0)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 3)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 4)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 5)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 6)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(296, 7)
	res = op(img)
	assert res.size == (296, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, None)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 0)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 3)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 4)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 5)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 6)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(297, 7)
	res = op(img)
	assert res.size == (297, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, None)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 0)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 3)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 4)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 5)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 6)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(298, 7)
	res = op(img)
	assert res.size == (298, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, None)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 0)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 3)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 4)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 5)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 6)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(299, 7)
	res = op(img)
	assert res.size == (299, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, None)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 0)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 4)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 5)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 6)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(300, 7)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, None)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 0)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 4)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 5)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 6)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(301, 7)
	res = op(img)
	assert res.size == (301, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, None)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 0)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 4)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 5)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 6)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(302, 7)
	res = op(img)
	assert res.size == (302, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, None)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 0)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 4)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 5)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 6)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(303, 7)
	res = op(img)
	assert res.size == (303, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, None)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 0)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 4)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 5)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 6)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(304, 7)
	res = op(img)
	assert res.size == (304, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, None)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 0)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 4)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 5)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 6)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(305, 7)
	res = op(img)
	assert res.size == (305, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, None)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 0)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 4)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 5)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 6)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(306, 7)
	res = op(img)
	assert res.size == (306, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, None)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 0)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 4)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 5)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 6)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(307, 7)
	res = op(img)
	assert res.size == (307, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, None)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 0)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 4)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 5)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 6)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(308, 7)
	res = op(img)
	assert res.size == (308, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, None)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 0)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 4)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 5)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 6)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(309, 7)
	res = op(img)
	assert res.size == (309, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, None)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 0)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 4)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 5)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 6)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(310, 7)
	res = op(img)
	assert res.size == (310, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, None)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 0)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 4)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 5)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 6)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(311, 7)
	res = op(img)
	assert res.size == (311, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, None)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 0)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 4)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 5)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 6)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(312, 7)
	res = op(img)
	assert res.size == (312, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, None)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 0)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 4)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 5)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 6)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(313, 7)
	res = op(img)
	assert res.size == (313, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, None)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 0)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 4)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 5)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 6)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(314, 7)
	res = op(img)
	assert res.size == (314, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, None)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 0)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 4)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 5)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 6)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(315, 7)
	res = op(img)
	assert res.size == (315, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, None)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 0)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 4)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 5)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 6)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(316, 7)
	res = op(img)
	assert res.size == (316, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, None)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 0)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 4)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 5)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 6)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(317, 7)
	res = op(img)
	assert res.size == (317, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, None)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 0)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 4)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 5)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 6)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(318, 7)
	res = op(img)
	assert res.size == (318, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, None)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 0)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 4)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 5)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 6)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(319, 7)
	res = op(img)
	assert res.size == (319, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, None)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 0)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 4)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 5)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 6)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(320, 7)
	res = op(img)
	assert res.size == (320, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, None)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 0)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 4)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 5)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 6)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(321, 7)
	res = op(img)
	assert res.size == (321, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, None)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 0)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 4)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 5)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 6)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(322, 7)
	res = op(img)
	assert res.size == (322, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, None)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 0)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 4)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 5)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 6)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(323, 7)
	res = op(img)
	assert res.size == (323, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, None)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 0)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 4)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 5)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 6)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(324, 7)
	res = op(img)
	assert res.size == (324, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, None)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 0)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 4)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 5)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 6)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(325, 7)
	res = op(img)
	assert res.size == (325, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, None)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 0)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 4)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 5)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 6)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(326, 7)
	res = op(img)
	assert res.size == (326, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, None)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 0)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 4)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 5)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 6)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(327, 7)
	res = op(img)
	assert res.size == (327, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, None)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 0)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 4)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 5)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 6)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(328, 7)
	res = op(img)
	assert res.size == (328, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, None)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 0)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 4)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 5)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 6)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(329, 7)
	res = op(img)
	assert res.size == (329, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, None)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 0)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 4)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 5)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 6)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(330, 7)
	res = op(img)
	assert res.size == (330, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, None)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 0)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 4)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 5)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 6)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(331, 7)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, None)
	res = op(img)
	assert res.size == (332, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 0)
	res = op(img)
	assert res.size == (332, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 4)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 5)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 6)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(332, 7)
	res = op(img)
	assert res.size == (331, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, None)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 0)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 4)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 5)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 6)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(333, 7)
	res = op(img)
	assert res.size == (333, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, None)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 0)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 4)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 5)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 6)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(334, 7)
	res = op(img)
	assert res.size == (334, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, None)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 0)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 4)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 5)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 6)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(335, 7)
	res = op(img)
	assert res.size == (335, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, None)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 0)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 4)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 5)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 6)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(336, 7)
	res = op(img)
	assert res.size == (336, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, None)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 0)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 4)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 5)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 6)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(337, 7)
	res = op(img)
	assert res.size == (337, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, None)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 0)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 4)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 5)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 6)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(338, 7)
	res = op(img)
	assert res.size == (338, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, None)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 0)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 4)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 5)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 6)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(339, 7)
	res = op(img)
	assert res.size == (339, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, None)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 0)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 4)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 5)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 6)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(340, 7)
	res = op(img)
	assert res.size == (340, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, None)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 0)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 4)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 5)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 6)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(341, 7)
	res = op(img)
	assert res.size == (341, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, None)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 0)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 4)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 5)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 6)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(342, 7)
	res = op(img)
	assert res.size == (342, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, None)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 0)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 4)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 5)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 6)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(343, 7)
	res = op(img)
	assert res.size == (343, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, None)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 0)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 4)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 5)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 6)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(344, 7)
	res = op(img)
	assert res.size == (344, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, None)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 0)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 4)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 5)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 6)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(345, 7)
	res = op(img)
	assert res.size == (345, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, None)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 0)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 4)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 5)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 6)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(346, 7)
	res = op(img)
	assert res.size == (346, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, None)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 0)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 4)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 5)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 6)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(347, 7)
	res = op(img)
	assert res.size == (347, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, None)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 0)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 4)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 5)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 6)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(348, 7)
	res = op(img)
	assert res.size == (348, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, None)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 0)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 4)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 5)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 6)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(349, 7)
	res = op(img)
	assert res.size == (349, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, None)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 0)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 4)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 5)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 6)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(350, 7)
	res = op(img)
	assert res.size == (350, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, None)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 0)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 4)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 5)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 6)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(351, 7)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, None)
	res = op(img)
	assert res.size == (352, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 0)
	res = op(img)
	assert res.size == (352, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 4)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 5)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 6)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(352, 7)
	res = op(img)
	assert res.size == (351, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, None)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 0)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 4)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 5)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 6)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(353, 7)
	res = op(img)
	assert res.size == (353, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, None)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 0)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 4)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 5)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 6)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(354, 7)
	res = op(img)
	assert res.size == (354, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, None)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 0)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 4)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 5)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 6)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(355, 7)
	res = op(img)
	assert res.size == (355, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, None)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 0)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 4)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 5)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 6)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(356, 7)
	res = op(img)
	assert res.size == (356, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, None)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 0)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 4)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 5)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 6)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(357, 7)
	res = op(img)
	assert res.size == (357, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, None)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 0)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 4)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 5)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 6)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(358, 7)
	res = op(img)
	assert res.size == (358, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, None)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 0)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 4)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 5)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 6)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(359, 7)
	res = op(img)
	assert res.size == (359, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, None)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 0)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 4)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 5)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 6)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(360, 7)
	res = op(img)
	assert res.size == (360, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, None)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 0)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 4)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 5)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 6)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(361, 7)
	res = op(img)
	assert res.size == (361, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, None)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 0)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 4)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 5)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 6)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(362, 7)
	res = op(img)
	assert res.size == (362, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, None)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 0)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 4)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 5)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 6)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(363, 7)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, None)
	res = op(img)
	assert res.size == (364, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 0)
	res = op(img)
	assert res.size == (364, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 4)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 5)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 6)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(364, 7)
	res = op(img)
	assert res.size == (363, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, None)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 0)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 4)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 5)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 6)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(365, 7)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, None)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 0)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 4)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 5)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 6)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(366, 7)
	res = op(img)
	assert res.size == (365, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, None)
	res = op(img)
	assert res.size == (367, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 0)
	res = op(img)
	assert res.size == (367, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 4)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 5)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 6)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(367, 7)
	res = op(img)
	assert res.size == (366, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, None)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 0)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 4)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 5)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 6)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(368, 7)
	res = op(img)
	assert res.size == (368, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, None)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 0)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 4)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 5)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 6)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(369, 7)
	res = op(img)
	assert res.size == (369, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, None)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 0)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 4)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 5)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 6)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(370, 7)
	res = op(img)
	assert res.size == (370, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, None)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 0)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 4)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 5)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 6)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(371, 7)
	res = op(img)
	assert res.size == (371, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, None)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 0)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 4)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 5)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 6)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(372, 7)
	res = op(img)
	assert res.size == (372, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, None)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 0)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 4)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 5)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 6)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(373, 7)
	res = op(img)
	assert res.size == (373, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, None)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 0)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 4)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 5)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 6)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(374, 7)
	res = op(img)
	assert res.size == (374, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, None)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 0)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 4)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 5)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 6)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(375, 7)
	res = op(img)
	assert res.size == (375, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, None)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 0)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 4)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 5)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 6)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(376, 7)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, None)
	res = op(img)
	assert res.size == (377, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 0)
	res = op(img)
	assert res.size == (377, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 4)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 5)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 6)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(377, 7)
	res = op(img)
	assert res.size == (376, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, None)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 0)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 4)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 5)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 6)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(378, 7)
	res = op(img)
	assert res.size == (378, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, None)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 0)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 4)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 5)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 6)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(379, 7)
	res = op(img)
	assert res.size == (379, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, None)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 0)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 4)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 5)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 6)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(380, 7)
	res = op(img)
	assert res.size == (380, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, None)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 0)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 4)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 5)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 6)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(381, 7)
	res = op(img)
	assert res.size == (381, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, None)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 0)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 4)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 5)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 6)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(382, 7)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, None)
	res = op(img)
	assert res.size == (383, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 0)
	res = op(img)
	assert res.size == (383, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 4)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 5)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 6)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(383, 7)
	res = op(img)
	assert res.size == (382, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, None)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 0)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 4)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 5)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 6)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(384, 7)
	res = op(img)
	assert res.size == (384, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, None)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 0)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 4)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 5)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 6)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(385, 7)
	res = op(img)
	assert res.size == (385, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, None)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 0)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 4)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 5)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 6)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(386, 7)
	res = op(img)
	assert res.size == (386, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, None)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 0)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 4)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 5)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 6)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(387, 7)
	res = op(img)
	assert res.size == (387, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, None)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 0)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 4)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 5)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 6)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(388, 7)
	res = op(img)
	assert res.size == (388, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, None)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 0)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 4)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 5)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 6)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(389, 7)
	res = op(img)
	assert res.size == (389, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, None)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 0)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 4)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 5)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 6)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(390, 7)
	res = op(img)
	assert res.size == (390, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, None)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 0)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 4)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 5)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 6)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(391, 7)
	res = op(img)
	assert res.size == (391, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, None)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 0)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 4)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 5)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 6)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(392, 7)
	res = op(img)
	assert res.size == (392, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, None)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 0)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 4)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 5)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 6)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(393, 7)
	res = op(img)
	assert res.size == (393, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, None)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 0)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 4)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 5)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 6)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(394, 7)
	res = op(img)
	assert res.size == (394, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, None)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 0)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 4)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 5)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 6)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(395, 7)
	res = op(img)
	assert res.size == (395, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, None)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 0)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 4)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 5)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 6)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(396, 7)
	res = op(img)
	assert res.size == (396, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, None)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 0)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 4)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 5)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 6)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(397, 7)
	res = op(img)
	assert res.size == (397, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, None)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 0)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 4)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 5)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 6)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(398, 7)
	res = op(img)
	assert res.size == (398, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, None)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 0)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 4)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 5)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 6)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(399, 7)
	res = op(img)
	assert res.size == (399, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(400, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(401, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(402, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(403, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(404, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(405, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(406, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(407, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(408, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(409, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(410, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(411, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(412, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(413, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(414, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(415, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(416, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(417, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(418, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(419, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(420, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(421, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(422, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(423, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(424, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(425, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(426, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(427, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(428, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(429, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(430, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(431, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(432, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(433, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(434, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(435, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(436, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(437, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(438, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(439, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(440, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(441, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(442, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(443, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(444, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(445, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(446, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(447, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(448, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(449, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(450, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(451, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(452, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(453, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(454, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(455, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(456, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(457, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(458, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(459, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(460, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(461, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(462, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(463, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(464, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(465, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(466, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(467, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(468, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(469, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(470, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(471, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(472, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(473, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(474, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(475, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(476, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(477, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(478, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(479, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(480, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(481, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(482, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(483, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(484, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(485, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(486, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(487, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(488, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(489, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(490, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(491, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(492, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(493, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(494, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(495, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(496, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(497, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(498, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(499, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(500, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(501, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(502, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(503, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(504, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(505, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(506, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(507, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(508, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(509, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(510, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(511, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(512, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(513, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(514, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(515, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(516, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(517, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(518, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(519, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(520, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(521, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(522, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(523, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(524, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(525, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(526, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(527, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(528, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(529, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(530, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(531, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(532, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(533, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(534, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(535, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(536, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(537, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(538, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(539, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(540, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(541, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(542, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(543, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(544, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(545, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(546, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(547, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(548, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(549, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(550, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(551, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(552, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(553, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(554, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(555, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(556, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(557, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(558, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(559, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(560, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(561, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(562, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(563, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(564, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(565, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(566, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(567, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(568, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(569, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(570, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(571, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(572, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(573, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(574, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(575, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(576, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(577, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(578, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(579, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(580, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(581, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(582, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(583, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(584, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(585, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(586, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(587, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(588, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(589, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(590, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(591, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(592, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(593, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(594, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(595, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(596, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(597, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(598, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(599, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(600, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(601, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(602, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(603, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(604, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(605, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(606, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(607, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(608, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(609, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(610, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(611, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(612, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(613, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(614, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(615, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(616, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(617, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(618, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(619, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(620, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(621, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(622, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(623, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(624, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(625, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(626, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(627, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(628, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(629, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(630, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(631, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(632, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(633, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(634, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(635, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(636, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(637, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(638, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(639, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(640, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(641, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(642, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(643, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(644, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(645, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(646, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(647, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(648, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(649, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(650, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(651, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(652, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(653, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(654, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(655, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(656, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(657, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(658, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(659, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(660, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(661, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(662, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(663, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(664, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(665, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(666, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(667, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(668, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(669, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(670, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(671, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(672, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(673, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(674, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(675, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(676, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(677, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(678, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(679, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(680, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(681, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(682, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(683, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(684, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(685, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(686, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(687, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(688, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(689, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(690, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(691, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(692, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(693, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(694, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(695, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(696, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(697, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(698, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(699, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(700, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(701, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(702, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(703, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(704, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(705, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(706, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(707, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(708, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(709, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(710, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(711, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(712, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(713, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(714, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(715, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(716, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(717, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(718, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(719, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(720, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(721, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(722, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(723, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(724, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(725, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(726, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(727, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(728, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(729, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(730, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(731, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(732, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(733, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(734, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(735, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(736, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(737, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(738, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(739, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(740, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(741, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(742, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(743, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(744, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(745, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(746, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(747, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(748, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(749, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(750, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(751, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(752, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(753, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(754, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(755, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(756, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(757, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(758, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(759, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(760, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(761, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(762, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(763, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(764, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(765, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(766, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(767, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(768, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(769, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(770, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(771, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(772, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(773, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(774, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(775, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(776, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(777, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(778, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(779, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(780, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(781, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(782, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(783, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(784, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(785, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(786, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(787, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(788, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(789, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(790, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(791, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(792, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(793, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(794, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(795, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(796, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(797, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(798, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, None)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 0)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 1)
	res = op(img)
	assert res.size == (100, 1)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 2)
	res = op(img)
	assert res.size == (200, 2)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 3)
	res = op(img)
	assert res.size == (300, 3)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 4)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 5)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 6)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (400, 4), color=(0,0,0,0))
	op = Operations.FitWidth(799, 7)
	res = op(img)
	assert res.size == (400, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(None, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(0, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, None)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 0)
	res = op(img)
	assert res.size == (1, 1)


	# FitWidth(1, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 2)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 3)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 4)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 5)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 6)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 7)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 8)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 9)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 10)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 11)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 12)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 13)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 14)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 15)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 16)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 17)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 18)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 19)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 20)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 21)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 22)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 23)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 24)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 25)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 26)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 27)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 28)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(1, 29)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 0)
	res = op(img)
	assert res.size == (2, 3)


	# FitWidth(2, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 4)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 5)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 6)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 7)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 8)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 9)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 10)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 11)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 12)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 13)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 14)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 15)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 16)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 17)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 18)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 19)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 20)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 21)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 22)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 23)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 24)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 25)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 26)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 27)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 28)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(2, 29)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, None)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 0)
	res = op(img)
	assert res.size == (3, 4)


	# FitWidth(3, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 5)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 6)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 7)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 8)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 9)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 10)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 11)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 12)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 13)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 14)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 15)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 16)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 17)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 18)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 19)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 20)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 21)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 22)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 23)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 24)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 25)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 26)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 27)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 28)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(3, 29)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 0)
	res = op(img)
	assert res.size == (4, 6)


	# FitWidth(4, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 7)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 8)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 9)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 10)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 11)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 12)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 13)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 14)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 15)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 16)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 17)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 18)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 19)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 20)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 21)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 22)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 23)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 24)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 25)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 26)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 27)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 28)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(4, 29)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 0)
	res = op(img)
	assert res.size == (5, 7)


	# FitWidth(5, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 8)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 9)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 10)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 11)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 12)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 13)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 14)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 15)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 16)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 17)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 18)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 19)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 20)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 21)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 22)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 23)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 24)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 25)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 26)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 27)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 28)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(5, 29)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 0)
	res = op(img)
	assert res.size == (6, 9)


	# FitWidth(6, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 10)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 11)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 12)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 13)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 14)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 15)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 16)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 17)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 18)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 19)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 20)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 21)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 22)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 23)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 24)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 25)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 26)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 27)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 28)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(6, 29)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, None)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 0)
	res = op(img)
	assert res.size == (7, 10)


	# FitWidth(7, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 11)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 12)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 13)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 14)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 15)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 16)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 17)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 18)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 19)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 20)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 21)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 22)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 23)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 24)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 25)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 26)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 27)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 28)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(7, 29)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, None)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 0)
	res = op(img)
	assert res.size == (8, 12)


	# FitWidth(8, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 13)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 14)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 15)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 16)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 17)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 18)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 19)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 20)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 21)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 22)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 23)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 24)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 25)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 26)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 27)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 28)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(8, 29)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, None)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 0)
	res = op(img)
	assert res.size == (9, 13)


	# FitWidth(9, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 14)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 15)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 16)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 17)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 18)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 19)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 20)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 21)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 22)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 23)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 24)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 25)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 26)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 27)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 28)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(9, 29)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(10, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(10, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(11, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(11, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(12, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(12, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(13, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(13, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(14, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(14, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(15, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(15, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(16, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(16, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(17, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(17, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(18, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(18, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 0)
	res = op(img)
	assert res.size == (10, 15)


	# FitWidth(19, 1)((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitWidth(19, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(None, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(0, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 1)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 3)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 4)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 5)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 6)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(1, 7)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 1)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 2)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 5)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 6)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(2, 7)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 1)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 2)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 3)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 4)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 6)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(3, 7)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 1)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 2)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 3)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 4)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 5)
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(4, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 1)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 2)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 3)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 4)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 5)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 6)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(5, 7)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 1)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 2)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 3)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 4)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 5)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 6)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(6, 7)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 1)
	res = op(img)
	assert res.size == (7, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 2)
	res = op(img)
	assert res.size == (7, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 3)
	res = op(img)
	assert res.size == (7, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 4)
	res = op(img)
	assert res.size == (7, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 5)
	res = op(img)
	assert res.size == (7, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 6)
	res = op(img)
	assert res.size == (7, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(7, 7)
	res = op(img)
	assert res.size == (7, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 1)
	res = op(img)
	assert res.size == (8, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 2)
	res = op(img)
	assert res.size == (8, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 3)
	res = op(img)
	assert res.size == (8, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 4)
	res = op(img)
	assert res.size == (8, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 5)
	res = op(img)
	assert res.size == (8, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 6)
	res = op(img)
	assert res.size == (8, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(8, 7)
	res = op(img)
	assert res.size == (8, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 1)
	res = op(img)
	assert res.size == (9, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 2)
	res = op(img)
	assert res.size == (9, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 3)
	res = op(img)
	assert res.size == (9, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 4)
	res = op(img)
	assert res.size == (9, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 5)
	res = op(img)
	assert res.size == (9, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 6)
	res = op(img)
	assert res.size == (9, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(9, 7)
	res = op(img)
	assert res.size == (9, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 2)
	res = op(img)
	assert res.size == (10, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 3)
	res = op(img)
	assert res.size == (10, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 4)
	res = op(img)
	assert res.size == (10, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 5)
	res = op(img)
	assert res.size == (10, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 6)
	res = op(img)
	assert res.size == (10, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(10, 7)
	res = op(img)
	assert res.size == (10, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 1)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 2)
	res = op(img)
	assert res.size == (11, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 3)
	res = op(img)
	assert res.size == (11, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 4)
	res = op(img)
	assert res.size == (11, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 5)
	res = op(img)
	assert res.size == (11, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 6)
	res = op(img)
	assert res.size == (11, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(11, 7)
	res = op(img)
	assert res.size == (11, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 1)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 2)
	res = op(img)
	assert res.size == (12, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 3)
	res = op(img)
	assert res.size == (12, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 4)
	res = op(img)
	assert res.size == (12, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 5)
	res = op(img)
	assert res.size == (12, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 6)
	res = op(img)
	assert res.size == (12, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(12, 7)
	res = op(img)
	assert res.size == (12, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 1)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 2)
	res = op(img)
	assert res.size == (13, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 3)
	res = op(img)
	assert res.size == (13, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 4)
	res = op(img)
	assert res.size == (13, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 5)
	res = op(img)
	assert res.size == (13, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 6)
	res = op(img)
	assert res.size == (13, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(13, 7)
	res = op(img)
	assert res.size == (13, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 1)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 2)
	res = op(img)
	assert res.size == (14, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 3)
	res = op(img)
	assert res.size == (14, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 4)
	res = op(img)
	assert res.size == (14, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 5)
	res = op(img)
	assert res.size == (14, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 6)
	res = op(img)
	assert res.size == (14, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(14, 7)
	res = op(img)
	assert res.size == (14, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 1)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 2)
	res = op(img)
	assert res.size == (15, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 3)
	res = op(img)
	assert res.size == (15, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 4)
	res = op(img)
	assert res.size == (15, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 5)
	res = op(img)
	assert res.size == (15, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 6)
	res = op(img)
	assert res.size == (15, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(15, 7)
	res = op(img)
	assert res.size == (15, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 1)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 2)
	res = op(img)
	assert res.size == (16, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 3)
	res = op(img)
	assert res.size == (16, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 4)
	res = op(img)
	assert res.size == (16, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 5)
	res = op(img)
	assert res.size == (16, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 6)
	res = op(img)
	assert res.size == (16, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(16, 7)
	res = op(img)
	assert res.size == (16, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 1)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 2)
	res = op(img)
	assert res.size == (17, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 3)
	res = op(img)
	assert res.size == (17, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 4)
	res = op(img)
	assert res.size == (17, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 5)
	res = op(img)
	assert res.size == (17, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 6)
	res = op(img)
	assert res.size == (17, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(17, 7)
	res = op(img)
	assert res.size == (17, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 1)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 2)
	res = op(img)
	assert res.size == (18, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 3)
	res = op(img)
	assert res.size == (18, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 4)
	res = op(img)
	assert res.size == (18, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 5)
	res = op(img)
	assert res.size == (18, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 6)
	res = op(img)
	assert res.size == (18, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(18, 7)
	res = op(img)
	assert res.size == (18, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 1)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 2)
	res = op(img)
	assert res.size == (19, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 3)
	res = op(img)
	assert res.size == (19, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 4)
	res = op(img)
	assert res.size == (19, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 5)
	res = op(img)
	assert res.size == (19, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 6)
	res = op(img)
	assert res.size == (19, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(19, 7)
	res = op(img)
	assert res.size == (19, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 1)
	res = op(img)
	assert res.size == (20, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 3)
	res = op(img)
	assert res.size == (20, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 4)
	res = op(img)
	assert res.size == (20, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 5)
	res = op(img)
	assert res.size == (20, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 6)
	res = op(img)
	assert res.size == (20, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(20, 7)
	res = op(img)
	assert res.size == (20, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 1)
	res = op(img)
	assert res.size == (21, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 2)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 3)
	res = op(img)
	assert res.size == (21, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 4)
	res = op(img)
	assert res.size == (21, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 5)
	res = op(img)
	assert res.size == (21, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 6)
	res = op(img)
	assert res.size == (21, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(21, 7)
	res = op(img)
	assert res.size == (21, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 1)
	res = op(img)
	assert res.size == (22, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 2)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 3)
	res = op(img)
	assert res.size == (22, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 4)
	res = op(img)
	assert res.size == (22, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 5)
	res = op(img)
	assert res.size == (22, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 6)
	res = op(img)
	assert res.size == (22, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(22, 7)
	res = op(img)
	assert res.size == (22, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 1)
	res = op(img)
	assert res.size == (23, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 2)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 3)
	res = op(img)
	assert res.size == (23, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 4)
	res = op(img)
	assert res.size == (23, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 5)
	res = op(img)
	assert res.size == (23, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 6)
	res = op(img)
	assert res.size == (23, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(23, 7)
	res = op(img)
	assert res.size == (23, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 1)
	res = op(img)
	assert res.size == (24, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 2)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 3)
	res = op(img)
	assert res.size == (24, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 4)
	res = op(img)
	assert res.size == (24, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 5)
	res = op(img)
	assert res.size == (24, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 6)
	res = op(img)
	assert res.size == (24, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(24, 7)
	res = op(img)
	assert res.size == (24, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 1)
	res = op(img)
	assert res.size == (25, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 2)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 3)
	res = op(img)
	assert res.size == (25, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 4)
	res = op(img)
	assert res.size == (25, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 5)
	res = op(img)
	assert res.size == (25, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 6)
	res = op(img)
	assert res.size == (25, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(25, 7)
	res = op(img)
	assert res.size == (25, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 1)
	res = op(img)
	assert res.size == (26, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 2)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 3)
	res = op(img)
	assert res.size == (26, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 4)
	res = op(img)
	assert res.size == (26, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 5)
	res = op(img)
	assert res.size == (26, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 6)
	res = op(img)
	assert res.size == (26, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(26, 7)
	res = op(img)
	assert res.size == (26, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 1)
	res = op(img)
	assert res.size == (27, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 2)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 3)
	res = op(img)
	assert res.size == (27, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 4)
	res = op(img)
	assert res.size == (27, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 5)
	res = op(img)
	assert res.size == (27, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 6)
	res = op(img)
	assert res.size == (27, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(27, 7)
	res = op(img)
	assert res.size == (27, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 1)
	res = op(img)
	assert res.size == (28, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 2)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 3)
	res = op(img)
	assert res.size == (28, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 4)
	res = op(img)
	assert res.size == (28, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 5)
	res = op(img)
	assert res.size == (28, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 6)
	res = op(img)
	assert res.size == (28, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(28, 7)
	res = op(img)
	assert res.size == (28, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 1)
	res = op(img)
	assert res.size == (29, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 2)
	res = op(img)
	assert res.size == (29, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 3)
	res = op(img)
	assert res.size == (29, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 4)
	res = op(img)
	assert res.size == (29, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 5)
	res = op(img)
	assert res.size == (29, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 6)
	res = op(img)
	assert res.size == (29, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(29, 7)
	res = op(img)
	assert res.size == (29, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 1)
	res = op(img)
	assert res.size == (30, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 2)
	res = op(img)
	assert res.size == (30, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 4)
	res = op(img)
	assert res.size == (30, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 5)
	res = op(img)
	assert res.size == (30, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 6)
	res = op(img)
	assert res.size == (30, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(30, 7)
	res = op(img)
	assert res.size == (30, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 1)
	res = op(img)
	assert res.size == (31, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 2)
	res = op(img)
	assert res.size == (31, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 3)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 4)
	res = op(img)
	assert res.size == (31, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 5)
	res = op(img)
	assert res.size == (31, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 6)
	res = op(img)
	assert res.size == (31, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(31, 7)
	res = op(img)
	assert res.size == (31, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 1)
	res = op(img)
	assert res.size == (32, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 2)
	res = op(img)
	assert res.size == (32, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 3)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 4)
	res = op(img)
	assert res.size == (32, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 5)
	res = op(img)
	assert res.size == (32, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 6)
	res = op(img)
	assert res.size == (32, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(32, 7)
	res = op(img)
	assert res.size == (32, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 1)
	res = op(img)
	assert res.size == (33, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 2)
	res = op(img)
	assert res.size == (33, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 3)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 4)
	res = op(img)
	assert res.size == (33, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 5)
	res = op(img)
	assert res.size == (33, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 6)
	res = op(img)
	assert res.size == (33, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(33, 7)
	res = op(img)
	assert res.size == (33, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 1)
	res = op(img)
	assert res.size == (34, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 2)
	res = op(img)
	assert res.size == (34, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 3)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 4)
	res = op(img)
	assert res.size == (34, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 5)
	res = op(img)
	assert res.size == (34, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 6)
	res = op(img)
	assert res.size == (34, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(34, 7)
	res = op(img)
	assert res.size == (34, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 1)
	res = op(img)
	assert res.size == (35, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 2)
	res = op(img)
	assert res.size == (35, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 3)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 4)
	res = op(img)
	assert res.size == (35, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 5)
	res = op(img)
	assert res.size == (35, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 6)
	res = op(img)
	assert res.size == (35, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(35, 7)
	res = op(img)
	assert res.size == (35, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 1)
	res = op(img)
	assert res.size == (36, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 2)
	res = op(img)
	assert res.size == (36, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 3)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 4)
	res = op(img)
	assert res.size == (36, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 5)
	res = op(img)
	assert res.size == (36, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 6)
	res = op(img)
	assert res.size == (36, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(36, 7)
	res = op(img)
	assert res.size == (36, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 1)
	res = op(img)
	assert res.size == (37, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 2)
	res = op(img)
	assert res.size == (37, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 3)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 4)
	res = op(img)
	assert res.size == (37, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 5)
	res = op(img)
	assert res.size == (37, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 6)
	res = op(img)
	assert res.size == (37, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(37, 7)
	res = op(img)
	assert res.size == (37, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 1)
	res = op(img)
	assert res.size == (38, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 2)
	res = op(img)
	assert res.size == (38, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 3)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 4)
	res = op(img)
	assert res.size == (38, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 5)
	res = op(img)
	assert res.size == (38, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 6)
	res = op(img)
	assert res.size == (38, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(38, 7)
	res = op(img)
	assert res.size == (38, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 1)
	res = op(img)
	assert res.size == (39, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 2)
	res = op(img)
	assert res.size == (39, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 3)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 4)
	res = op(img)
	assert res.size == (39, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 5)
	res = op(img)
	assert res.size == (39, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 6)
	res = op(img)
	assert res.size == (39, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(39, 7)
	res = op(img)
	assert res.size == (39, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 1)
	res = op(img)
	assert res.size == (40, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 2)
	res = op(img)
	assert res.size == (40, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 3)
	res = op(img)
	assert res.size == (40, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(40, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 1)
	res = op(img)
	assert res.size == (41, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 2)
	res = op(img)
	assert res.size == (41, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 3)
	res = op(img)
	assert res.size == (41, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(41, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 1)
	res = op(img)
	assert res.size == (42, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 2)
	res = op(img)
	assert res.size == (42, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 3)
	res = op(img)
	assert res.size == (42, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(42, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 1)
	res = op(img)
	assert res.size == (43, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 2)
	res = op(img)
	assert res.size == (43, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 3)
	res = op(img)
	assert res.size == (43, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(43, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 1)
	res = op(img)
	assert res.size == (44, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 2)
	res = op(img)
	assert res.size == (44, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 3)
	res = op(img)
	assert res.size == (44, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(44, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 1)
	res = op(img)
	assert res.size == (45, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 2)
	res = op(img)
	assert res.size == (45, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 3)
	res = op(img)
	assert res.size == (45, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(45, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 1)
	res = op(img)
	assert res.size == (46, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 2)
	res = op(img)
	assert res.size == (46, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 3)
	res = op(img)
	assert res.size == (46, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(46, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 1)
	res = op(img)
	assert res.size == (47, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 2)
	res = op(img)
	assert res.size == (47, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 3)
	res = op(img)
	assert res.size == (47, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(47, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 1)
	res = op(img)
	assert res.size == (48, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 2)
	res = op(img)
	assert res.size == (48, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 3)
	res = op(img)
	assert res.size == (48, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(48, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 1)
	res = op(img)
	assert res.size == (49, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 2)
	res = op(img)
	assert res.size == (49, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 3)
	res = op(img)
	assert res.size == (49, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(49, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 1)
	res = op(img)
	assert res.size == (50, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 2)
	res = op(img)
	assert res.size == (50, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 3)
	res = op(img)
	assert res.size == (50, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(50, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 1)
	res = op(img)
	assert res.size == (51, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 2)
	res = op(img)
	assert res.size == (51, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 3)
	res = op(img)
	assert res.size == (51, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(51, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 1)
	res = op(img)
	assert res.size == (52, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 2)
	res = op(img)
	assert res.size == (52, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 3)
	res = op(img)
	assert res.size == (52, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(52, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 1)
	res = op(img)
	assert res.size == (53, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 2)
	res = op(img)
	assert res.size == (53, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 3)
	res = op(img)
	assert res.size == (53, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(53, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 1)
	res = op(img)
	assert res.size == (54, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 2)
	res = op(img)
	assert res.size == (54, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 3)
	res = op(img)
	assert res.size == (54, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(54, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 1)
	res = op(img)
	assert res.size == (55, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 2)
	res = op(img)
	assert res.size == (55, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 3)
	res = op(img)
	assert res.size == (55, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(55, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 1)
	res = op(img)
	assert res.size == (56, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 2)
	res = op(img)
	assert res.size == (56, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 3)
	res = op(img)
	assert res.size == (56, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(56, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 1)
	res = op(img)
	assert res.size == (57, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 2)
	res = op(img)
	assert res.size == (57, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 3)
	res = op(img)
	assert res.size == (57, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(57, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 1)
	res = op(img)
	assert res.size == (58, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 2)
	res = op(img)
	assert res.size == (58, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 3)
	res = op(img)
	assert res.size == (58, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(58, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 1)
	res = op(img)
	assert res.size == (59, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 2)
	res = op(img)
	assert res.size == (59, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 3)
	res = op(img)
	assert res.size == (59, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(59, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 1)
	res = op(img)
	assert res.size == (60, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 2)
	res = op(img)
	assert res.size == (60, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 3)
	res = op(img)
	assert res.size == (60, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(60, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 1)
	res = op(img)
	assert res.size == (61, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 2)
	res = op(img)
	assert res.size == (61, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 3)
	res = op(img)
	assert res.size == (61, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(61, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 1)
	res = op(img)
	assert res.size == (62, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 2)
	res = op(img)
	assert res.size == (62, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 3)
	res = op(img)
	assert res.size == (62, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(62, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 1)
	res = op(img)
	assert res.size == (63, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 2)
	res = op(img)
	assert res.size == (63, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 3)
	res = op(img)
	assert res.size == (63, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(63, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 1)
	res = op(img)
	assert res.size == (64, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 2)
	res = op(img)
	assert res.size == (64, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 3)
	res = op(img)
	assert res.size == (64, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(64, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 1)
	res = op(img)
	assert res.size == (65, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 2)
	res = op(img)
	assert res.size == (65, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 3)
	res = op(img)
	assert res.size == (65, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(65, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 1)
	res = op(img)
	assert res.size == (66, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 2)
	res = op(img)
	assert res.size == (66, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 3)
	res = op(img)
	assert res.size == (66, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(66, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 1)
	res = op(img)
	assert res.size == (67, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 2)
	res = op(img)
	assert res.size == (67, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 3)
	res = op(img)
	assert res.size == (67, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(67, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 1)
	res = op(img)
	assert res.size == (68, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 2)
	res = op(img)
	assert res.size == (68, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 3)
	res = op(img)
	assert res.size == (68, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(68, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 1)
	res = op(img)
	assert res.size == (69, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 2)
	res = op(img)
	assert res.size == (69, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 3)
	res = op(img)
	assert res.size == (69, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(69, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 1)
	res = op(img)
	assert res.size == (70, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 2)
	res = op(img)
	assert res.size == (70, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 3)
	res = op(img)
	assert res.size == (70, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(70, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 1)
	res = op(img)
	assert res.size == (71, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 2)
	res = op(img)
	assert res.size == (71, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 3)
	res = op(img)
	assert res.size == (71, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(71, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 1)
	res = op(img)
	assert res.size == (72, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 2)
	res = op(img)
	assert res.size == (72, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 3)
	res = op(img)
	assert res.size == (72, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(72, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 1)
	res = op(img)
	assert res.size == (73, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 2)
	res = op(img)
	assert res.size == (73, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 3)
	res = op(img)
	assert res.size == (73, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(73, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 1)
	res = op(img)
	assert res.size == (74, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 2)
	res = op(img)
	assert res.size == (74, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 3)
	res = op(img)
	assert res.size == (74, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(74, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 1)
	res = op(img)
	assert res.size == (75, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 2)
	res = op(img)
	assert res.size == (75, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 3)
	res = op(img)
	assert res.size == (75, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(75, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 1)
	res = op(img)
	assert res.size == (76, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 2)
	res = op(img)
	assert res.size == (76, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 3)
	res = op(img)
	assert res.size == (76, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(76, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 1)
	res = op(img)
	assert res.size == (77, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 2)
	res = op(img)
	assert res.size == (77, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 3)
	res = op(img)
	assert res.size == (77, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(77, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 1)
	res = op(img)
	assert res.size == (78, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 2)
	res = op(img)
	assert res.size == (78, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 3)
	res = op(img)
	assert res.size == (78, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(78, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 1)
	res = op(img)
	assert res.size == (79, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 2)
	res = op(img)
	assert res.size == (79, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 3)
	res = op(img)
	assert res.size == (79, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.FitAll(79, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(None, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(0, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 1)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 3)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 4)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 5)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 6)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 7)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 8)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 9)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 10)
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 11)
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 12)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 13)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 14)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 15)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 16)
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 17)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 18)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 19)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 20)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 21)
	res = op(img)
	assert res.size == (1, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 22)
	res = op(img)
	assert res.size == (1, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 23)
	res = op(img)
	assert res.size == (1, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 24)
	res = op(img)
	assert res.size == (1, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 25)
	res = op(img)
	assert res.size == (1, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 26)
	res = op(img)
	assert res.size == (1, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 27)
	res = op(img)
	assert res.size == (1, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 28)
	res = op(img)
	assert res.size == (1, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(1, 29)
	res = op(img)
	assert res.size == (1, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 1)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 2)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 5)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 6)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 7)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 8)
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 9)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 10)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 11)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 12)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 13)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 14)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 15)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 16)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 17)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 18)
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 19)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 20)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 21)
	res = op(img)
	assert res.size == (2, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 22)
	res = op(img)
	assert res.size == (2, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 23)
	res = op(img)
	assert res.size == (2, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 24)
	res = op(img)
	assert res.size == (2, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 25)
	res = op(img)
	assert res.size == (2, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 26)
	res = op(img)
	assert res.size == (2, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 27)
	res = op(img)
	assert res.size == (2, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 28)
	res = op(img)
	assert res.size == (2, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(2, 29)
	res = op(img)
	assert res.size == (2, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 1)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 2)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 3)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 4)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 6)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 7)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 8)
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 9)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 10)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 11)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 12)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 13)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 14)
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 15)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 16)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 17)
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 18)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 19)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 20)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 21)
	res = op(img)
	assert res.size == (3, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 22)
	res = op(img)
	assert res.size == (3, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 23)
	res = op(img)
	assert res.size == (3, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 24)
	res = op(img)
	assert res.size == (3, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 25)
	res = op(img)
	assert res.size == (3, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 26)
	res = op(img)
	assert res.size == (3, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 27)
	res = op(img)
	assert res.size == (3, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 28)
	res = op(img)
	assert res.size == (3, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(3, 29)
	res = op(img)
	assert res.size == (3, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 1)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 2)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 3)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 4)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 5)
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 8)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 9)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 10)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 11)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 12)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 13)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 14)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 15)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 16)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 17)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 18)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 19)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 20)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 21)
	res = op(img)
	assert res.size == (4, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 22)
	res = op(img)
	assert res.size == (4, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 23)
	res = op(img)
	assert res.size == (4, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 24)
	res = op(img)
	assert res.size == (4, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 25)
	res = op(img)
	assert res.size == (4, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 26)
	res = op(img)
	assert res.size == (4, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 27)
	res = op(img)
	assert res.size == (4, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 28)
	res = op(img)
	assert res.size == (4, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(4, 29)
	res = op(img)
	assert res.size == (4, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 1)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 2)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 3)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 4)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 5)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 6)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 7)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 9)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 10)
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 11)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 12)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 13)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 14)
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 15)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 16)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 17)
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 18)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 19)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 20)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 21)
	res = op(img)
	assert res.size == (5, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 22)
	res = op(img)
	assert res.size == (5, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 23)
	res = op(img)
	assert res.size == (5, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 24)
	res = op(img)
	assert res.size == (5, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 25)
	res = op(img)
	assert res.size == (5, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 26)
	res = op(img)
	assert res.size == (5, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 27)
	res = op(img)
	assert res.size == (5, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 28)
	res = op(img)
	assert res.size == (5, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(5, 29)
	res = op(img)
	assert res.size == (5, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 1)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 2)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 3)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 4)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 5)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 6)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 7)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 8)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 11)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 12)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 13)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 14)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 15)
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 16)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 17)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 18)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 19)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 20)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 21)
	res = op(img)
	assert res.size == (6, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 22)
	res = op(img)
	assert res.size == (6, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 23)
	res = op(img)
	assert res.size == (6, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 24)
	res = op(img)
	assert res.size == (6, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 25)
	res = op(img)
	assert res.size == (6, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 26)
	res = op(img)
	assert res.size == (6, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 27)
	res = op(img)
	assert res.size == (6, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 28)
	res = op(img)
	assert res.size == (6, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(6, 29)
	res = op(img)
	assert res.size == (6, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 1)
	res = op(img)
	assert res.size == (7, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 2)
	res = op(img)
	assert res.size == (7, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 3)
	res = op(img)
	assert res.size == (7, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 4)
	res = op(img)
	assert res.size == (7, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 5)
	res = op(img)
	assert res.size == (7, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 6)
	res = op(img)
	assert res.size == (7, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 7)
	res = op(img)
	assert res.size == (7, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 8)
	res = op(img)
	assert res.size == (7, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 9)
	res = op(img)
	assert res.size == (7, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 10)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 12)
	res = op(img)
	assert res.size == (7, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 13)
	res = op(img)
	assert res.size == (7, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 14)
	res = op(img)
	assert res.size == (7, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 15)
	res = op(img)
	assert res.size == (7, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 16)
	res = op(img)
	assert res.size == (7, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 17)
	res = op(img)
	assert res.size == (7, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 18)
	res = op(img)
	assert res.size == (7, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 19)
	res = op(img)
	assert res.size == (7, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 20)
	res = op(img)
	assert res.size == (7, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 21)
	res = op(img)
	assert res.size == (7, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 22)
	res = op(img)
	assert res.size == (7, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 23)
	res = op(img)
	assert res.size == (7, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 24)
	res = op(img)
	assert res.size == (7, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 25)
	res = op(img)
	assert res.size == (7, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 26)
	res = op(img)
	assert res.size == (7, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 27)
	res = op(img)
	assert res.size == (7, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 28)
	res = op(img)
	assert res.size == (7, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(7, 29)
	res = op(img)
	assert res.size == (7, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 1)
	res = op(img)
	assert res.size == (8, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 2)
	res = op(img)
	assert res.size == (8, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 3)
	res = op(img)
	assert res.size == (8, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 4)
	res = op(img)
	assert res.size == (8, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 5)
	res = op(img)
	assert res.size == (8, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 6)
	res = op(img)
	assert res.size == (8, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 7)
	res = op(img)
	assert res.size == (8, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 8)
	res = op(img)
	assert res.size == (8, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 9)
	res = op(img)
	assert res.size == (8, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 10)
	res = op(img)
	assert res.size == (8, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 11)
	res = op(img)
	assert res.size == (8, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 14)
	res = op(img)
	assert res.size == (8, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 15)
	res = op(img)
	assert res.size == (8, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 16)
	res = op(img)
	assert res.size == (8, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 17)
	res = op(img)
	assert res.size == (8, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 18)
	res = op(img)
	assert res.size == (8, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 19)
	res = op(img)
	assert res.size == (8, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 20)
	res = op(img)
	assert res.size == (8, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 21)
	res = op(img)
	assert res.size == (8, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 22)
	res = op(img)
	assert res.size == (8, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 23)
	res = op(img)
	assert res.size == (8, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 24)
	res = op(img)
	assert res.size == (8, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 25)
	res = op(img)
	assert res.size == (8, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 26)
	res = op(img)
	assert res.size == (8, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 27)
	res = op(img)
	assert res.size == (8, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 28)
	res = op(img)
	assert res.size == (8, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(8, 29)
	res = op(img)
	assert res.size == (8, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 1)
	res = op(img)
	assert res.size == (9, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 2)
	res = op(img)
	assert res.size == (9, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 3)
	res = op(img)
	assert res.size == (9, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 4)
	res = op(img)
	assert res.size == (9, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 5)
	res = op(img)
	assert res.size == (9, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 6)
	res = op(img)
	assert res.size == (9, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 7)
	res = op(img)
	assert res.size == (9, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 8)
	res = op(img)
	assert res.size == (9, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 9)
	res = op(img)
	assert res.size == (9, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 10)
	res = op(img)
	assert res.size == (9, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 11)
	res = op(img)
	assert res.size == (9, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 12)
	res = op(img)
	assert res.size == (9, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 13)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 15)
	res = op(img)
	assert res.size == (9, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 16)
	res = op(img)
	assert res.size == (9, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 17)
	res = op(img)
	assert res.size == (9, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 18)
	res = op(img)
	assert res.size == (9, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 19)
	res = op(img)
	assert res.size == (9, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 20)
	res = op(img)
	assert res.size == (9, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 21)
	res = op(img)
	assert res.size == (9, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 22)
	res = op(img)
	assert res.size == (9, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 23)
	res = op(img)
	assert res.size == (9, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 24)
	res = op(img)
	assert res.size == (9, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 25)
	res = op(img)
	assert res.size == (9, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 26)
	res = op(img)
	assert res.size == (9, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 27)
	res = op(img)
	assert res.size == (9, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 28)
	res = op(img)
	assert res.size == (9, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(9, 29)
	res = op(img)
	assert res.size == (9, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 2)
	res = op(img)
	assert res.size == (10, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 3)
	res = op(img)
	assert res.size == (10, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 4)
	res = op(img)
	assert res.size == (10, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 5)
	res = op(img)
	assert res.size == (10, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 6)
	res = op(img)
	assert res.size == (10, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 7)
	res = op(img)
	assert res.size == (10, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 8)
	res = op(img)
	assert res.size == (10, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 9)
	res = op(img)
	assert res.size == (10, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 10)
	res = op(img)
	assert res.size == (10, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 11)
	res = op(img)
	assert res.size == (10, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 12)
	res = op(img)
	assert res.size == (10, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 13)
	res = op(img)
	assert res.size == (10, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 14)
	res = op(img)
	assert res.size == (10, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(10, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 1)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 2)
	res = op(img)
	assert res.size == (11, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 3)
	res = op(img)
	assert res.size == (11, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 4)
	res = op(img)
	assert res.size == (11, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 5)
	res = op(img)
	assert res.size == (11, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 6)
	res = op(img)
	assert res.size == (11, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 7)
	res = op(img)
	assert res.size == (11, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 8)
	res = op(img)
	assert res.size == (11, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 9)
	res = op(img)
	assert res.size == (11, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 10)
	res = op(img)
	assert res.size == (11, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 11)
	res = op(img)
	assert res.size == (11, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 12)
	res = op(img)
	assert res.size == (11, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 13)
	res = op(img)
	assert res.size == (11, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 14)
	res = op(img)
	assert res.size == (11, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(11, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 1)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 2)
	res = op(img)
	assert res.size == (12, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 3)
	res = op(img)
	assert res.size == (12, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 4)
	res = op(img)
	assert res.size == (12, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 5)
	res = op(img)
	assert res.size == (12, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 6)
	res = op(img)
	assert res.size == (12, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 7)
	res = op(img)
	assert res.size == (12, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 8)
	res = op(img)
	assert res.size == (12, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 9)
	res = op(img)
	assert res.size == (12, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 10)
	res = op(img)
	assert res.size == (12, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 11)
	res = op(img)
	assert res.size == (12, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 12)
	res = op(img)
	assert res.size == (12, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 13)
	res = op(img)
	assert res.size == (12, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 14)
	res = op(img)
	assert res.size == (12, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(12, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 1)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 2)
	res = op(img)
	assert res.size == (13, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 3)
	res = op(img)
	assert res.size == (13, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 4)
	res = op(img)
	assert res.size == (13, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 5)
	res = op(img)
	assert res.size == (13, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 6)
	res = op(img)
	assert res.size == (13, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 7)
	res = op(img)
	assert res.size == (13, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 8)
	res = op(img)
	assert res.size == (13, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 9)
	res = op(img)
	assert res.size == (13, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 10)
	res = op(img)
	assert res.size == (13, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 11)
	res = op(img)
	assert res.size == (13, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 12)
	res = op(img)
	assert res.size == (13, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 13)
	res = op(img)
	assert res.size == (13, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 14)
	res = op(img)
	assert res.size == (13, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(13, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 1)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 2)
	res = op(img)
	assert res.size == (14, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 3)
	res = op(img)
	assert res.size == (14, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 4)
	res = op(img)
	assert res.size == (14, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 5)
	res = op(img)
	assert res.size == (14, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 6)
	res = op(img)
	assert res.size == (14, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 7)
	res = op(img)
	assert res.size == (14, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 8)
	res = op(img)
	assert res.size == (14, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 9)
	res = op(img)
	assert res.size == (14, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 10)
	res = op(img)
	assert res.size == (14, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 11)
	res = op(img)
	assert res.size == (14, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 12)
	res = op(img)
	assert res.size == (14, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 13)
	res = op(img)
	assert res.size == (14, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 14)
	res = op(img)
	assert res.size == (14, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(14, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 1)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 2)
	res = op(img)
	assert res.size == (15, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 3)
	res = op(img)
	assert res.size == (15, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 4)
	res = op(img)
	assert res.size == (15, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 5)
	res = op(img)
	assert res.size == (15, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 6)
	res = op(img)
	assert res.size == (15, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 7)
	res = op(img)
	assert res.size == (15, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 8)
	res = op(img)
	assert res.size == (15, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 9)
	res = op(img)
	assert res.size == (15, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 10)
	res = op(img)
	assert res.size == (15, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 11)
	res = op(img)
	assert res.size == (15, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 12)
	res = op(img)
	assert res.size == (15, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 13)
	res = op(img)
	assert res.size == (15, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 14)
	res = op(img)
	assert res.size == (15, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(15, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 1)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 2)
	res = op(img)
	assert res.size == (16, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 3)
	res = op(img)
	assert res.size == (16, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 4)
	res = op(img)
	assert res.size == (16, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 5)
	res = op(img)
	assert res.size == (16, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 6)
	res = op(img)
	assert res.size == (16, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 7)
	res = op(img)
	assert res.size == (16, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 8)
	res = op(img)
	assert res.size == (16, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 9)
	res = op(img)
	assert res.size == (16, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 10)
	res = op(img)
	assert res.size == (16, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 11)
	res = op(img)
	assert res.size == (16, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 12)
	res = op(img)
	assert res.size == (16, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 13)
	res = op(img)
	assert res.size == (16, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 14)
	res = op(img)
	assert res.size == (16, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(16, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 1)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 2)
	res = op(img)
	assert res.size == (17, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 3)
	res = op(img)
	assert res.size == (17, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 4)
	res = op(img)
	assert res.size == (17, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 5)
	res = op(img)
	assert res.size == (17, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 6)
	res = op(img)
	assert res.size == (17, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 7)
	res = op(img)
	assert res.size == (17, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 8)
	res = op(img)
	assert res.size == (17, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 9)
	res = op(img)
	assert res.size == (17, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 10)
	res = op(img)
	assert res.size == (17, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 11)
	res = op(img)
	assert res.size == (17, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 12)
	res = op(img)
	assert res.size == (17, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 13)
	res = op(img)
	assert res.size == (17, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 14)
	res = op(img)
	assert res.size == (17, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(17, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 1)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 2)
	res = op(img)
	assert res.size == (18, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 3)
	res = op(img)
	assert res.size == (18, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 4)
	res = op(img)
	assert res.size == (18, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 5)
	res = op(img)
	assert res.size == (18, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 6)
	res = op(img)
	assert res.size == (18, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 7)
	res = op(img)
	assert res.size == (18, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 8)
	res = op(img)
	assert res.size == (18, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 9)
	res = op(img)
	assert res.size == (18, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 10)
	res = op(img)
	assert res.size == (18, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 11)
	res = op(img)
	assert res.size == (18, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 12)
	res = op(img)
	assert res.size == (18, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 13)
	res = op(img)
	assert res.size == (18, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 14)
	res = op(img)
	assert res.size == (18, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(18, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 1)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 2)
	res = op(img)
	assert res.size == (19, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 3)
	res = op(img)
	assert res.size == (19, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 4)
	res = op(img)
	assert res.size == (19, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 5)
	res = op(img)
	assert res.size == (19, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 6)
	res = op(img)
	assert res.size == (19, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 7)
	res = op(img)
	assert res.size == (19, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 8)
	res = op(img)
	assert res.size == (19, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 9)
	res = op(img)
	assert res.size == (19, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 10)
	res = op(img)
	assert res.size == (19, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 11)
	res = op(img)
	assert res.size == (19, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 12)
	res = op(img)
	assert res.size == (19, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 13)
	res = op(img)
	assert res.size == (19, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 14)
	res = op(img)
	assert res.size == (19, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.FitAll(19, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(None, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(0, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(1, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(1, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((1, 1))((40, 4)) -> FAIL
	#MaxBox((1, 2))((40, 4)) -> FAIL
	#MaxBox((1, 3))((40, 4)) -> FAIL
	#MaxBox((1, 4))((40, 4)) -> FAIL
	#MaxBox((1, 5))((40, 4)) -> FAIL
	#MaxBox((1, 6))((40, 4)) -> FAIL
	#MaxBox((1, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(2, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(2, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((2, 1))((40, 4)) -> FAIL
	#MaxBox((2, 2))((40, 4)) -> FAIL
	#MaxBox((2, 3))((40, 4)) -> FAIL
	#MaxBox((2, 4))((40, 4)) -> FAIL
	#MaxBox((2, 5))((40, 4)) -> FAIL
	#MaxBox((2, 6))((40, 4)) -> FAIL
	#MaxBox((2, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(3, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(3, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((3, 1))((40, 4)) -> FAIL
	#MaxBox((3, 2))((40, 4)) -> FAIL
	#MaxBox((3, 3))((40, 4)) -> FAIL
	#MaxBox((3, 4))((40, 4)) -> FAIL
	#MaxBox((3, 5))((40, 4)) -> FAIL
	#MaxBox((3, 6))((40, 4)) -> FAIL
	#MaxBox((3, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(4, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(4, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((4, 1))((40, 4)) -> FAIL
	#MaxBox((4, 2))((40, 4)) -> FAIL
	#MaxBox((4, 3))((40, 4)) -> FAIL
	#MaxBox((4, 4))((40, 4)) -> FAIL
	#MaxBox((4, 5))((40, 4)) -> FAIL
	#MaxBox((4, 6))((40, 4)) -> FAIL
	#MaxBox((4, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(5, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(5, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((5, 1))((40, 4)) -> FAIL
	#MaxBox((5, 2))((40, 4)) -> FAIL
	#MaxBox((5, 3))((40, 4)) -> FAIL
	#MaxBox((5, 4))((40, 4)) -> FAIL
	#MaxBox((5, 5))((40, 4)) -> FAIL
	#MaxBox((5, 6))((40, 4)) -> FAIL
	#MaxBox((5, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(6, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(6, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((6, 1))((40, 4)) -> FAIL
	#MaxBox((6, 2))((40, 4)) -> FAIL
	#MaxBox((6, 3))((40, 4)) -> FAIL
	#MaxBox((6, 4))((40, 4)) -> FAIL
	#MaxBox((6, 5))((40, 4)) -> FAIL
	#MaxBox((6, 6))((40, 4)) -> FAIL
	#MaxBox((6, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(7, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(7, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((7, 1))((40, 4)) -> FAIL
	#MaxBox((7, 2))((40, 4)) -> FAIL
	#MaxBox((7, 3))((40, 4)) -> FAIL
	#MaxBox((7, 4))((40, 4)) -> FAIL
	#MaxBox((7, 5))((40, 4)) -> FAIL
	#MaxBox((7, 6))((40, 4)) -> FAIL
	#MaxBox((7, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(8, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(8, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((8, 1))((40, 4)) -> FAIL
	#MaxBox((8, 2))((40, 4)) -> FAIL
	#MaxBox((8, 3))((40, 4)) -> FAIL
	#MaxBox((8, 4))((40, 4)) -> FAIL
	#MaxBox((8, 5))((40, 4)) -> FAIL
	#MaxBox((8, 6))((40, 4)) -> FAIL
	#MaxBox((8, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(9, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(9, 0)
	res = op(img)
	assert res.size == (40, 4)


	#MaxBox((9, 1))((40, 4)) -> FAIL
	#MaxBox((9, 2))((40, 4)) -> FAIL
	#MaxBox((9, 3))((40, 4)) -> FAIL
	#MaxBox((9, 4))((40, 4)) -> FAIL
	#MaxBox((9, 5))((40, 4)) -> FAIL
	#MaxBox((9, 6))((40, 4)) -> FAIL
	#MaxBox((9, 7))((40, 4)) -> FAIL
	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 2)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 3)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 4)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 5)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 6)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(10, 7)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 2)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 3)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 4)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 5)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 6)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(11, 7)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 2)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 3)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 4)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 5)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 6)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(12, 7)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 2)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 3)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 4)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 5)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 6)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(13, 7)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 2)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 3)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 4)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 5)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 6)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(14, 7)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 2)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 3)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 4)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 5)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 6)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(15, 7)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 2)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 3)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 4)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 5)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 6)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(16, 7)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 2)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 3)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 4)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 5)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 6)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(17, 7)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 2)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 3)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 4)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 5)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 6)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(18, 7)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 2)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 3)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 4)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 5)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 6)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(19, 7)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 3)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 4)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 5)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 6)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(20, 7)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 3)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 4)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 5)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 6)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(21, 7)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 3)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 4)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 5)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 6)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(22, 7)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 3)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 4)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 5)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 6)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(23, 7)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 3)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 4)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 5)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 6)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(24, 7)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 3)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 4)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 5)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 6)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(25, 7)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 3)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 4)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 5)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 6)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(26, 7)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 3)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 4)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 5)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 6)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(27, 7)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 3)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 4)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 5)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 6)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(28, 7)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 3)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 4)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 5)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 6)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(29, 7)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 4)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 5)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 6)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(30, 7)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 4)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 5)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 6)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(31, 7)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 4)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 5)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 6)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(32, 7)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 4)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 5)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 6)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(33, 7)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 4)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 5)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 6)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(34, 7)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 4)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 5)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 6)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(35, 7)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 4)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 5)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 6)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(36, 7)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 4)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 5)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 6)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(37, 7)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 4)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 5)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 6)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(38, 7)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 4)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 5)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 6)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(39, 7)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(40, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(41, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(42, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(43, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(44, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(45, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(46, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(47, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(48, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(49, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(50, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(51, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(52, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(53, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(54, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(55, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(56, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(57, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(58, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(59, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(60, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(61, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(62, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(63, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(64, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(65, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(66, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(67, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(68, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(69, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(70, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(71, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(72, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(73, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(74, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(75, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(76, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(77, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(78, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.MaxBox(79, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(None, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(0, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((1, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 2)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 3)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 4)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 5)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 6)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 7)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 8)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 9)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 10)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 11)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 12)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 13)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 14)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 15)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 16)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 17)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 18)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 19)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 20)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 21)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 22)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 23)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 24)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 25)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 26)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 27)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 28)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(1, 29)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((2, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 4)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 5)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 6)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 7)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 8)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 9)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 10)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 11)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 12)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 13)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 14)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 15)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 16)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 17)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 18)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 19)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 20)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 21)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 22)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 23)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 24)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 25)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 26)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 27)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 28)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(2, 29)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((3, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 5)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 6)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 7)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 8)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 9)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 10)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 11)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 12)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 13)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 14)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 15)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 16)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 17)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 18)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 19)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 20)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 21)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 22)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 23)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 24)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 25)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 26)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 27)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 28)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(3, 29)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((4, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 7)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 8)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 9)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 10)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 11)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 12)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 13)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 14)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 15)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 16)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 17)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 18)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 19)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 20)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 21)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 22)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 23)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 24)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 25)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 26)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 27)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 28)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(4, 29)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((5, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 8)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 9)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 10)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 11)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 12)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 13)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 14)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 15)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 16)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 17)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 18)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 19)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 20)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 21)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 22)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 23)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 24)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 25)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 26)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 27)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 28)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(5, 29)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((6, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 10)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 11)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 12)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 13)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 14)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 15)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 16)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 17)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 18)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 19)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 20)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 21)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 22)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 23)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 24)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 25)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 26)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 27)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 28)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(6, 29)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((7, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 11)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 12)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 13)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 14)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 15)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 16)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 17)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 18)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 19)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 20)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 21)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 22)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 23)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 24)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 25)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 26)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 27)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 28)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(7, 29)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((8, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 13)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 14)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 15)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 16)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 17)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 18)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 19)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 20)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 21)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 22)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 23)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 24)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 25)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 26)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 27)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 28)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(8, 29)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((9, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 14)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 15)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 16)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 17)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 18)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 19)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 20)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 21)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 22)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 23)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 24)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 25)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 26)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 27)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 28)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(9, 29)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((10, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(10, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((11, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(11, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((12, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(12, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((13, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(13, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((14, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(14, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((15, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(15, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((16, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(16, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((17, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(17, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((18, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(18, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 0)
	res = op(img)
	assert res.size == (10, 15)


	#MaxBox((19, 1))((10, 15)) -> FAIL
	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.MaxBox(19, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(None, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 1)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 2)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 3)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(0, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 1)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 3)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 4)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 5)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 6)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(1, 7)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 1)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 2)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 5)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 6)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(2, 7)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 1)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 2)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 3)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 4)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 6)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(3, 7)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 1)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 2)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 3)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 4)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 5)
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(4, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 1)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 2)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 3)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 4)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 5)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 6)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(5, 7)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 1)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 2)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 3)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 4)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 5)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 6)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(6, 7)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 1)
	res = op(img)
	assert res.size == (7, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 2)
	res = op(img)
	assert res.size == (7, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 3)
	res = op(img)
	assert res.size == (7, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 4)
	res = op(img)
	assert res.size == (7, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 5)
	res = op(img)
	assert res.size == (7, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 6)
	res = op(img)
	assert res.size == (7, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(7, 7)
	res = op(img)
	assert res.size == (7, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 1)
	res = op(img)
	assert res.size == (8, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 2)
	res = op(img)
	assert res.size == (8, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 3)
	res = op(img)
	assert res.size == (8, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 4)
	res = op(img)
	assert res.size == (8, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 5)
	res = op(img)
	assert res.size == (8, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 6)
	res = op(img)
	assert res.size == (8, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(8, 7)
	res = op(img)
	assert res.size == (8, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 1)
	res = op(img)
	assert res.size == (9, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 2)
	res = op(img)
	assert res.size == (9, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 3)
	res = op(img)
	assert res.size == (9, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 4)
	res = op(img)
	assert res.size == (9, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 5)
	res = op(img)
	assert res.size == (9, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 6)
	res = op(img)
	assert res.size == (9, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(9, 7)
	res = op(img)
	assert res.size == (9, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 2)
	res = op(img)
	assert res.size == (10, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 3)
	res = op(img)
	assert res.size == (10, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 4)
	res = op(img)
	assert res.size == (10, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 5)
	res = op(img)
	assert res.size == (10, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 6)
	res = op(img)
	assert res.size == (10, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(10, 7)
	res = op(img)
	assert res.size == (10, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 1)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 2)
	res = op(img)
	assert res.size == (11, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 3)
	res = op(img)
	assert res.size == (11, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 4)
	res = op(img)
	assert res.size == (11, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 5)
	res = op(img)
	assert res.size == (11, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 6)
	res = op(img)
	assert res.size == (11, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(11, 7)
	res = op(img)
	assert res.size == (11, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 1)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 2)
	res = op(img)
	assert res.size == (12, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 3)
	res = op(img)
	assert res.size == (12, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 4)
	res = op(img)
	assert res.size == (12, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 5)
	res = op(img)
	assert res.size == (12, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 6)
	res = op(img)
	assert res.size == (12, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(12, 7)
	res = op(img)
	assert res.size == (12, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 1)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 2)
	res = op(img)
	assert res.size == (13, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 3)
	res = op(img)
	assert res.size == (13, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 4)
	res = op(img)
	assert res.size == (13, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 5)
	res = op(img)
	assert res.size == (13, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 6)
	res = op(img)
	assert res.size == (13, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(13, 7)
	res = op(img)
	assert res.size == (13, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 1)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 2)
	res = op(img)
	assert res.size == (14, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 3)
	res = op(img)
	assert res.size == (14, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 4)
	res = op(img)
	assert res.size == (14, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 5)
	res = op(img)
	assert res.size == (14, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 6)
	res = op(img)
	assert res.size == (14, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(14, 7)
	res = op(img)
	assert res.size == (14, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 1)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 2)
	res = op(img)
	assert res.size == (15, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 3)
	res = op(img)
	assert res.size == (15, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 4)
	res = op(img)
	assert res.size == (15, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 5)
	res = op(img)
	assert res.size == (15, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 6)
	res = op(img)
	assert res.size == (15, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(15, 7)
	res = op(img)
	assert res.size == (15, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 1)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 2)
	res = op(img)
	assert res.size == (16, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 3)
	res = op(img)
	assert res.size == (16, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 4)
	res = op(img)
	assert res.size == (16, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 5)
	res = op(img)
	assert res.size == (16, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 6)
	res = op(img)
	assert res.size == (16, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(16, 7)
	res = op(img)
	assert res.size == (16, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 1)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 2)
	res = op(img)
	assert res.size == (17, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 3)
	res = op(img)
	assert res.size == (17, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 4)
	res = op(img)
	assert res.size == (17, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 5)
	res = op(img)
	assert res.size == (17, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 6)
	res = op(img)
	assert res.size == (17, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(17, 7)
	res = op(img)
	assert res.size == (17, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 1)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 2)
	res = op(img)
	assert res.size == (18, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 3)
	res = op(img)
	assert res.size == (18, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 4)
	res = op(img)
	assert res.size == (18, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 5)
	res = op(img)
	assert res.size == (18, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 6)
	res = op(img)
	assert res.size == (18, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(18, 7)
	res = op(img)
	assert res.size == (18, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 1)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 2)
	res = op(img)
	assert res.size == (19, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 3)
	res = op(img)
	assert res.size == (19, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 4)
	res = op(img)
	assert res.size == (19, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 5)
	res = op(img)
	assert res.size == (19, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 6)
	res = op(img)
	assert res.size == (19, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(19, 7)
	res = op(img)
	assert res.size == (19, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 1)
	res = op(img)
	assert res.size == (20, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 2)
	res = op(img)
	assert res.size == (20, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 3)
	res = op(img)
	assert res.size == (20, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 4)
	res = op(img)
	assert res.size == (20, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 5)
	res = op(img)
	assert res.size == (20, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 6)
	res = op(img)
	assert res.size == (20, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(20, 7)
	res = op(img)
	assert res.size == (20, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 1)
	res = op(img)
	assert res.size == (21, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 2)
	res = op(img)
	assert res.size == (21, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 3)
	res = op(img)
	assert res.size == (21, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 4)
	res = op(img)
	assert res.size == (21, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 5)
	res = op(img)
	assert res.size == (21, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 6)
	res = op(img)
	assert res.size == (21, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(21, 7)
	res = op(img)
	assert res.size == (21, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 1)
	res = op(img)
	assert res.size == (22, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 2)
	res = op(img)
	assert res.size == (22, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 3)
	res = op(img)
	assert res.size == (22, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 4)
	res = op(img)
	assert res.size == (22, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 5)
	res = op(img)
	assert res.size == (22, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 6)
	res = op(img)
	assert res.size == (22, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(22, 7)
	res = op(img)
	assert res.size == (22, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 1)
	res = op(img)
	assert res.size == (23, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 2)
	res = op(img)
	assert res.size == (23, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 3)
	res = op(img)
	assert res.size == (23, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 4)
	res = op(img)
	assert res.size == (23, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 5)
	res = op(img)
	assert res.size == (23, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 6)
	res = op(img)
	assert res.size == (23, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(23, 7)
	res = op(img)
	assert res.size == (23, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 1)
	res = op(img)
	assert res.size == (24, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 2)
	res = op(img)
	assert res.size == (24, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 3)
	res = op(img)
	assert res.size == (24, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 4)
	res = op(img)
	assert res.size == (24, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 5)
	res = op(img)
	assert res.size == (24, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 6)
	res = op(img)
	assert res.size == (24, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(24, 7)
	res = op(img)
	assert res.size == (24, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 1)
	res = op(img)
	assert res.size == (25, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 2)
	res = op(img)
	assert res.size == (25, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 3)
	res = op(img)
	assert res.size == (25, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 4)
	res = op(img)
	assert res.size == (25, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 5)
	res = op(img)
	assert res.size == (25, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 6)
	res = op(img)
	assert res.size == (25, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(25, 7)
	res = op(img)
	assert res.size == (25, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 1)
	res = op(img)
	assert res.size == (26, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 2)
	res = op(img)
	assert res.size == (26, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 3)
	res = op(img)
	assert res.size == (26, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 4)
	res = op(img)
	assert res.size == (26, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 5)
	res = op(img)
	assert res.size == (26, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 6)
	res = op(img)
	assert res.size == (26, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(26, 7)
	res = op(img)
	assert res.size == (26, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 1)
	res = op(img)
	assert res.size == (27, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 2)
	res = op(img)
	assert res.size == (27, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 3)
	res = op(img)
	assert res.size == (27, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 4)
	res = op(img)
	assert res.size == (27, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 5)
	res = op(img)
	assert res.size == (27, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 6)
	res = op(img)
	assert res.size == (27, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(27, 7)
	res = op(img)
	assert res.size == (27, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 1)
	res = op(img)
	assert res.size == (28, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 2)
	res = op(img)
	assert res.size == (28, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 3)
	res = op(img)
	assert res.size == (28, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 4)
	res = op(img)
	assert res.size == (28, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 5)
	res = op(img)
	assert res.size == (28, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 6)
	res = op(img)
	assert res.size == (28, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(28, 7)
	res = op(img)
	assert res.size == (28, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 1)
	res = op(img)
	assert res.size == (29, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 2)
	res = op(img)
	assert res.size == (29, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 3)
	res = op(img)
	assert res.size == (29, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 4)
	res = op(img)
	assert res.size == (29, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 5)
	res = op(img)
	assert res.size == (29, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 6)
	res = op(img)
	assert res.size == (29, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(29, 7)
	res = op(img)
	assert res.size == (29, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 1)
	res = op(img)
	assert res.size == (30, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 2)
	res = op(img)
	assert res.size == (30, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 3)
	res = op(img)
	assert res.size == (30, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 4)
	res = op(img)
	assert res.size == (30, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 5)
	res = op(img)
	assert res.size == (30, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 6)
	res = op(img)
	assert res.size == (30, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(30, 7)
	res = op(img)
	assert res.size == (30, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 1)
	res = op(img)
	assert res.size == (31, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 2)
	res = op(img)
	assert res.size == (31, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 3)
	res = op(img)
	assert res.size == (31, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 4)
	res = op(img)
	assert res.size == (31, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 5)
	res = op(img)
	assert res.size == (31, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 6)
	res = op(img)
	assert res.size == (31, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(31, 7)
	res = op(img)
	assert res.size == (31, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 1)
	res = op(img)
	assert res.size == (32, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 2)
	res = op(img)
	assert res.size == (32, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 3)
	res = op(img)
	assert res.size == (32, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 4)
	res = op(img)
	assert res.size == (32, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 5)
	res = op(img)
	assert res.size == (32, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 6)
	res = op(img)
	assert res.size == (32, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(32, 7)
	res = op(img)
	assert res.size == (32, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 1)
	res = op(img)
	assert res.size == (33, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 2)
	res = op(img)
	assert res.size == (33, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 3)
	res = op(img)
	assert res.size == (33, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 4)
	res = op(img)
	assert res.size == (33, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 5)
	res = op(img)
	assert res.size == (33, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 6)
	res = op(img)
	assert res.size == (33, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(33, 7)
	res = op(img)
	assert res.size == (33, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 1)
	res = op(img)
	assert res.size == (34, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 2)
	res = op(img)
	assert res.size == (34, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 3)
	res = op(img)
	assert res.size == (34, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 4)
	res = op(img)
	assert res.size == (34, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 5)
	res = op(img)
	assert res.size == (34, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 6)
	res = op(img)
	assert res.size == (34, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(34, 7)
	res = op(img)
	assert res.size == (34, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 1)
	res = op(img)
	assert res.size == (35, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 2)
	res = op(img)
	assert res.size == (35, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 3)
	res = op(img)
	assert res.size == (35, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 4)
	res = op(img)
	assert res.size == (35, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 5)
	res = op(img)
	assert res.size == (35, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 6)
	res = op(img)
	assert res.size == (35, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(35, 7)
	res = op(img)
	assert res.size == (35, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 1)
	res = op(img)
	assert res.size == (36, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 2)
	res = op(img)
	assert res.size == (36, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 3)
	res = op(img)
	assert res.size == (36, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 4)
	res = op(img)
	assert res.size == (36, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 5)
	res = op(img)
	assert res.size == (36, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 6)
	res = op(img)
	assert res.size == (36, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(36, 7)
	res = op(img)
	assert res.size == (36, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 1)
	res = op(img)
	assert res.size == (37, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 2)
	res = op(img)
	assert res.size == (37, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 3)
	res = op(img)
	assert res.size == (37, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 4)
	res = op(img)
	assert res.size == (37, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 5)
	res = op(img)
	assert res.size == (37, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 6)
	res = op(img)
	assert res.size == (37, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(37, 7)
	res = op(img)
	assert res.size == (37, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 1)
	res = op(img)
	assert res.size == (38, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 2)
	res = op(img)
	assert res.size == (38, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 3)
	res = op(img)
	assert res.size == (38, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 4)
	res = op(img)
	assert res.size == (38, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 5)
	res = op(img)
	assert res.size == (38, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 6)
	res = op(img)
	assert res.size == (38, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(38, 7)
	res = op(img)
	assert res.size == (38, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 1)
	res = op(img)
	assert res.size == (39, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 2)
	res = op(img)
	assert res.size == (39, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 3)
	res = op(img)
	assert res.size == (39, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 4)
	res = op(img)
	assert res.size == (39, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 5)
	res = op(img)
	assert res.size == (39, 5)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 6)
	res = op(img)
	assert res.size == (39, 6)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(39, 7)
	res = op(img)
	assert res.size == (39, 7)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 1)
	res = op(img)
	assert res.size == (40, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 2)
	res = op(img)
	assert res.size == (40, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 3)
	res = op(img)
	assert res.size == (40, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(40, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 1)
	res = op(img)
	assert res.size == (41, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 2)
	res = op(img)
	assert res.size == (41, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 3)
	res = op(img)
	assert res.size == (41, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(41, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 1)
	res = op(img)
	assert res.size == (42, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 2)
	res = op(img)
	assert res.size == (42, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 3)
	res = op(img)
	assert res.size == (42, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(42, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 1)
	res = op(img)
	assert res.size == (43, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 2)
	res = op(img)
	assert res.size == (43, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 3)
	res = op(img)
	assert res.size == (43, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(43, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 1)
	res = op(img)
	assert res.size == (44, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 2)
	res = op(img)
	assert res.size == (44, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 3)
	res = op(img)
	assert res.size == (44, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(44, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 1)
	res = op(img)
	assert res.size == (45, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 2)
	res = op(img)
	assert res.size == (45, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 3)
	res = op(img)
	assert res.size == (45, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(45, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 1)
	res = op(img)
	assert res.size == (46, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 2)
	res = op(img)
	assert res.size == (46, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 3)
	res = op(img)
	assert res.size == (46, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(46, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 1)
	res = op(img)
	assert res.size == (47, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 2)
	res = op(img)
	assert res.size == (47, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 3)
	res = op(img)
	assert res.size == (47, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(47, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 1)
	res = op(img)
	assert res.size == (48, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 2)
	res = op(img)
	assert res.size == (48, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 3)
	res = op(img)
	assert res.size == (48, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(48, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 1)
	res = op(img)
	assert res.size == (49, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 2)
	res = op(img)
	assert res.size == (49, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 3)
	res = op(img)
	assert res.size == (49, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(49, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 1)
	res = op(img)
	assert res.size == (50, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 2)
	res = op(img)
	assert res.size == (50, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 3)
	res = op(img)
	assert res.size == (50, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(50, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 1)
	res = op(img)
	assert res.size == (51, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 2)
	res = op(img)
	assert res.size == (51, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 3)
	res = op(img)
	assert res.size == (51, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(51, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 1)
	res = op(img)
	assert res.size == (52, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 2)
	res = op(img)
	assert res.size == (52, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 3)
	res = op(img)
	assert res.size == (52, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(52, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 1)
	res = op(img)
	assert res.size == (53, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 2)
	res = op(img)
	assert res.size == (53, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 3)
	res = op(img)
	assert res.size == (53, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(53, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 1)
	res = op(img)
	assert res.size == (54, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 2)
	res = op(img)
	assert res.size == (54, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 3)
	res = op(img)
	assert res.size == (54, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(54, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 1)
	res = op(img)
	assert res.size == (55, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 2)
	res = op(img)
	assert res.size == (55, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 3)
	res = op(img)
	assert res.size == (55, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(55, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 1)
	res = op(img)
	assert res.size == (56, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 2)
	res = op(img)
	assert res.size == (56, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 3)
	res = op(img)
	assert res.size == (56, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(56, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 1)
	res = op(img)
	assert res.size == (57, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 2)
	res = op(img)
	assert res.size == (57, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 3)
	res = op(img)
	assert res.size == (57, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(57, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 1)
	res = op(img)
	assert res.size == (58, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 2)
	res = op(img)
	assert res.size == (58, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 3)
	res = op(img)
	assert res.size == (58, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(58, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 1)
	res = op(img)
	assert res.size == (59, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 2)
	res = op(img)
	assert res.size == (59, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 3)
	res = op(img)
	assert res.size == (59, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(59, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 1)
	res = op(img)
	assert res.size == (60, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 2)
	res = op(img)
	assert res.size == (60, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 3)
	res = op(img)
	assert res.size == (60, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(60, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 1)
	res = op(img)
	assert res.size == (61, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 2)
	res = op(img)
	assert res.size == (61, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 3)
	res = op(img)
	assert res.size == (61, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(61, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 1)
	res = op(img)
	assert res.size == (62, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 2)
	res = op(img)
	assert res.size == (62, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 3)
	res = op(img)
	assert res.size == (62, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(62, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 1)
	res = op(img)
	assert res.size == (63, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 2)
	res = op(img)
	assert res.size == (63, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 3)
	res = op(img)
	assert res.size == (63, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(63, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 1)
	res = op(img)
	assert res.size == (64, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 2)
	res = op(img)
	assert res.size == (64, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 3)
	res = op(img)
	assert res.size == (64, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(64, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 1)
	res = op(img)
	assert res.size == (65, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 2)
	res = op(img)
	assert res.size == (65, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 3)
	res = op(img)
	assert res.size == (65, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(65, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 1)
	res = op(img)
	assert res.size == (66, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 2)
	res = op(img)
	assert res.size == (66, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 3)
	res = op(img)
	assert res.size == (66, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(66, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 1)
	res = op(img)
	assert res.size == (67, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 2)
	res = op(img)
	assert res.size == (67, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 3)
	res = op(img)
	assert res.size == (67, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(67, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 1)
	res = op(img)
	assert res.size == (68, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 2)
	res = op(img)
	assert res.size == (68, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 3)
	res = op(img)
	assert res.size == (68, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(68, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 1)
	res = op(img)
	assert res.size == (69, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 2)
	res = op(img)
	assert res.size == (69, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 3)
	res = op(img)
	assert res.size == (69, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(69, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 1)
	res = op(img)
	assert res.size == (70, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 2)
	res = op(img)
	assert res.size == (70, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 3)
	res = op(img)
	assert res.size == (70, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(70, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 1)
	res = op(img)
	assert res.size == (71, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 2)
	res = op(img)
	assert res.size == (71, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 3)
	res = op(img)
	assert res.size == (71, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(71, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 1)
	res = op(img)
	assert res.size == (72, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 2)
	res = op(img)
	assert res.size == (72, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 3)
	res = op(img)
	assert res.size == (72, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(72, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 1)
	res = op(img)
	assert res.size == (73, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 2)
	res = op(img)
	assert res.size == (73, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 3)
	res = op(img)
	assert res.size == (73, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(73, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 1)
	res = op(img)
	assert res.size == (74, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 2)
	res = op(img)
	assert res.size == (74, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 3)
	res = op(img)
	assert res.size == (74, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(74, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 1)
	res = op(img)
	assert res.size == (75, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 2)
	res = op(img)
	assert res.size == (75, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 3)
	res = op(img)
	assert res.size == (75, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(75, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 1)
	res = op(img)
	assert res.size == (76, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 2)
	res = op(img)
	assert res.size == (76, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 3)
	res = op(img)
	assert res.size == (76, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(76, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 1)
	res = op(img)
	assert res.size == (77, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 2)
	res = op(img)
	assert res.size == (77, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 3)
	res = op(img)
	assert res.size == (77, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(77, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 1)
	res = op(img)
	assert res.size == (78, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 2)
	res = op(img)
	assert res.size == (78, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 3)
	res = op(img)
	assert res.size == (78, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(78, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, None)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 0)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 1)
	res = op(img)
	assert res.size == (79, 1)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 2)
	res = op(img)
	assert res.size == (79, 2)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 3)
	res = op(img)
	assert res.size == (79, 3)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 4)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 5)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 6)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (40, 4), color=(0,0,0,0))
	op = Operations.Force(79, 7)
	res = op(img)
	assert res.size == (40, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(None, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 1)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 2)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 3)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 4)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 5)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 6)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 7)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 8)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 9)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 10)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 11)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 12)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 13)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 14)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(0, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 1)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 2)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 3)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 4)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 5)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 6)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 7)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 8)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 9)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 10)
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 11)
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 12)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 13)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 14)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 15)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 16)
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 17)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 18)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 19)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 20)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 21)
	res = op(img)
	assert res.size == (1, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 22)
	res = op(img)
	assert res.size == (1, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 23)
	res = op(img)
	assert res.size == (1, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 24)
	res = op(img)
	assert res.size == (1, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 25)
	res = op(img)
	assert res.size == (1, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 26)
	res = op(img)
	assert res.size == (1, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 27)
	res = op(img)
	assert res.size == (1, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 28)
	res = op(img)
	assert res.size == (1, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(1, 29)
	res = op(img)
	assert res.size == (1, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 1)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 2)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 3)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 4)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 5)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 6)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 7)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 8)
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 9)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 10)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 11)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 12)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 13)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 14)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 15)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 16)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 17)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 18)
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 19)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 20)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 21)
	res = op(img)
	assert res.size == (2, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 22)
	res = op(img)
	assert res.size == (2, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 23)
	res = op(img)
	assert res.size == (2, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 24)
	res = op(img)
	assert res.size == (2, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 25)
	res = op(img)
	assert res.size == (2, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 26)
	res = op(img)
	assert res.size == (2, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 27)
	res = op(img)
	assert res.size == (2, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 28)
	res = op(img)
	assert res.size == (2, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(2, 29)
	res = op(img)
	assert res.size == (2, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 1)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 2)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 3)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 4)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 5)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 6)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 7)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 8)
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 9)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 10)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 11)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 12)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 13)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 14)
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 15)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 16)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 17)
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 18)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 19)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 20)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 21)
	res = op(img)
	assert res.size == (3, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 22)
	res = op(img)
	assert res.size == (3, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 23)
	res = op(img)
	assert res.size == (3, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 24)
	res = op(img)
	assert res.size == (3, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 25)
	res = op(img)
	assert res.size == (3, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 26)
	res = op(img)
	assert res.size == (3, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 27)
	res = op(img)
	assert res.size == (3, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 28)
	res = op(img)
	assert res.size == (3, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(3, 29)
	res = op(img)
	assert res.size == (3, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 1)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 2)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 3)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 4)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 5)
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 6)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 7)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 8)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 9)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 10)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 11)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 12)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 13)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 14)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 15)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 16)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 17)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 18)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 19)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 20)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 21)
	res = op(img)
	assert res.size == (4, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 22)
	res = op(img)
	assert res.size == (4, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 23)
	res = op(img)
	assert res.size == (4, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 24)
	res = op(img)
	assert res.size == (4, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 25)
	res = op(img)
	assert res.size == (4, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 26)
	res = op(img)
	assert res.size == (4, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 27)
	res = op(img)
	assert res.size == (4, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 28)
	res = op(img)
	assert res.size == (4, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(4, 29)
	res = op(img)
	assert res.size == (4, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 1)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 2)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 3)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 4)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 5)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 6)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 7)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 8)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 9)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 10)
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 11)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 12)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 13)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 14)
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 15)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 16)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 17)
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 18)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 19)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 20)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 21)
	res = op(img)
	assert res.size == (5, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 22)
	res = op(img)
	assert res.size == (5, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 23)
	res = op(img)
	assert res.size == (5, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 24)
	res = op(img)
	assert res.size == (5, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 25)
	res = op(img)
	assert res.size == (5, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 26)
	res = op(img)
	assert res.size == (5, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 27)
	res = op(img)
	assert res.size == (5, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 28)
	res = op(img)
	assert res.size == (5, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(5, 29)
	res = op(img)
	assert res.size == (5, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 1)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 2)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 3)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 4)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 5)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 6)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 7)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 8)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 9)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 10)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 11)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 12)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 13)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 14)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 15)
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 16)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 17)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 18)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 19)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 20)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 21)
	res = op(img)
	assert res.size == (6, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 22)
	res = op(img)
	assert res.size == (6, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 23)
	res = op(img)
	assert res.size == (6, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 24)
	res = op(img)
	assert res.size == (6, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 25)
	res = op(img)
	assert res.size == (6, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 26)
	res = op(img)
	assert res.size == (6, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 27)
	res = op(img)
	assert res.size == (6, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 28)
	res = op(img)
	assert res.size == (6, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(6, 29)
	res = op(img)
	assert res.size == (6, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 1)
	res = op(img)
	assert res.size == (7, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 2)
	res = op(img)
	assert res.size == (7, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 3)
	res = op(img)
	assert res.size == (7, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 4)
	res = op(img)
	assert res.size == (7, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 5)
	res = op(img)
	assert res.size == (7, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 6)
	res = op(img)
	assert res.size == (7, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 7)
	res = op(img)
	assert res.size == (7, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 8)
	res = op(img)
	assert res.size == (7, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 9)
	res = op(img)
	assert res.size == (7, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 10)
	res = op(img)
	assert res.size == (7, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 11)
	res = op(img)
	assert res.size == (7, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 12)
	res = op(img)
	assert res.size == (7, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 13)
	res = op(img)
	assert res.size == (7, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 14)
	res = op(img)
	assert res.size == (7, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 15)
	res = op(img)
	assert res.size == (7, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 16)
	res = op(img)
	assert res.size == (7, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 17)
	res = op(img)
	assert res.size == (7, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 18)
	res = op(img)
	assert res.size == (7, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 19)
	res = op(img)
	assert res.size == (7, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 20)
	res = op(img)
	assert res.size == (7, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 21)
	res = op(img)
	assert res.size == (7, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 22)
	res = op(img)
	assert res.size == (7, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 23)
	res = op(img)
	assert res.size == (7, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 24)
	res = op(img)
	assert res.size == (7, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 25)
	res = op(img)
	assert res.size == (7, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 26)
	res = op(img)
	assert res.size == (7, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 27)
	res = op(img)
	assert res.size == (7, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 28)
	res = op(img)
	assert res.size == (7, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(7, 29)
	res = op(img)
	assert res.size == (7, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 1)
	res = op(img)
	assert res.size == (8, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 2)
	res = op(img)
	assert res.size == (8, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 3)
	res = op(img)
	assert res.size == (8, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 4)
	res = op(img)
	assert res.size == (8, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 5)
	res = op(img)
	assert res.size == (8, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 6)
	res = op(img)
	assert res.size == (8, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 7)
	res = op(img)
	assert res.size == (8, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 8)
	res = op(img)
	assert res.size == (8, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 9)
	res = op(img)
	assert res.size == (8, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 10)
	res = op(img)
	assert res.size == (8, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 11)
	res = op(img)
	assert res.size == (8, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 12)
	res = op(img)
	assert res.size == (8, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 13)
	res = op(img)
	assert res.size == (8, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 14)
	res = op(img)
	assert res.size == (8, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 15)
	res = op(img)
	assert res.size == (8, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 16)
	res = op(img)
	assert res.size == (8, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 17)
	res = op(img)
	assert res.size == (8, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 18)
	res = op(img)
	assert res.size == (8, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 19)
	res = op(img)
	assert res.size == (8, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 20)
	res = op(img)
	assert res.size == (8, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 21)
	res = op(img)
	assert res.size == (8, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 22)
	res = op(img)
	assert res.size == (8, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 23)
	res = op(img)
	assert res.size == (8, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 24)
	res = op(img)
	assert res.size == (8, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 25)
	res = op(img)
	assert res.size == (8, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 26)
	res = op(img)
	assert res.size == (8, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 27)
	res = op(img)
	assert res.size == (8, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 28)
	res = op(img)
	assert res.size == (8, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(8, 29)
	res = op(img)
	assert res.size == (8, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 1)
	res = op(img)
	assert res.size == (9, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 2)
	res = op(img)
	assert res.size == (9, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 3)
	res = op(img)
	assert res.size == (9, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 4)
	res = op(img)
	assert res.size == (9, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 5)
	res = op(img)
	assert res.size == (9, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 6)
	res = op(img)
	assert res.size == (9, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 7)
	res = op(img)
	assert res.size == (9, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 8)
	res = op(img)
	assert res.size == (9, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 9)
	res = op(img)
	assert res.size == (9, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 10)
	res = op(img)
	assert res.size == (9, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 11)
	res = op(img)
	assert res.size == (9, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 12)
	res = op(img)
	assert res.size == (9, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 13)
	res = op(img)
	assert res.size == (9, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 14)
	res = op(img)
	assert res.size == (9, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 15)
	res = op(img)
	assert res.size == (9, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 16)
	res = op(img)
	assert res.size == (9, 16)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 17)
	res = op(img)
	assert res.size == (9, 17)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 18)
	res = op(img)
	assert res.size == (9, 18)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 19)
	res = op(img)
	assert res.size == (9, 19)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 20)
	res = op(img)
	assert res.size == (9, 20)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 21)
	res = op(img)
	assert res.size == (9, 21)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 22)
	res = op(img)
	assert res.size == (9, 22)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 23)
	res = op(img)
	assert res.size == (9, 23)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 24)
	res = op(img)
	assert res.size == (9, 24)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 25)
	res = op(img)
	assert res.size == (9, 25)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 26)
	res = op(img)
	assert res.size == (9, 26)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 27)
	res = op(img)
	assert res.size == (9, 27)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 28)
	res = op(img)
	assert res.size == (9, 28)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(9, 29)
	res = op(img)
	assert res.size == (9, 29)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 1)
	res = op(img)
	assert res.size == (10, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 2)
	res = op(img)
	assert res.size == (10, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 3)
	res = op(img)
	assert res.size == (10, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 4)
	res = op(img)
	assert res.size == (10, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 5)
	res = op(img)
	assert res.size == (10, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 6)
	res = op(img)
	assert res.size == (10, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 7)
	res = op(img)
	assert res.size == (10, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 8)
	res = op(img)
	assert res.size == (10, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 9)
	res = op(img)
	assert res.size == (10, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 10)
	res = op(img)
	assert res.size == (10, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 11)
	res = op(img)
	assert res.size == (10, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 12)
	res = op(img)
	assert res.size == (10, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 13)
	res = op(img)
	assert res.size == (10, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 14)
	res = op(img)
	assert res.size == (10, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(10, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 1)
	res = op(img)
	assert res.size == (11, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 2)
	res = op(img)
	assert res.size == (11, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 3)
	res = op(img)
	assert res.size == (11, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 4)
	res = op(img)
	assert res.size == (11, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 5)
	res = op(img)
	assert res.size == (11, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 6)
	res = op(img)
	assert res.size == (11, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 7)
	res = op(img)
	assert res.size == (11, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 8)
	res = op(img)
	assert res.size == (11, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 9)
	res = op(img)
	assert res.size == (11, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 10)
	res = op(img)
	assert res.size == (11, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 11)
	res = op(img)
	assert res.size == (11, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 12)
	res = op(img)
	assert res.size == (11, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 13)
	res = op(img)
	assert res.size == (11, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 14)
	res = op(img)
	assert res.size == (11, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(11, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 1)
	res = op(img)
	assert res.size == (12, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 2)
	res = op(img)
	assert res.size == (12, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 3)
	res = op(img)
	assert res.size == (12, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 4)
	res = op(img)
	assert res.size == (12, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 5)
	res = op(img)
	assert res.size == (12, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 6)
	res = op(img)
	assert res.size == (12, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 7)
	res = op(img)
	assert res.size == (12, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 8)
	res = op(img)
	assert res.size == (12, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 9)
	res = op(img)
	assert res.size == (12, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 10)
	res = op(img)
	assert res.size == (12, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 11)
	res = op(img)
	assert res.size == (12, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 12)
	res = op(img)
	assert res.size == (12, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 13)
	res = op(img)
	assert res.size == (12, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 14)
	res = op(img)
	assert res.size == (12, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(12, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 1)
	res = op(img)
	assert res.size == (13, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 2)
	res = op(img)
	assert res.size == (13, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 3)
	res = op(img)
	assert res.size == (13, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 4)
	res = op(img)
	assert res.size == (13, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 5)
	res = op(img)
	assert res.size == (13, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 6)
	res = op(img)
	assert res.size == (13, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 7)
	res = op(img)
	assert res.size == (13, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 8)
	res = op(img)
	assert res.size == (13, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 9)
	res = op(img)
	assert res.size == (13, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 10)
	res = op(img)
	assert res.size == (13, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 11)
	res = op(img)
	assert res.size == (13, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 12)
	res = op(img)
	assert res.size == (13, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 13)
	res = op(img)
	assert res.size == (13, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 14)
	res = op(img)
	assert res.size == (13, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(13, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 1)
	res = op(img)
	assert res.size == (14, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 2)
	res = op(img)
	assert res.size == (14, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 3)
	res = op(img)
	assert res.size == (14, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 4)
	res = op(img)
	assert res.size == (14, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 5)
	res = op(img)
	assert res.size == (14, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 6)
	res = op(img)
	assert res.size == (14, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 7)
	res = op(img)
	assert res.size == (14, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 8)
	res = op(img)
	assert res.size == (14, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 9)
	res = op(img)
	assert res.size == (14, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 10)
	res = op(img)
	assert res.size == (14, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 11)
	res = op(img)
	assert res.size == (14, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 12)
	res = op(img)
	assert res.size == (14, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 13)
	res = op(img)
	assert res.size == (14, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 14)
	res = op(img)
	assert res.size == (14, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(14, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 1)
	res = op(img)
	assert res.size == (15, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 2)
	res = op(img)
	assert res.size == (15, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 3)
	res = op(img)
	assert res.size == (15, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 4)
	res = op(img)
	assert res.size == (15, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 5)
	res = op(img)
	assert res.size == (15, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 6)
	res = op(img)
	assert res.size == (15, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 7)
	res = op(img)
	assert res.size == (15, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 8)
	res = op(img)
	assert res.size == (15, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 9)
	res = op(img)
	assert res.size == (15, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 10)
	res = op(img)
	assert res.size == (15, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 11)
	res = op(img)
	assert res.size == (15, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 12)
	res = op(img)
	assert res.size == (15, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 13)
	res = op(img)
	assert res.size == (15, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 14)
	res = op(img)
	assert res.size == (15, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(15, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 1)
	res = op(img)
	assert res.size == (16, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 2)
	res = op(img)
	assert res.size == (16, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 3)
	res = op(img)
	assert res.size == (16, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 4)
	res = op(img)
	assert res.size == (16, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 5)
	res = op(img)
	assert res.size == (16, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 6)
	res = op(img)
	assert res.size == (16, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 7)
	res = op(img)
	assert res.size == (16, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 8)
	res = op(img)
	assert res.size == (16, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 9)
	res = op(img)
	assert res.size == (16, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 10)
	res = op(img)
	assert res.size == (16, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 11)
	res = op(img)
	assert res.size == (16, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 12)
	res = op(img)
	assert res.size == (16, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 13)
	res = op(img)
	assert res.size == (16, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 14)
	res = op(img)
	assert res.size == (16, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(16, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 1)
	res = op(img)
	assert res.size == (17, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 2)
	res = op(img)
	assert res.size == (17, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 3)
	res = op(img)
	assert res.size == (17, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 4)
	res = op(img)
	assert res.size == (17, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 5)
	res = op(img)
	assert res.size == (17, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 6)
	res = op(img)
	assert res.size == (17, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 7)
	res = op(img)
	assert res.size == (17, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 8)
	res = op(img)
	assert res.size == (17, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 9)
	res = op(img)
	assert res.size == (17, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 10)
	res = op(img)
	assert res.size == (17, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 11)
	res = op(img)
	assert res.size == (17, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 12)
	res = op(img)
	assert res.size == (17, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 13)
	res = op(img)
	assert res.size == (17, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 14)
	res = op(img)
	assert res.size == (17, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(17, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 1)
	res = op(img)
	assert res.size == (18, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 2)
	res = op(img)
	assert res.size == (18, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 3)
	res = op(img)
	assert res.size == (18, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 4)
	res = op(img)
	assert res.size == (18, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 5)
	res = op(img)
	assert res.size == (18, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 6)
	res = op(img)
	assert res.size == (18, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 7)
	res = op(img)
	assert res.size == (18, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 8)
	res = op(img)
	assert res.size == (18, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 9)
	res = op(img)
	assert res.size == (18, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 10)
	res = op(img)
	assert res.size == (18, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 11)
	res = op(img)
	assert res.size == (18, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 12)
	res = op(img)
	assert res.size == (18, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 13)
	res = op(img)
	assert res.size == (18, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 14)
	res = op(img)
	assert res.size == (18, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(18, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, None)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 0)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 1)
	res = op(img)
	assert res.size == (19, 1)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 2)
	res = op(img)
	assert res.size == (19, 2)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 3)
	res = op(img)
	assert res.size == (19, 3)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 4)
	res = op(img)
	assert res.size == (19, 4)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 5)
	res = op(img)
	assert res.size == (19, 5)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 6)
	res = op(img)
	assert res.size == (19, 6)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 7)
	res = op(img)
	assert res.size == (19, 7)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 8)
	res = op(img)
	assert res.size == (19, 8)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 9)
	res = op(img)
	assert res.size == (19, 9)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 10)
	res = op(img)
	assert res.size == (19, 10)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 11)
	res = op(img)
	assert res.size == (19, 11)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 12)
	res = op(img)
	assert res.size == (19, 12)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 13)
	res = op(img)
	assert res.size == (19, 13)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 14)
	res = op(img)
	assert res.size == (19, 14)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 15)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 16)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 17)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 18)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 19)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 20)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 21)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 22)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 23)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 24)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 25)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 26)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 27)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 28)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (10, 15), color=(0,0,0,0))
	op = Operations.Force(19, 29)
	res = op(img)
	assert res.size == (10, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (15, 29, -10, 34))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (23, 14, 16, 20))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-1, 13, 18, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-3, 20, -7, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (23, 12, -5, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (5, 28, 36, 35))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (8, 18, -6, 16))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (1, 16, 24, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-9, 21, 22, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (25, -3, 23, -11))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-2, 18, 16, 5))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (30, 14, 40, 36))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-4, 29, 38, 32))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (13, 8, -2, 8))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (3, 20, 18, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-3, 23, 27, 19))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (10, -1, -1, 5))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (8, 10, 19, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (26, 8, -7, -8))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (29, -9, 11, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (26, 20, -10, 37))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, 27, 9, -5))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (29, 11, -5, 15))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (13, 7, 20, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (18, 26, 28, -8))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (20, 21, 26, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (29, -8, 25, 21))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-7, 28, -10, -1))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (30, -6, -6, 1))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (4, 13, 40, 29))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (19, -6, 25, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (23, 11, 40, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (9, -3, 37, 29))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (28, 19, 29, 37))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (9, 11, 4, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (2, 26, -1, 27))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-4, 17, 31, 21))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (9, -6, -12, 25))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-4, -7, -1, -3))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (20, 24, 15, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (9, 18, -12, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (16, 21, 38, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (5, 24, 8, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (12, 30, 13, -6))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (30, -3, 30, 35))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (10, 8, 27, 30))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (27, -3, 28, -9))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-8, -9, -3, -4))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (13, 14, 20, -2))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (3, 8, 0, -6))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-9, 5, 17, 17))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (20, 16, -12, -12))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (16, 21, -12, 34))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (0, 4, 32, 0))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (22, 13, 7, -1))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, None)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (2, 26, 1, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-6, 21, 9, 26))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, -3, 17, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (20, 16, 36, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (5, -2, 9, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (3, -4, 0, 1))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (30, 0, 28, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-1, 19, 5, 1))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (8, -8, 24, 17))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (5, 3, -12, -4))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (15, 16, 31, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (9, 25, 22, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (20, 12, 14, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (6, -4, 19, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-8, 24, 16, 33))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (8, 23, 30, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (2, 21, 40, 5))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (1, 9, 31, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (20, 11, -3, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-3, 28, 8, 37))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-8, 30, 16, 21))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (13, 12, 16, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (24, 28, -7, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (3, 25, 18, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (16, 0, 27, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, None)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 22, -5, 5))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (13, 29, 22, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, None)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (1, 13, 35, -9))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (23, 27, 20, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (30, 0, 35, 11))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 15, 28, 6))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (6, -4, 35, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (20, 24, 33, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-9, -8, 19, 11))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-3, 9, 19, 11))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (11, -3, 31, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (23, -4, 5, 8))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 20, -6, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-6, 23, 21, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (7, 28, 37, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (25, 3, 35, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (14, 12, 11, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-4, -3, -1, 30))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (10, 17, 30, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (22, 25, -12, 37))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (22, 9, 14, -10))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (4, -3, 33, 6))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-1, -9, 27, 11))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (1, -7, 2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (4, 15, -5, 19))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-9, 7, 4, -1))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (17, 19, 12, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (22, 22, 10, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (25, 12, -12, 19))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (2, -3, 3, 35))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (8, -2, 11, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (2, 14, 34, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-7, 0, 8, 32))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (3, 12, 1, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-2, 2, 13, -12))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (30, 15, 8, 15))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-6, 28, -8, 28))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (24, -2, 38, 34))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (22, 4, 22, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (8, 13, 25, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (20, 28, 20, -12))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (8, 10, 17, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (17, -9, 8, -8))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-6, -1, 8, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (9, 22, 40, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (28, -5, 24, 31))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (16, -4, 32, 25))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (26, 8, 12, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (28, -1, -5, 32))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (5, 7, 9, 18))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (1, 28, 15, 36))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (21, 22, 10, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (16, 23, -5, -1))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-5, 0, -11, 34))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (29, 15, 30, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (22, 12, -11, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (12, -4, 31, 13))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (21, 15, 3, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-2, 5, 39, 13))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-4, -3, -7, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-5, 29, 1, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (19, 3, 2, 10))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (14, 21, 4, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (3, -9, 29, 29))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (17, 17, 2, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (3, -5, 13, -12))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (12, 16, -9, -5))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (19, -1, -12, 37))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (15, 22, 14, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (12, 23, -6, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (21, 11, -2, 32))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (30, 11, 27, -12))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 0, -8, 15))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (19, -4, 3, 38))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (0, 25, 14, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-1, 21, 37, 19))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (24, -2, -4, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (24, 21, 27, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (5, 5, 13, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (14, -8, 5, 36))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (9, 19, -4, 0))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (18, 15, 34, 21))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (11, 13, 37, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (2, 11, 0, -1))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (21, 6, -10, 39))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (29, 9, 10, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-8, 2, 37, 10))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (6, 23, -11, 9))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-8, -9, -5, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (22, 29, 5, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (0, 16, -12, -5))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-3, 13, -2, 25))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (25, 12, 26, 9))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (1, 0, 30, 35))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (30, -7, 15, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (0, 3, 38, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (24, 30, 11, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (23, 16, 29, -4))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (5, 22, 7, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (0, 17, -12, 29))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, None)
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (13, 27, 34, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-5, -4, 16, 24))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (10, 21, -5, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (7, -8, 34, 37))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, None)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (27, 5, 30, 13))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (11, -7, -4, 12))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-9, 12, 38, 29))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (29, 27, 12, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (25, 21, 18, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (5, -5, -11, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (2, 0, 3, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (11, 10, 12, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, None)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (26, -6, 1, 30))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-6, 30, -5, -3))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (8, 29, 18, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (26, 15, 24, -9))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, None)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (24, 14, -11, -4))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (9, 26, 37, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (28, 6, -7, 5))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (8, 11, 33, 18))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (22, 20, 10, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-3, 28, -6, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (24, 20, 21, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-4, 11, 29, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (6, -6, 6, -12))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (17, 7, 8, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (9, 24, 33, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (4, -9, -1, 21))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-3, 0, 1, 36))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-5, 25, 26, 34))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (30, -9, 24, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (18, 22, -11, -11))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (23, 14, 21, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (1, -8, 10, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-3, 13, -2, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 27, -6, -7))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (7, 18, 40, -11))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (0, -6, 20, 2))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (10, 12, -7, 7))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (24, 20, 8, -1))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (16, -1, 31, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (26, 5, 28, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-4, 8, 5, 6))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (10, 22, 2, -8))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (26, 27, 34, -4))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (19, 11, 13, -8))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (20, 7, -10, 6))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (3, -1, 20, 14))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (2, -2, 37, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (4, 21, -5, 14))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (5, -9, 27, 30))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 27, 31, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (9, -6, 14, 24))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (14, 11, 38, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-4, 2, -10, 13))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 18, -6, 39))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (2, 23, 11, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (20, 20, 11, -3))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (26, 12, 24, -9))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (16, -5, 30, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (7, 4, 35, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (12, 13, 26, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (20, 24, -10, 25))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (21, 24, 18, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, None)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (1, 19, 39, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (24, 5, -7, -3))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-4, 19, 23, 0))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (20, -5, -6, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (20, 6, 7, -1))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (27, 23, 13, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (5, 17, 10, -5))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (-3, 7, -6, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (26, 8, 19, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (22, -8, 19, 18))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (2, 23, -1, 8))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (26, -9, 22, -6))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (21, 14, 17, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-7, 25, 31, 32))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (17, 3, -8, 29))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, None)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-1, 7, 39, 15))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (29, 22, 15, -3))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (28, 5, 20, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (12, 16, -9, 25))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (23, 17, 22, 0))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (30, 23, 29, -11))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-8, 28, -4, -8))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (2, 30, 2, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (16, -1, -11, 9))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-9, -3, -3, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (8, 11, 40, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (23, 9, 8, -12))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (21, 27, -7, -10))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-9, -2, 6, 34))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (26, 14, -5, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-3, 28, -7, -8))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (6, 4, 33, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (23, 22, -11, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (1, -2, 12, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (2, 21, 15, 14))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-1, 5, 2, 9))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-9, 30, -7, -9))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-4, 15, 33, 28))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-9, 30, 23, -2))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (25, 17, 9, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (1, -6, 6, 26))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (25, 21, -4, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (30, -8, 3, 0))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (5, 25, 2, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (6, 22, 5, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, None)
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (30, 16, 7, -12))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (9, 22, 13, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (24, 18, -11, 11))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (2, -3, 35, 20))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (27, 26, 23, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (14, 10, 0, -5))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (22, 3, 19, 13))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (15, 3, -6, 26))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (3, 20, -2, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (1, 25, 14, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-6, 25, 19, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-3, 11, -11, -7))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (18, 20, -12, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (25, 27, -4, -9))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (5, 20, -9, -2))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (15, 1, 30, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (14, -5, -4, 15))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (8, 25, -1, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (10, 29, 27, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (13, 25, 5, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (19, 1, 8, 40))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (24, -9, 10, 19))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (6, 27, 11, -11))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-1, -7, 29, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-6, 19, 11, -1))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-2, 22, 25, -10))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-8, 2, 26, 25))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (7, 22, 19, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (16, 2, 37, 0))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (25, -1, 26, 3))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (24, 9, 15, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (26, 10, -5, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-5, 11, 16, 39))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-4, 11, 13, 32))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-6, -2, 39, -7))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (5, 1, 4, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (13, 1, -7, 6))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (9, 2, 4, 26))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (10, 25, -7, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (16, 10, 12, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (7, -3, 24, 25))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (12, 10, 22, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (24, -1, 22, 40))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (9, 13, 12, 17))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (26, 4, 10, 10))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (10, 10, 36, 0))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (15, 13, 22, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (30, 19, 14, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (3, -8, 35, 36))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (9, 29, 25, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-5, 20, 8, 15))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (15, -2, 33, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (14, 17, 26, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (6, 14, 4, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (19, 7, 0, 13))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-6, -8, -6, -11))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (1, 14, -12, 34))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (2, -4, 40, 40))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (3, 14, 5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (18, -5, 12, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (8, 29, 22, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (26, 9, 33, 5))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (28, 25, -10, 28))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (5, 0, 4, -7))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (14, -1, 37, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (11, 30, -4, 2))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (15, 25, 40, -11))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (13, -6, 26, 0))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (5, -1, -3, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (26, 3, 2, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-8, 24, 37, 13))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (24, -5, 18, 25))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, 14, 15, 13))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (1, 21, 31, 13))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (11, 25, 11, -10))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-2, 6, -10, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-2, 8, 39, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (8, 11, 35, -10))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (29, 14, -12, 18))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (24, 15, -12, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (13, 22, 15, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-4, 3, 38, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (27, 5, 12, 24))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (28, 1, 27, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (10, 18, 31, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (24, 3, 22, 33))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (26, 29, 27, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (26, 16, 3, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (3, 28, 10, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (20, 10, 22, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, 16, 24, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (28, 19, -3, 21))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (20, -7, 13, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (24, 9, -2, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (20, 15, -11, 29))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (15, 20, 5, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (16, 10, 22, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (6, 11, 15, 29))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (20, 1, 0, 11))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (19, -9, 16, -11))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (23, 20, 32, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (6, 24, 9, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (17, -3, 39, 38))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-8, 26, -2, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (14, 27, 17, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (9, -2, 14, 20))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (25, 15, -12, 28))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (3, -5, 0, 8))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-4, -8, 23, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (13, -3, 18, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (23, 13, 15, 31))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (16, 20, 27, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (-6, 19, -4, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (19, 16, 13, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, 16, 11, -3))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (1, 16, -4, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (2, -6, 23, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (12, 0, 16, -11))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (4, 21, 10, -9))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (30, 7, 22, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-2, 10, 14, 2))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (30, 13, 3, -11))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-4, 7, 1, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (30, 30, -10, 16))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (10, 25, 29, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (21, 2, 39, 12))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (5, -7, 25, 21))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (23, 19, 9, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (13, -8, -3, 23))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (20, 24, -9, -5))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (10, 16, 37, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (12, 29, 18, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (7, 7, -8, 2))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (10, 15, 17, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (21, -6, 33, -11))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (27, 23, 21, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (15, -2, 10, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (11, 15, 34, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (4, -1, 15, 38))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (10, -5, 17, 37))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (20, 5, 3, 24))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (15, -8, 29, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (20, 14, 5, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (2, 23, -7, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (9, 16, 25, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, None)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-6, 12, 13, 34))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (21, 24, 36, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, None)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (15, 11, -5, 27))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-4, -1, 5, -3))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-5, 10, 12, 9))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (30, -5, 9, -11))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (23, 20, 33, -8))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (12, -9, 24, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (6, 5, -5, 38))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-3, 10, -2, 6))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (11, 30, -4, 22))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (7, 18, 39, 14))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (20, 26, 19, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (13, 0, 8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (7, 21, 1, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (14, 8, 12, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (24, 1, 4, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-8, 13, 15, 34))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (2, -1, 5, -10))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-7, 4, 5, 32))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-2, 18, 40, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (8, 0, 31, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (2, 2, 3, 22))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-5, 17, -8, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (21, 17, 38, -7))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-3, 21, 26, 25))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-4, -7, 31, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (4, 13, -9, 1))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (12, 28, 17, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (22, -3, -6, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-4, 21, 29, 0))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-8, 7, 19, 18))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-5, 24, -7, -1))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (29, 27, 38, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (26, 22, 14, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (24, 28, 33, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-9, 30, 18, 40))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (28, 16, 31, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (27, 18, -5, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (16, -3, -2, 24))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-1, 5, 17, 4))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (1, 0, 18, 8))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (16, 25, 16, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-9, 6, 22, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-5, 23, 32, 2))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (0, 3, 5, 4))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (26, 25, 35, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-1, -1, 2, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (9, 11, 30, 25))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-7, 6, 12, 20))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (27, 10, 24, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (10, 30, 7, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (4, 6, -10, -11))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-8, -9, 37, -3))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (6, -5, -5, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (9, -6, 27, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (27, 0, 21, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (11, 7, 29, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-3, 1, -2, 13))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (28, 8, 2, 34))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (14, 7, -2, 37))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (5, 8, 35, 31))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-3, 14, 0, 25))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, None)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (25, 27, -4, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-6, 15, -10, 24))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (19, 18, -7, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (26, -8, 32, -2))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-3, 15, -10, -10))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-6, -5, 28, 5))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (17, 9, 19, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (25, 8, 3, 15))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-1, 19, 11, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-7, -2, 15, 35))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (7, -5, -5, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (10, 8, 27, 36))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (1, 4, 2, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (28, 0, -11, 24))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (13, 29, -1, 31))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-8, 0, 28, 21))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (9, -7, -7, 8))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (25, 6, -10, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (22, 0, 23, 10))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (13, 18, 22, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (30, 23, 36, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (1, -2, 11, 25))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (13, -3, -4, -5))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-3, 10, -4, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (23, 21, 29, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-9, -7, 25, 9))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-3, -5, -2, 28))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (1, 18, -3, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (14, 29, 1, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (3, 8, 6, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-2, 4, 22, 40))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (6, 22, 29, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, None)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (17, 28, 2, -11))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (14, -2, 40, 21))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (26, -9, 29, 13))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (20, -1, 24, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (1, 14, 40, 0))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (1, 8, 1, 23))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-3, 18, -1, 2))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-1, -4, 35, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (21, 7, 26, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (29, 13, 1, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (3, -5, 2, 27))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (24, 7, 2, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (17, -4, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-7, 24, 8, 8))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (30, -5, 24, -3))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (23, -7, 34, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (25, 13, 1, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (20, 16, 29, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (11, -7, -9, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-5, -7, 8, 30))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (24, -4, 34, 15))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (22, -9, 32, 32))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (14, 10, 3, 9))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-6, -3, 30, 7))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (20, 14, 24, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (27, -1, 1, -5))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (19, 3, 38, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (21, 6, 7, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (27, 11, 40, -3))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (7, 4, 34, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (14, 20, 35, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (13, 13, 14, -1))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (25, 1, -5, 25))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-7, 18, 40, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (5, 21, -1, 36))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (29, -4, 38, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (20, 19, 23, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (8, 3, -12, -9))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-5, 27, -9, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (26, -3, 13, -1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-7, -3, -10, 11))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (14, 4, 30, 40))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (25, -1, -12, -3))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (25, 9, 20, 24))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-7, 9, -8, 40))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (4, 8, 19, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (20, 24, 17, -8))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, None)
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-2, 24, 23, 12))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (17, 22, 5, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (9, 11, -1, 16))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (29, -1, 12, -1))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (30, -9, -6, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (25, -7, -3, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (19, 5, 34, -9))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-7, 10, 11, 27))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-2, 26, 37, 20))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (13, 27, 11, -12))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (24, -3, 9, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (2, 17, 30, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-6, -2, 9, 27))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-3, 4, 16, -10))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (17, 17, 5, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (2, 1, 4, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (19, 19, 21, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (8, 8, 32, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (26, -6, 30, 37))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (10, 0, -10, 6))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (9, 18, 9, 11))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-7, 10, 17, 7))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (11, -6, -5, -12))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (24, 25, 38, -9))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (5, -7, 2, 25))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (14, 17, 16, 0))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (22, 26, -9, 27))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (23, 23, 37, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (4, -2, -2, 5))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-7, 21, 10, -3))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (14, 26, 34, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-7, 13, -1, 12))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (0, 30, 23, 25))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (18, -4, 28, 18))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (19, 12, -10, 29))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-4, 22, 4, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (20, 10, 30, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (27, 8, 29, 24))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (17, 2, -9, 27))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (2, 19, -1, 18))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-8, -6, 35, 34))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-9, 0, 35, 33))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (3, 27, 3, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (8, 22, -1, 22))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (2, 19, 39, 22))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (19, 4, 22, -11))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-5, 10, 0, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (23, 7, -9, 19))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (-1, -4, -1, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (13, 19, 12, -9))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (22, 13, 21, 19))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (15, 6, 30, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (22, 24, 1, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (27, 29, -11, 13))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-5, 18, 34, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (15, -8, -8, 14))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-8, -3, 19, -7))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (8, -3, 6, 40))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (18, 10, 32, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (6, 15, 36, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (10, 12, -10, -10))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (8, 29, 27, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (11, -9, 39, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 7, 19, -1))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (19, 14, -3, -3))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-3, 2, -6, 36))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (3, -1, 18, 26))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (14, -6, -6, 12))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-2, 3, -11, 38))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-5, 2, -12, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-1, 17, 11, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (21, 26, 8, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (4, 13, 37, -6))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (3, -1, 6, 38))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (24, 2, 9, 15))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (1, 21, 23, 27))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (1, 20, 25, -11))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-9, 2, 15, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (24, 2, -5, 18))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-9, -7, 2, 14))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-5, 9, 38, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-7, 30, 10, 7))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (1, 5, 9, 5))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (26, 19, 3, 0))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (17, 16, 8, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-9, 20, 25, 7))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-5, 18, 35, 0))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-7, 28, -12, 14))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (11, 6, 30, 30))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (28, 20, 27, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-5, 22, -4, 34))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-6, 30, -10, 18))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (3, 5, 22, -8))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-4, 28, 1, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (28, 28, -12, 31))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (17, -8, 36, 27))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (28, 20, 14, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (1, 4, 6, -2))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (24, -7, -5, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-2, 28, -9, 27))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (23, 19, 39, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (26, 4, 19, -8))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (11, 24, 33, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (29, 3, 12, 24))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-9, 21, 31, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (6, 13, 13, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (26, 28, -6, 32))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (28, 15, -6, 26))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (0, 5, 22, -4))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-6, -1, 4, -11))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (1, 14, 16, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (12, 3, -9, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (15, -7, -7, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-5, 21, 29, 37))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-9, 23, 21, 7))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (25, -5, 26, -9))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-4, 1, 12, 24))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-1, 10, 26, 11))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (3, 10, 25, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, -4, -5, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (22, -2, 13, 11))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (15, -6, 40, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (18, 18, 3, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (25, 2, -1, 35))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (5, -7, 34, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, 21, 33, -3))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-3, -1, 9, 30))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (11, 24, 35, -10))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (18, -7, 32, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-9, 22, -6, 17))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-6, 1, 3, 31))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (16, 2, 29, 11))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (23, 28, 8, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (25, 0, 5, 12))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (24, 16, 21, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-2, 23, 13, 21))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (29, 22, 12, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (29, 12, 31, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (2, 15, -3, -1))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (17, 22, -7, 26))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (12, 13, 37, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (21, -9, -7, -11))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (9, 7, 6, 35))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-3, 26, 29, 40))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (3, 19, 40, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (8, 8, 38, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (29, -4, 30, 34))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (21, 23, 14, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (25, -3, 20, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (27, -8, 6, 20))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (11, -5, 30, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (23, 12, 8, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (2, -6, 8, 5))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (17, 20, 9, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (3, 21, -4, 15))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (28, 29, 19, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (14, 5, -5, -1))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (21, -9, 27, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (19, 26, 30, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-7, -8, 19, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (22, 18, -7, -9))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-7, 23, -10, 26))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (2, 18, -7, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (0, 23, 28, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, -1, -7, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (0, 3, 10, 38))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (6, 10, 24, 18))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, 26, 27, -7))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (17, 23, 32, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (19, 1, 15, -2))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (18, 12, -1, 13))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (6, -6, 31, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (15, -1, -10, 40))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (9, 13, 4, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (17, 26, -3, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (27, 29, -1, 19))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (14, 15, 1, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-2, 18, 11, -12))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (18, 12, 36, -10))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (15, 1, 1, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (26, 28, 11, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (23, 17, -8, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (22, 8, 10, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (23, 12, -11, -10))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (7, -8, -10, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (16, 23, 25, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (10, 4, 0, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (22, 18, -3, 23))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-7, 28, 5, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (10, 5, -2, 23))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (23, 17, 3, -1))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (29, 30, 38, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, None)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-9, 13, 14, 22))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (13, 2, 2, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (9, 28, 4, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-8, 16, 4, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-9, 22, 0, 32))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (16, 1, 19, 35))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-7, 12, 24, 11))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-8, 16, 11, 28))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (15, -5, 24, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (9, -3, -7, -3))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (-3, 3, -4, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (10, -2, 0, 23))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (5, -6, -10, 9))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (21, 27, 0, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-5, 9, 35, 7))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (25, 11, 27, 29))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (3, 18, 33, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-6, -2, -10, 22))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (26, 22, 27, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, 13, 4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (19, 8, 10, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (2, 3, -11, 31))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-4, -2, 37, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (9, 21, 8, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (20, 10, 10, 11))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (30, -6, 16, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (17, 26, 2, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (17, 17, -2, -8))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-2, -6, 34, 19))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (7, -6, 35, -7))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (29, 7, 11, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (10, 7, 20, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (19, 30, 37, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (22, 7, 4, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (11, 19, 14, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (6, 10, 31, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (6, 30, 25, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (18, -1, 9, 30))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (8, 27, 9, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-7, 3, 32, -4))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (18, 25, 24, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (3, 15, -12, 7))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (30, 23, 23, -9))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (8, 1, -5, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (8, 20, 2, -7))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (21, -8, 2, 32))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (17, 13, -5, 38))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (26, 24, 4, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (12, 8, -6, 17))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (5, 20, 39, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (16, -3, -4, 4))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (9, 1, 5, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (11, 8, -9, 32))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-8, 15, 38, -11))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (2, 28, 24, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-2, 25, 25, -8))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (19, -6, 37, 26))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (18, 2, 2, 20))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (3, 27, -12, -1))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-2, 18, 19, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (4, 30, 4, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (29, 6, 39, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-4, -5, 33, 27))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (11, -7, 26, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, None)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (6, -3, 1, 13))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (7, 3, 8, -4))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (2, -5, 16, 30))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (1, 15, 12, -11))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (28, 19, -4, 1))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-6, 22, 31, 1))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (11, 0, -7, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (19, 15, 34, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (17, 1, -8, -1))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (14, 12, 0, 31))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (2, 2, 28, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (12, 24, 36, -8))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (29, 21, 14, -11))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, None)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (12, -3, 37, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-5, 0, 15, 10))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (0, 27, 0, 14))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (20, 0, 28, -4))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (21, 13, 31, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (25, 27, 18, -8))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (28, 25, 1, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-2, -8, 35, 16))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-1, -7, 39, 13))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (15, -4, -9, 4))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-2, 6, 7, 31))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (17, 6, 39, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (30, -3, 19, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-2, 4, 20, 28))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (16, -2, -5, -9))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-1, 16, 0, 21))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (5, 2, -1, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (8, 0, 38, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (5, 10, 37, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-2, 16, 16, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (6, 0, 4, 23))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-3, 25, 13, -11))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (11, 22, 20, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (23, 20, 7, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (25, 22, 35, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, None)
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (13, 27, -11, 17))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (14, 10, 11, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (9, 3, 17, 36))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (28, 28, -12, 28))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-3, 29, 25, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (8, 21, 2, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-7, 13, 18, 29))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (0, 26, -10, 0))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (12, 13, 17, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (29, 13, 3, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (6, 13, 34, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (11, 5, 10, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (28, -9, 20, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (6, 2, 31, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (3, 28, 13, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (9, 9, 18, 0))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (13, -3, 8, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-6, 11, 22, 2))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (24, 25, 16, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (6, -3, 23, 8))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, None)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (1, -3, 40, 29))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (12, 25, 12, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (24, 15, 1, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (22, 28, 28, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (0, 0, 12, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (12, 6, -12, 12))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (14, 4, -11, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, None)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 14, 17, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (21, 10, -12, 19))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (22, -9, 34, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (11, 29, 17, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (6, 19, 17, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (23, 30, 9, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-4, 21, 9, -7))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (29, 18, 2, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (9, 21, -12, 11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (24, -5, 15, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (5, 8, 17, 0))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (12, -7, 37, 34))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-8, 0, 27, -4))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-7, 24, 25, 36))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-4, 5, -7, -1))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (24, -4, 40, 34))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (3, 5, 16, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (22, 24, 40, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (29, 6, -8, 0))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (30, -1, 40, 18))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (15, 13, 19, 40))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (9, 13, -1, 15))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (0, 9, -7, 9))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (21, 30, 21, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (-7, 29, -9, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (9, -1, 20, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (-5, 25, 14, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-8, 4, 32, 19))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (1, -8, 5, -2))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (12, 4, 21, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (28, -6, 27, 27))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-8, 12, 25, -12))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-4, 13, 40, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (12, 28, 25, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-3, 16, 34, 1))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (5, 20, 32, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (3, -9, -8, 2))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-2, 20, 37, 19))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (3, 26, 10, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (11, 0, 29, -9))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (27, 30, -8, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-4, 24, 29, 11))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (1, 30, 19, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (11, 14, 23, 28))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-2, 12, 12, 38))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (16, 16, 11, 34))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (12, 25, 20, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (8, 9, 13, -11))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (23, 0, 2, 31))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (8, 10, 13, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, None)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-6, 15, -10, 18))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-9, -9, 17, 21))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (30, -3, 38, 20))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (26, -3, 32, 29))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (25, -8, 11, 37))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (22, 7, 32, 28))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (21, 1, 10, -2))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (15, 23, 14, 0))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (15, 20, -9, 10))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-9, 3, 32, 26))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (13, 30, 6, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (30, 23, 5, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (28, 5, 3, 20))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (5, 0, 20, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (6, 16, 27, -12))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (22, 28, 5, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-9, 25, 13, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-7, -1, 36, 37))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-8, 25, 24, 37))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (0, 2, 38, 36))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-8, -9, 31, 5))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (0, -9, 4, 10))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (26, 11, 0, -4))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-9, -2, 23, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-6, 23, 0, -4))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-7, 3, -3, 32))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (0, 7, 14, 32))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (27, 1, 21, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-6, 29, 7, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (28, 2, -3, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (24, 2, 3, 36))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-5, 19, 8, 38))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (14, 16, -10, 13))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-6, -8, 35, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-3, -8, 29, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (19, 28, -4, 7))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (21, -5, 36, 22))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (13, 22, -8, 35))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (13, 23, 28, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (1, 25, 20, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (26, -5, 28, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (23, 25, 20, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, None)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (27, -7, -1, 25))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-4, 0, 14, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (21, 17, 9, 0))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (1, -4, 3, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 27, 7, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (22, 10, 38, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (27, 0, -7, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (27, 23, 36, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (9, 25, -11, -7))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (1, 8, 17, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (9, 11, 27, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (21, -3, 20, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (29, -8, 35, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-5, 25, -11, 13))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (16, -7, 26, -4))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-8, 12, 39, 29))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (21, 17, 13, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (17, 18, 8, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (14, 15, 12, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (27, 24, 9, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (14, 4, 26, -1))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (20, 10, -5, 1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (11, -9, 30, -8))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (14, -7, 32, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (4, 4, 4, 31))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (14, 7, 10, -8))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (25, 20, -2, 4))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-4, -1, -11, 34))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (29, 28, 20, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-3, 17, -4, 24))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (24, 9, 14, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (22, 18, 25, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (20, 14, 27, 36))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (13, 14, 17, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, 16, 28, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (15, -6, 13, 33))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (20, 11, 24, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (17, -1, 40, -4))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-8, 26, 25, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-5, 16, 8, 7))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-7, 26, 7, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-2, -2, 39, 25))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-8, 16, 9, -7))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (18, 18, 39, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (0, 6, 33, 32))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-4, 1, 23, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (19, 1, 6, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-3, 30, 40, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (2, 0, 11, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (20, -4, 39, 39))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (22, 27, -8, 26))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (29, -5, 5, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (24, 6, 13, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (2, 22, 25, 21))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (3, 21, -2, -2))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (26, 9, 3, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-2, 30, 18, -6))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (21, 24, 25, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (10, -6, 12, 24))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-4, 18, 3, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (22, -5, 30, 40))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (15, 24, -7, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (15, 27, -1, 21))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-4, 16, 11, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (10, 16, -5, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-3, 18, -11, 40))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (5, -6, 8, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-1, 10, 35, 18))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-4, 25, 31, 27))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (8, -3, 6, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (23, 30, 15, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (3, 22, 3, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (22, 30, 21, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-5, 9, 28, -3))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (20, 24, 16, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (12, 5, -8, -5))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (8, 13, 12, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (12, 26, 22, -4))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (25, 4, 39, -9))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (16, 13, 15, 29))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (21, 25, -5, 35))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (10, 30, 14, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (28, 9, 2, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-5, 13, 15, -1))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (17, 4, -12, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (8, -8, 24, 25))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-2, 0, 23, 27))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (26, 28, -11, 28))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (14, 7, 22, 16))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (25, 24, 6, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (9, 13, 34, -6))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (11, 13, 37, 26))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (23, 4, 30, 30))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (18, 25, 18, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (22, -1, 24, 20))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (6, 17, 36, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-4, -4, 1, 30))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (0, 17, 24, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-6, 10, 37, 25))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (2, 24, 14, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (29, 17, 2, 31))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (4, 17, -5, 34))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (1, 24, 6, 14))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-2, 19, 20, 9))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (23, 0, -1, -2))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-3, 25, 16, 25))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-8, 15, 31, 28))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (0, -4, 3, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-9, 1, 34, 15))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (17, 0, 34, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (10, 14, 23, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (10, 6, 34, 38))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-3, -9, 4, 21))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (27, -9, 31, 15))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (8, -9, 23, 13))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-9, -4, -12, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-4, 14, 19, 25))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (28, 22, 32, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-3, 26, 23, -6))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (28, 8, 40, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (27, 19, 10, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (15, 20, -3, 24))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (30, 7, 10, 0))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, -7, 38, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-4, 12, 23, 38))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-3, 24, -4, 40))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (6, 16, 30, 33))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (4, 16, -12, 21))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (19, 6, 29, 29))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (0, 29, -4, -6))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (29, -4, 31, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (21, 18, -5, 16))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (4, -6, 15, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-9, 30, -8, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-3, 17, 11, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (19, 20, 34, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-3, 11, 29, 11))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-7, -7, 19, 29))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-9, -6, -10, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (13, 13, 36, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (21, 22, -2, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (25, 21, -2, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (9, -2, 1, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (17, 23, 20, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (2, 3, 28, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, None)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (6, 29, 10, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (3, -6, 12, -4))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-1, -4, 27, 17))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (11, 12, 12, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (13, 23, -7, 21))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-3, 19, 16, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (12, 5, -2, 32))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (1, 2, 4, 18))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (20, 26, 8, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (26, -1, 24, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (21, -2, 0, -11))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (0, 10, 8, 16))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (13, 0, 33, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (19, 15, 24, -12))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (22, 25, -2, 1))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (20, 22, 11, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-2, 1, 7, 29))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (23, 26, 9, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (14, -6, 26, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (24, 25, 5, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, 15, 5, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (4, 30, 23, -10))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (30, 14, 19, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-7, 25, 23, 40))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (11, -6, 31, -6))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (4, 30, -9, 10))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, None)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (11, 10, 14, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, 24, 20, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (14, 19, 21, -1))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (16, 25, 10, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (8, 28, -12, -12))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (11, -4, -12, 40))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (30, 6, 20, 26))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (18, 5, 27, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (10, 26, 30, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (26, 30, 22, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (1, 5, 23, -11))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (4, 2, -4, 39))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (13, 30, 38, -6))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, 22, 16, 38))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-5, -2, 21, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, None)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (29, 28, 16, -10))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (1, 18, 36, 32))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (17, -1, 12, 29))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (23, -5, 33, -2))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (6, 7, 28, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-9, 16, 0, 28))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (1, 27, 28, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (30, 7, 4, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (1, 28, -9, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (19, 16, 1, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (4, 24, -2, 32))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (7, 28, 35, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, None)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (17, 21, -2, 27))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-5, 18, 27, 25))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (4, 15, 11, 13))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (16, -9, 1, 28))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (21, -9, -3, 35))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, None)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (30, 14, 20, 0))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (4, -6, 5, 36))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (6, 9, -10, 8))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (22, -8, 10, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-3, 9, -9, 18))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-6, 9, 3, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (21, 23, 40, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (27, 1, 34, 0))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (1, 15, 32, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-3, 15, 26, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-1, -3, 8, 11))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (13, 19, -8, -11))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (20, 6, 33, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (22, -3, 7, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (17, 14, 25, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (26, 24, 32, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (21, 26, -9, -11))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (7, 3, 7, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (0, 22, 14, -7))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (25, 30, 37, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (29, 17, 10, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (9, -4, 38, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-5, 15, 3, -6))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (21, -6, 6, 28))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-5, -7, 0, 39))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (1, 29, 24, -11))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (30, 8, -2, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (25, 21, 15, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (2, 19, 9, -5))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-9, -3, 19, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (11, 19, 21, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (15, 16, -1, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (22, 0, 6, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (23, 15, 39, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (23, 30, -4, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (1, 1, 6, -1))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (6, 19, -11, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (12, 13, 11, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-4, 6, 15, 32))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (15, 0, 13, 24))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-7, 26, 8, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-1, -3, -9, -11))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (20, 29, -9, 8))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (12, 20, 36, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (16, -7, 5, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-9, 6, -6, 31))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (26, 9, 23, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (30, 0, 7, 22))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (6, 2, 6, 36))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-8, -2, 32, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (22, 6, -1, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (30, 23, -12, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (4, 18, 27, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (12, 29, 17, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (18, -6, 31, 23))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (29, 28, 21, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (14, 22, 5, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (29, 2, 4, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-9, 26, 3, 0))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (22, 21, 37, -3))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (19, 0, 33, -11))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (11, 3, -6, 15))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (22, 4, -6, 11))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (0, 22, 37, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (20, 3, 30, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (13, 6, 2, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (4, 3, -9, 15))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (0, 23, 12, 5))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (10, 7, 25, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (18, -3, 12, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (16, -4, -12, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (3, 8, 3, 18))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (27, 19, 2, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (21, 11, 31, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (2, 28, 20, 34))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (11, 1, -10, 5))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (19, 28, 39, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (12, 21, 19, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (8, 25, -2, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (15, 1, 16, 36))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (11, 27, 15, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, None)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (16, 4, 28, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, None)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-9, -8, -12, 36))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, None)
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (15, -6, -8, -5))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (17, 23, -1, 40))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-2, -4, -1, 5))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, -5, 29, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (26, 7, -3, 14))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (18, -6, -10, 17))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (1, 15, 40, 26))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (8, 15, 6, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-6, -6, 7, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (4, 26, 38, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (3, 9, 17, 10))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-7, 1, 7, 0))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (26, 26, 28, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (6, 3, 20, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (21, 18, 26, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-7, -7, 8, -6))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 7, 19, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (22, -7, 22, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (11, -9, 10, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (9, 14, 9, -8))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (16, 6, 31, 30))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (7, -8, 16, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (10, 18, 11, -5))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (30, 17, -6, 12))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (19, 18, 19, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-3, 21, 3, -1))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (22, 17, 26, -11))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (14, 1, -6, -6))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (25, -9, 16, 34))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (29, -7, 24, 11))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (5, 19, -10, 36))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (4, -7, 5, -8))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (25, 7, 8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (7, 15, 39, -8))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (22, 17, -1, -4))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (23, 12, 20, -7))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (16, -1, 24, 14))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (28, -6, 11, 18))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (20, 6, -8, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (2, -5, -8, 23))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (19, 24, 31, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (24, 13, 3, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (29, 6, 8, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (2, 0, 28, 22))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (11, -4, -4, 18))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (9, 5, 10, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (29, 16, 19, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-5, 17, 0, -3))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (11, 16, 39, 18))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (15, -4, 19, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (6, 5, 39, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (14, 5, 12, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-3, -1, 5, 36))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (11, 20, 8, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (6, -2, 25, 18))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (24, 23, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (6, 4, 33, 26))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (8, 3, 16, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (24, -8, 37, 35))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-8, 20, -4, 13))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (14, 25, 27, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (23, 7, -3, 28))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (12, 13, -6, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (29, 29, 26, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (-9, 22, -9, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-1, 9, 29, 40))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (11, -2, 22, -9))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (17, 0, 2, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (16, 21, 40, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-2, 0, -12, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (20, 10, 1, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-8, -8, 22, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-3, 26, 31, 37))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (18, 3, 38, 25))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (28, 29, 0, 19))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-1, 25, -1, 15))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (16, 10, 4, -9))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (27, 18, -8, 14))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (28, -4, -4, -2))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (29, 24, 1, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (4, 6, 13, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (17, -8, 39, 39))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (1, 6, -7, -11))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (12, 30, 35, -2))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (16, 16, 0, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (19, 17, 13, -11))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (18, 8, 37, -4))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (23, 16, 14, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (2, 18, -10, 30))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-1, 1, -1, 36))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (13, 11, 24, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (10, 18, -6, 13))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (4, 22, 39, 34))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-9, 27, -8, 29))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (21, 14, 24, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-4, -5, 21, -10))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (25, 28, -1, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (19, 10, 38, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-8, 28, 23, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (0, 4, 17, 13))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (20, -3, 20, 40))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (7, -6, 34, -7))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-9, 10, 21, -8))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (5, 23, 7, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (2, -2, 30, 11))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (21, 5, 15, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (1, -5, 1, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (9, 11, -9, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (20, 16, 6, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (21, 20, 27, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (20, -2, 10, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (3, 27, -6, -8))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (28, 9, 13, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (12, 8, -1, 32))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (11, -5, 10, -5))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (7, 19, 10, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (3, 0, 3, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (12, 16, 4, -2))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (9, 12, 32, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (25, 10, -11, 21))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-8, 18, -5, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (15, 16, 20, -3))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-5, 3, 14, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-7, 0, 17, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (13, -7, 26, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (30, 13, -7, 17))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-3, -2, 19, 9))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (14, -5, 13, 7))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (6, 25, 18, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (8, -4, 3, 24))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (2, -3, 21, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-3, -4, 1, -12))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (23, 21, 15, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (14, 28, -4, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (17, -6, 8, -7))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (24, 2, -2, 18))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (16, 10, 26, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (7, 23, -5, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-4, -4, 30, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (28, 13, 18, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (3, 5, 39, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (15, -5, -5, 33))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (9, 22, 4, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-9, 0, 22, 26))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (23, 23, 37, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (0, 29, -7, 2))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (22, 28, -2, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (16, -8, 33, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (10, 22, 32, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-9, 4, 11, 35))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-6, 3, 35, -12))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (22, -7, 23, 0))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (8, 19, 6, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, -2, 34, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (19, 20, 25, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (0, 14, 10, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-6, 23, 15, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, None)
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (13, -4, 17, -6))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (30, 27, 12, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (25, 21, -7, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (30, -9, 14, 31))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (16, 12, 31, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-8, 0, 20, 6))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-6, -4, 2, 0))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (15, 19, 18, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (16, 8, 36, 30))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (12, 27, -4, -4))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (5, 17, 39, -2))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (26, 15, 5, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, -8, 24, 16))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-1, 12, 31, -12))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (23, -8, 21, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-4, 16, 36, 36))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (1, 12, 25, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (5, 17, 25, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-9, -8, 8, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (1, 8, 34, 7))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (29, 18, 4, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (29, 19, 33, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (8, 14, 29, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (15, 29, 18, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (12, -6, 10, 18))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, None)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (0, -3, 11, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (5, 9, 31, 29))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (2, 0, 23, -7))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (26, -9, 7, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, 2, -3, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (17, 16, -3, -2))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (24, 8, 5, -3))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (28, 26, -11, 1))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, None)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (6, 10, 27, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-2, 17, 10, 27))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-6, -5, -11, 33))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (26, 30, 1, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, None)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, -2, 29, 23))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (24, 16, 31, -3))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (20, -9, -7, 9))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (23, -3, -10, 12))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (9, 21, 35, -6))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (17, -2, 12, 14))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (3, 6, 17, 4))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-8, -6, 3, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (6, 13, 0, 24))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (28, 13, 28, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-5, 18, 21, 20))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (2, 3, -1, 38))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (22, -8, 30, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (22, 4, -5, 23))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-5, -2, -6, 9))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-3, 27, -4, 30))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-6, -1, 26, 16))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (9, 16, 20, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (24, 15, 9, -5))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (13, 18, 3, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (22, 20, -7, 0))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (10, 23, 17, -1))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-9, 29, -8, 0))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (4, 6, 32, 5))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (3, 3, 40, 31))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (22, 6, 18, 33))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (22, -3, 20, 16))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (15, 8, 18, 34))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-1, 21, -1, -3))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (7, 16, 6, -3))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (6, 29, -8, 27))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (18, 28, 29, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (5, 25, 40, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (10, 0, 16, 14))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-8, 4, 32, 30))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (3, 30, 9, 30))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (14, 1, 6, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-7, 26, 23, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (14, -1, 10, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (29, 12, 30, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (25, 3, -8, 22))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (0, 4, 4, 33))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, -7, 5, 21))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (6, 8, 8, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-1, -2, 21, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (12, 17, 34, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 9, -8, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (9, 13, -9, -2))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (2, -5, 30, 28))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (8, 3, -1, 5))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (15, 6, 31, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (27, 25, 14, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (1, 3, 15, 25))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (21, 2, 4, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (19, 27, -11, 20))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (24, 25, 31, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (-7, -7, 23, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (21, 18, 31, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-4, 0, -10, -1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-6, -1, 21, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-8, -4, 12, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-2, 14, 25, -8))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (4, -7, 23, 32))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (9, 19, 26, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (25, 28, 22, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (15, 0, 20, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (14, 0, 36, 23))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-2, 7, 20, 16))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-9, -3, -11, 19))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (27, 7, 13, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (30, -3, 7, 9))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-9, 1, -6, 19))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (3, 22, 33, -3))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (11, -8, 11, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (21, 13, 24, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (4, 21, 24, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (17, -3, -2, 0))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (12, 22, -6, 19))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-2, 16, 24, -4))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (24, 6, 14, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-1, -6, 35, 32))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (26, -3, 32, 33))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (4, -9, -3, -2))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (17, 15, 7, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (29, 22, 40, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-2, 22, 3, 20))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (20, 26, 25, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (4, 27, 1, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (12, 29, 11, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (15, 25, 34, -4))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (0, 2, 0, 27))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (1, 9, 0, 19))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, None)
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-8, 22, 9, 30))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-3, -1, 39, -12))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-3, 12, 28, -10))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (3, 7, 2, 13))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, -9, 5, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-2, 25, 22, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (8, -7, 24, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (12, 17, -4, 11))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-7, 14, 2, 19))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-9, 22, 32, 13))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (29, 10, 14, 6))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (4, -7, 0, 13))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-8, 12, 28, 30))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (30, -4, 10, 7))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (27, 9, 32, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (10, -5, 25, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (25, 29, 25, -12))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (17, 1, 6, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-8, 21, 3, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (13, 17, -1, 16))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (8, 13, 28, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (14, 2, 4, 15))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (6, -9, 9, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (2, -1, 7, 35))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (22, 25, 15, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (8, 23, 32, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (19, 24, 1, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (29, 24, 21, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (26, 12, 38, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (1, 2, 32, 39))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, 10, -4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (0, -2, 2, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-9, 27, 7, -5))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-7, 2, 10, 6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (20, 3, -9, 11))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (14, 4, 8, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (24, 7, -2, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-3, 28, 8, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (1, 21, -8, 40))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (17, 16, 3, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (30, 12, 20, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (3, 24, 29, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-4, 20, 14, 24))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 6, 11, 10))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (24, 16, -5, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (21, 17, 0, -3))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (10, 24, 37, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (1, -3, 25, -3))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-8, 23, 33, 8))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-7, -6, -11, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (29, 22, 39, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (5, -9, 9, 31))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (24, 8, 23, 38))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (30, 4, 7, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (3, -9, 24, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (22, 21, 22, -1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (14, 21, 33, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (29, 15, 15, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (5, 1, -7, 7))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (3, 28, -11, 33))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (9, 18, 22, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (30, 9, 7, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-9, 15, 30, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (26, 22, 32, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-9, 11, 28, 9))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, 7, 22, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (7, 12, 3, -12))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, 7, 9, 16))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (2, 2, 8, 36))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (23, 18, 25, 12))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-2, 19, 28, -10))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (1, -3, 9, -5))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-1, 18, 13, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (-9, 8, 10, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (27, 26, 10, -8))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (6, 22, 18, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (10, 18, 35, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (7, 25, -2, 12))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (29, -3, 32, 38))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-3, 10, -3, 5))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (19, -6, 26, 16))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (16, 25, 9, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (12, 29, 27, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (9, 10, 18, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (18, 5, 10, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (15, 23, 40, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (24, 15, 4, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (12, 30, -2, 15))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (28, -9, -11, -3))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (11, 15, 31, -2))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-8, -7, 40, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (0, -3, 2, 13))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (7, 26, -7, 30))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (7, -9, 31, 26))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (25, 11, 16, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-8, 5, 20, -11))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (17, 14, -4, 1))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (19, -9, 36, 24))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (22, 29, 34, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-8, 23, 16, -5))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (15, 23, 38, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-5, 15, 16, 30))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (6, 24, 6, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (1, -9, 10, -11))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (14, 21, 2, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (18, 25, 36, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (28, 6, 30, 11))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (3, 21, -10, 19))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-8, 11, -3, 1))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-6, 28, 22, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-2, 23, -5, 19))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (25, 4, 40, 16))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (24, -1, 3, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (4, -9, 14, -10))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (18, 30, -9, 16))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (18, 28, 35, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (26, -6, -4, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (8, 23, -3, 5))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (1, 20, 25, 7))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (12, 29, -1, 39))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-3, 1, 21, -7))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (16, 14, 10, 31))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (10, 17, 5, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (7, 13, 20, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-6, 21, 8, 8))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (1, 27, 2, -12))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (10, 18, 19, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (28, 30, -9, 31))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-4, 17, 31, 36))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (27, 2, 32, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, None)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (18, -5, 31, 31))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, None)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (17, 25, 4, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-3, 28, 13, 19))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (8, 30, 25, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-1, 1, 14, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (28, -3, -4, 38))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (5, 9, -8, -10))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (17, 19, 8, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (27, 21, 10, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (28, 25, 35, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (29, 15, 12, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (6, 16, 15, -6))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (11, 23, 39, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-9, -3, -9, 5))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (1, 12, 22, 17))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (4, -7, 17, 28))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (24, 29, 40, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (14, 18, -4, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (21, 24, 9, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (26, 9, 37, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (3, -8, 7, 24))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-5, 2, -4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-4, 0, 0, -6))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (15, 10, 14, 22))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (30, 12, 38, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-9, 13, -10, 36))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (22, 6, 7, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (30, 17, 0, 3))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (27, -7, 7, 14))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-5, 19, 27, 32))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (22, 27, 33, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (0, 11, 40, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (27, -2, 11, 35))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-8, 1, -5, 8))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (26, 0, 1, -2))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (22, 25, 35, -6))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (18, -8, 0, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (12, 12, -12, 24))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (29, 18, 13, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (12, -6, 19, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (1, 3, -4, 12))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (25, -5, -5, 28))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (2, 10, 16, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (26, 22, 16, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (2, 25, 14, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (0, -3, 39, 31))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (2, 21, 13, -2))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (28, 4, 21, 14))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (26, 6, 30, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (11, 22, 31, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (3, 22, 36, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (6, 10, 33, 20))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (7, 23, 18, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (17, 18, 30, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (16, 7, 4, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-3, 5, 14, 14))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (26, 13, -7, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (27, 30, -1, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (25, 4, -6, 2))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (0, 8, -2, 2))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (5, 29, -1, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (6, 13, 2, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (18, 8, 30, -10))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (11, 24, -5, 14))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (9, -8, 36, -10))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (11, 5, -12, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (2, 4, 26, -1))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (24, 1, 30, 39))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-8, 27, -6, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-5, 4, 6, -9))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (6, 4, 0, -1))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (19, 7, -3, 2))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (11, 24, 27, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (27, 24, 33, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (23, 7, 5, 40))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (2, 23, 15, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (1, 24, 10, 14))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (28, 20, 17, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (11, 4, 25, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (27, 10, 33, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (28, 21, 2, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-4, 17, 9, -1))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (12, 4, 33, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (9, 22, -7, 1))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (26, 9, 24, 16))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (15, 13, 4, 22))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (9, 17, -2, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (24, 2, 13, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (16, 2, 0, 1))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (1, -5, -3, 33))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (13, 9, 26, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (13, -8, 22, -10))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-2, 0, -12, -3))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (7, 10, -12, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (22, -3, 10, -5))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-3, 23, 3, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (27, -4, 6, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (20, -2, 14, 18))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (18, -2, 15, 29))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-6, 9, 7, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-8, 16, 38, 34))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-5, 21, 4, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-3, 14, 39, 19))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (4, 29, 22, 11))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (25, 19, -10, 25))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (14, -1, 28, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (22, 13, -12, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (5, 16, 37, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, None)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (14, 14, 24, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (28, 4, 18, 35))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (21, 23, -5, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (22, 19, 13, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (4, 16, 6, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (20, 26, 17, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (23, 30, 30, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, None)
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (18, 0, 10, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (23, 2, 25, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (23, 27, 27, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-7, 3, 27, -2))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (16, 12, 31, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (28, -9, 8, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-2, -9, -10, -7))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (15, 28, 6, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (8, 29, 10, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-4, 18, 9, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (28, 0, 36, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-5, 27, 31, -9))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (11, 11, -3, 38))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (17, 13, 9, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (6, 3, 15, -1))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-8, -3, -1, -5))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (21, -6, -8, 40))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-9, 8, 15, 40))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (16, -1, 21, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (0, 3, 23, 21))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-5, 18, 33, 21))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (10, 3, -11, 18))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (13, 29, -12, 3))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (26, 28, 21, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (8, 30, 14, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (8, 0, 12, 23))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, 26, 17, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (11, 27, -7, -10))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (29, 2, -7, -10))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, None)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (29, 16, 19, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (24, 12, 38, 31))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (12, 29, 11, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (0, 4, 11, -6))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (10, 27, -6, 5))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (15, 30, 10, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (8, 23, 36, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (13, 20, 14, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (13, -9, -4, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-4, 12, -4, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (28, -2, 24, 14))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, None)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-9, 13, 33, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (12, -2, -3, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, None)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-9, 21, 4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-5, 20, 16, 2))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (3, 28, 6, -5))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-2, 22, 31, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (10, 16, 22, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (22, 29, 29, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (30, 4, 4, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (25, 4, -2, 0))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (10, 5, 22, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (29, 15, 18, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (13, -1, 32, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (12, 27, 32, -11))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (19, 4, 7, -11))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (4, 3, 27, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-5, 0, 21, -6))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (8, 28, 21, -7))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-3, -5, 20, 30))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (1, 13, 24, 24))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (17, -6, 0, 24))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (1, 8, 23, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (29, 14, 4, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-7, 16, 31, 3))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, None)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (2, 1, -1, 4))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, None)
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (8, 8, 0, -3))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (13, 5, -1, 31))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (7, 20, 30, 0))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (22, 6, 39, -9))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (25, 21, 0, 25))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, None)
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (19, 6, 18, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-3, 17, 22, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-6, 20, 39, 0))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (0, -9, -7, 24))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (29, 7, -2, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (16, 20, 37, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (4, 17, -10, 19))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (20, 15, 16, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (24, 25, 14, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (8, 21, 6, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (22, -5, 1, 30))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (15, -8, 35, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (18, 17, 11, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-6, 11, 30, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (21, 16, 9, -10))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-8, 3, 3, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (9, 24, 34, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (22, 26, 9, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (2, 7, 34, -5))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (9, 5, 31, 7))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (20, 20, 2, -10))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-5, 25, 12, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-5, 1, 25, -6))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (25, 14, 39, -11))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (15, 30, 2, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-1, -6, 25, 29))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (23, 24, -3, 2))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (30, 10, 17, -9))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-3, 19, 33, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (4, 13, 18, 18))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (22, -7, -1, 0))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (8, -5, 37, 17))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (7, 16, -6, 20))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-6, 7, 2, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-5, 2, 29, -2))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (8, 16, 14, -11))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (29, 0, 4, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (22, 28, 6, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (30, 6, -6, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (0, 22, 3, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (27, 22, 23, -3))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-5, 19, -4, 11))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (6, 20, 19, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (12, 12, 39, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (11, -4, 4, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (11, 27, 31, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (19, 4, 31, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (7, -7, 9, -9))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (4, 22, -6, 3))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-6, 11, 32, 18))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (13, 11, 8, 11))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (17, 23, 40, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-4, 21, 36, 36))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (27, 24, -2, 17))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (16, -4, 19, -3))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-6, 18, 25, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (3, -5, -10, 9))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (7, 28, 34, -6))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-9, 21, 17, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-4, 23, -2, 5))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-2, 26, 38, 39))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (1, 27, 16, -7))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, None)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (13, 23, 26, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (24, 25, 32, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (1, -6, 9, -2))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (21, 28, 8, -7))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (30, -4, 5, 29))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, None)
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (30, 4, -5, 37))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (4, -5, 17, 12))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (18, 3, 27, -2))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-9, 29, 22, 30))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (28, 7, 35, -8))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-4, 2, 15, 1))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (16, -8, 3, 25))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (24, 26, 32, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (27, 0, 40, 37))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (13, 28, 37, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (7, 1, 37, 31))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 26, 29, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (14, 18, 37, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-3, 11, 6, 32))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 15, 33, -4))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (18, 13, 16, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-7, 29, 31, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (13, 22, -12, 35))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (7, 25, 36, -4))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-1, 29, -4, -9))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (27, 21, -1, 36))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (0, 4, -3, -12))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (13, 2, 37, 26))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-7, 13, -5, 36))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (24, 8, 6, 7))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (6, -5, 30, 7))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (14, -9, 34, 13))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (24, 22, 13, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (26, 22, 14, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (27, 8, 38, 15))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (24, 27, 5, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (8, 13, 16, -7))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-8, 29, -4, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (4, 5, -4, 1))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (26, -1, -10, 21))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (1, 21, 39, -2))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (21, 18, 0, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (4, 8, 30, -8))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (-5, 28, 23, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (11, -9, 5, 18))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (28, -6, -6, -7))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-2, 12, 1, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (25, 29, 19, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (23, -3, 12, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (6, 11, 37, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (11, 3, -8, -7))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (23, 7, 0, 7))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (23, 5, 16, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (3, 17, -10, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (26, 20, 21, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (3, 14, 30, -8))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (29, -8, 16, 16))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (19, 9, 4, 0))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (18, 7, 16, 7))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (19, -2, 12, 34))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (20, -4, -6, 28))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (6, 14, 17, -2))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (1, 12, 36, -8))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (28, 11, 9, 30))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (15, 22, 31, -6))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (14, 16, 25, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (-4, 6, -7, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (1, 15, 27, 1))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (1, 29, -10, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (9, 16, 39, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (27, 3, 21, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-6, 28, 37, 33))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-7, 5, 5, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (11, -2, -9, 38))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (11, 19, 16, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (26, -7, 31, 30))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (29, 4, -9, 12))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-1, 25, 18, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (19, 26, 2, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (17, 12, 26, 39))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-8, 29, -9, -7))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 16, 24, 20))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-5, -2, -7, 33))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (30, -5, 26, 9))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (3, 18, 8, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (30, 10, -5, -7))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (18, 17, 12, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (2, 22, -8, 25))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (9, 1, -12, -1))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (18, 5, 13, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (26, 30, -11, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-7, 29, 19, -10))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-8, -7, 21, 31))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-7, -4, 20, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (4, 18, 40, -2))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (5, 23, 29, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (24, 8, 7, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (24, 24, 7, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (8, 2, 17, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (18, 11, -8, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (21, 26, -4, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (26, -8, -8, 16))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-3, -5, -10, 36))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-9, 7, 21, 14))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-7, -5, -10, 4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (9, 26, -4, 14))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (7, 5, 22, -7))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-4, 19, 19, -3))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (18, 0, -11, 4))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (20, 6, -11, 39))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (8, 15, 22, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (29, -2, -7, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-9, -1, 18, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (10, -6, 17, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (6, 1, 4, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-6, -1, 17, 1))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (14, 1, 26, -1))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (1, -6, 27, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (12, 19, 38, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-2, 21, 12, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (4, 3, 6, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (9, 9, 38, 40))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (17, 10, 19, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (30, 9, 31, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (27, -5, -6, 3))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (28, 12, -11, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (12, 1, 11, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (12, 2, 13, -6))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 29, -6, 15))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (2, 1, 38, 36))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-1, 14, 3, 33))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-8, 1, 13, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (-1, 13, -10, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (5, 5, -11, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (21, 24, 15, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (3, -8, 8, 36))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (22, 19, 26, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (2, 15, -6, -4))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, None)
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (8, 16, -10, -11))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-8, 0, 2, 34))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (9, 9, 25, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (6, 10, 29, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (29, -9, 0, 40))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (-7, 23, -9, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-8, -5, 24, 34))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-9, -4, 10, 28))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (30, 0, 22, 34))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-8, 28, -6, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (5, 10, -6, 2))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (8, 28, 28, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (22, 26, 16, -11))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (22, -5, 16, 14))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (0, -2, -8, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, -6, 34, 26))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (29, -6, 15, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (23, 22, 14, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (23, 30, 38, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-7, 10, 20, 35))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (9, 7, 17, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (28, 3, 39, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (0, 9, 14, -1))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (6, 15, 7, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (9, -5, 24, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (10, 16, -11, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (12, 24, -5, -5))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (6, -2, 21, 17))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (2, 5, 29, -12))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-1, -6, 15, -8))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (25, 23, 1, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-9, 18, 29, 7))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-5, 26, 22, 15))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (30, 27, 5, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (22, -7, 34, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (16, 28, 16, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (1, 15, 24, -4))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-4, 4, 13, -12))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-4, 18, 15, 26))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (28, 30, -11, 24))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (2, 10, 8, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (27, 7, 31, 22))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (4, 6, 33, -12))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-9, 20, 1, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (-7, 21, -4, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, None)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-6, 8, 27, -12))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (28, 6, 24, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-6, -8, 37, 5))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (1, -4, 34, 14))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-6, 27, 38, 29))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (12, 12, 34, -2))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-5, 8, 35, 32))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (28, 2, 36, 5))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (25, 4, 13, 22))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (25, 0, 0, -3))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (5, 25, -8, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (23, 13, 12, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (18, 10, 8, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (26, 6, -6, 20))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (13, 24, -10, -10))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (30, -2, 11, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-8, -8, 40, 8))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-2, 29, 12, 33))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (1, 12, -4, -8))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (14, 25, -4, 5))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (25, -7, 21, 40))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (28, 28, 33, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (20, 26, 40, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (7, -1, 23, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (25, 23, 9, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (4, 18, 9, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-6, 20, -5, 37))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (22, 23, 16, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-5, -2, -4, -12))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (-8, 7, 10, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (2, 26, 12, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (6, 0, -2, -12))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-1, 19, -9, 15))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-4, 18, 3, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (11, 0, 11, 29))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, 28, 22, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (30, 20, -1, 4))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (19, 2, 30, -5))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (0, 3, -7, 15))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-4, 3, 18, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-1, 12, 14, 28))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (13, 25, 7, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-5, 20, 40, -7))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (8, -4, 30, 10))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-4, 4, 39, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, 26, 16, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-8, 11, -7, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-1, 13, 37, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (20, 26, 6, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-4, 30, 9, -1))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-9, 29, 19, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (27, 12, 19, 5))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-9, 7, 17, -5))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, None)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (6, 18, -3, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (26, -4, 11, 23))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-6, 15, 20, -12))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-5, 27, -6, 30))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (9, 2, 14, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (14, 8, -4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (24, 21, 39, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (29, 17, 27, -3))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (14, -6, 23, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (19, 12, 8, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (28, -9, 23, -2))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (12, 0, 2, 12))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (15, 5, 35, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (13, 29, -12, -6))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-2, -6, -5, 30))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (2, 25, 34, -6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-2, 29, 24, -4))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (9, 17, 16, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (5, 6, 25, -11))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (3, 6, 34, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (3, 29, 0, 34))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (8, -4, 2, 5))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (29, 23, 14, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-1, 20, 7, -7))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (25, 6, 18, -2))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-8, -1, 16, 19))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (1, 17, 18, 3))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (4, 27, 2, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (8, 8, -2, 9))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (18, 22, 36, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-1, 0, 3, 27))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-3, 2, 34, -10))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (9, -5, 20, 34))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (20, 20, 25, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (26, 5, 7, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-7, 7, 20, 36))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-9, 24, 29, 5))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-1, -8, 18, 8))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (5, -4, 29, 0))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (8, 19, 7, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (16, 4, 29, 34))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (0, -7, 39, 16))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (15, 17, 24, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-7, 6, 19, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (12, 19, 27, -3))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (3, -4, 5, 23))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (7, 3, 30, 34))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (7, -9, 39, 28))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 20, 4, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (14, 5, 13, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-8, 29, 20, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (1, 10, 40, 22))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-8, -6, 19, 6))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (30, 26, -10, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-8, 22, -8, 22))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-8, -2, 31, 22))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (22, 4, 33, -10))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (30, 5, 10, 9))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (23, -3, 5, 27))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, 5, -10, -11))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (23, -8, -8, 20))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (29, 23, 38, -12))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-2, -9, -12, 19))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (-5, 30, 33, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (8, 8, 17, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (25, 23, 13, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (8, -6, 9, 31))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (18, -5, 10, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-3, 15, 34, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-5, 5, 12, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (3, 3, 39, 11))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (24, 5, -7, 26))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (29, 5, 28, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-4, 14, -4, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (14, 4, 36, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-5, 16, 40, -8))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-4, -7, 3, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (25, 10, 11, 23))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (7, 25, 22, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (2, -2, 21, 39))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (5, 12, 22, -10))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (30, 8, 33, 35))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (25, -7, 16, -9))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (19, -2, -12, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (1, -2, 32, 32))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (19, 5, 27, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-9, -8, 26, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (29, 16, 25, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (19, 11, 21, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (21, -8, 10, 19))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (29, 26, 8, -2))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (8, -1, 5, 17))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-4, 13, 29, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (17, -3, 38, -8))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (3, -1, 4, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (1, 30, -10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (23, 28, 3, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-5, -5, 2, 6))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (4, 21, 22, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-5, 18, 21, 32))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (25, 30, 40, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-4, 12, 27, 19))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (17, 18, 35, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (1, -3, 1, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (2, 27, 40, 37))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (1, 7, 27, 12))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (25, 8, 22, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (25, 15, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-6, 14, 11, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (5, 28, 29, 36))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (4, 27, 29, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (17, 20, 35, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-1, 29, 15, -4))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (17, 26, 40, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-5, 13, 31, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (20, 11, 5, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (22, 16, 27, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (27, 25, 7, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (22, 18, -12, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-1, 24, -12, -11))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (12, 14, 26, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (4, 2, 27, 2))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-1, -2, -1, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (23, -9, 36, 27))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (22, 25, 9, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (9, 9, 6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (29, -7, 22, -6))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (10, -3, 34, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (13, 14, 19, -7))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, None)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (23, 27, 25, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (21, 5, -2, -5))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (5, 9, 10, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (21, 28, 2, -11))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (13, 25, 7, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (0, 3, 2, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (0, 26, 33, 28))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-4, 11, 27, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (17, 28, 19, -8))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (16, 9, 5, -9))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (20, 9, 13, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-7, 13, 33, 23))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (20, 11, 5, -7))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-5, -2, 11, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (10, 3, 13, -2))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (28, 13, -4, 25))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (6, 16, 23, -12))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (29, 5, 11, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-8, -7, -8, -5))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (26, 7, 11, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-6, -4, 1, 11))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (4, 15, 33, -10))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (11, -3, 29, 36))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (8, 17, -7, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-2, 25, 13, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (3, 2, 22, -11))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, -7, 39, 31))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (16, 29, -11, 28))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (29, 7, 31, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (25, 4, -9, -3))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (21, 7, -3, 31))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (14, 26, 2, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (0, 3, 21, -12))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (5, 17, -10, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-4, 15, 13, 19))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (10, -7, 15, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (14, 9, -2, -3))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (23, 19, -5, 35))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (4, 28, 15, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (22, 27, -1, 11))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-5, 24, 40, 7))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (27, 2, 34, -6))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (11, 20, 22, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-9, 30, 9, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (24, 1, 19, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (8, 16, 32, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-7, 28, 35, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (28, 30, -3, -10))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (20, -9, 23, -11))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (30, 14, 3, 16))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (5, 14, 5, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-4, 9, 8, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (17, -8, -3, 21))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-4, 20, 39, 13))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-9, -6, 14, -5))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-4, 20, 11, -3))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (6, -4, 17, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-3, 22, 15, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (16, 16, 32, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (7, 25, 1, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (12, -6, -9, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (27, 16, 1, 23))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (10, 22, 17, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (22, 0, 1, 38))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (4, 19, 29, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (13, 3, 17, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (3, 15, 9, -12))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-3, 0, -11, 13))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (8, 19, 16, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-6, -8, 5, -4))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (15, -6, 16, 13))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-9, 30, -5, 3))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (3, 7, 31, -3))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, None)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-6, 14, 27, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (4, 28, 2, -2))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (8, 22, 36, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (29, 19, -5, 25))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (20, -6, 17, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (27, -1, 30, 30))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (17, 13, 35, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (16, -7, 4, 20))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (14, 6, 33, 7))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (11, 5, 21, -1))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (15, 23, 37, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-6, 23, 21, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (11, 10, -10, -9))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (11, 27, 6, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-6, -2, 12, 39))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (17, 16, -8, 3))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (11, -7, 0, 14))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (4, 23, 28, 16))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (28, -6, 40, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (30, 26, 8, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (27, 5, -12, 39))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (5, 9, 33, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (0, 28, 36, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (12, 0, -5, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (21, -4, 26, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (20, 12, 28, 31))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (3, 11, 9, 27))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (14, 23, 13, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-1, 23, 36, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (5, 9, 6, 27))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (4, 3, -9, 11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (20, 0, 5, 31))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-8, 5, 32, 6))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (24, 14, -7, 37))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (22, -2, 17, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (9, 7, -8, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (7, 25, 3, -7))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-6, -2, -3, 25))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-1, 23, 6, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (24, 27, 39, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, 10, 38, 27))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (15, 30, 21, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-6, 17, 35, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (9, 1, 12, 38))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-1, 2, 31, 19))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (4, 7, 8, -3))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (3, 2, 9, -7))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-6, 15, 21, 40))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (4, 15, 9, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, None)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (29, 27, 8, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (9, 29, -2, 16))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-8, -3, 8, 11))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, None)
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (25, 28, 9, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (11, 20, 23, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-6, 9, -12, 35))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (2, 2, -2, 21))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 22, 28, 35))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (28, 15, -1, 19))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (14, -6, 20, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (11, 4, 7, 23))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (9, -1, 1, 5))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (8, 4, 27, 19))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (25, 7, -6, 28))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-2, -7, 26, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (28, 12, 26, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (13, 1, 32, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (24, -6, 34, -6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (-3, 12, -1, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (19, -1, 37, 35))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (24, -2, 17, 18))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (14, 1, 35, 16))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-8, -3, -8, 33))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (30, 11, 37, -7))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-4, 27, 12, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (5, 19, 4, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (4, -9, -10, 0))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (1, -5, 20, 21))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (27, 16, 17, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-7, 12, 11, 24))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (24, 20, 17, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-3, -1, 37, -6))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (25, 2, 17, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (14, 29, 33, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (20, 7, -6, -6))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (3, 0, -3, 17))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (20, -6, 24, 29))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-5, 17, 1, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-7, 22, 12, 11))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-1, 7, 32, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (12, -8, -9, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (3, 28, 11, 4))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (8, 6, 32, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-6, 5, 21, 37))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (20, 17, 10, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (6, 4, 3, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-6, 18, 5, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (17, 22, -1, 34))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-6, 2, 34, 31))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (10, 25, 5, -8))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (2, 18, 18, -7))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (0, 20, 26, 37))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (14, 11, 40, 13))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (15, 20, -1, 36))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (0, 17, 24, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-6, -2, 16, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-7, 6, 33, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (1, 4, 14, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (10, 15, 29, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (30, 1, 40, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, None)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (8, 17, -12, 25))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (29, 20, 28, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-7, 30, -12, 17))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (24, 28, 17, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (1, 1, -2, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-2, 2, 32, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-6, 17, 15, -7))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (7, -9, -4, 38))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-5, 2, 24, 28))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-3, 7, 23, 21))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (29, 22, 39, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (2, 9, 3, 0))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (5, 23, -2, 5))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (17, -7, 0, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-7, 22, 13, -6))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (1, 30, 6, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (1, -8, -4, 31))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (7, 19, -11, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (17, 19, 25, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (6, 3, 36, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (7, 16, 5, -9))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (17, -4, 26, -1))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (22, -8, 25, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-1, 1, 15, 13))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-6, 27, 4, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (9, 14, -7, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, 12, -10, -6))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, None)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (22, 18, 18, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (1, 28, 17, 19))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (22, 22, 7, -2))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (25, 30, -3, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (13, 9, 11, -8))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (12, 15, -11, 9))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-5, 21, 16, 11))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (1, 4, 11, 1))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (5, -7, 30, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (20, -8, 40, -8))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-2, 6, 28, -10))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (12, 13, 11, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-2, 3, 17, 13))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (23, 18, -1, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (30, 21, 29, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (30, 8, -11, -11))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (0, 27, 14, 21))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (29, 22, 26, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (8, 25, 12, -9))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-1, 5, 28, 20))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-1, 3, 17, 31))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (17, 29, 37, -6))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-8, 0, 3, 22))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (29, 11, 39, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (9, 2, 13, 24))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, None)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (19, 7, 11, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (4, 11, 7, -11))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (24, 11, 16, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-8, 0, -6, 15))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (2, 4, -3, -7))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (5, -6, -1, 22))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (24, 11, 14, -10))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-2, 10, 4, 28))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (21, -5, -12, 17))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (17, -6, 30, 14))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (28, 15, 29, -3))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (17, 2, 26, -10))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (29, 4, 33, -8))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (11, 21, 12, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-5, 29, 20, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (6, 10, 28, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (10, 0, 28, 19))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (17, 21, 36, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (8, 22, 1, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (3, 10, -11, -11))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (0, 28, 22, -12))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (12, 9, 16, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-7, 9, -9, 20))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (30, 25, 24, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (13, 8, 20, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (25, -3, 20, -7))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (17, 5, 4, 12))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (21, -8, 26, 35))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (4, 15, 35, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (12, 30, -3, 35))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-7, 27, 14, 8))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (18, 8, -10, 17))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-5, 12, 37, 19))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (17, 9, 0, 3))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (22, 1, 14, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (10, 25, 8, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (22, 0, 27, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (13, 24, 18, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-9, 29, 13, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (20, -1, 22, -4))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (20, 3, -1, 22))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (12, 13, 10, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (0, 30, 30, 16))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (21, 19, 37, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-3, 4, 19, 18))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-2, -8, 27, 24))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (1, 0, 22, -3))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (7, -1, -4, 7))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (0, 9, 18, 19))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (18, 22, 8, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (5, 26, 8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (13, -6, 26, -4))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-3, 7, -8, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (5, 15, 21, -11))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (0, 24, 32, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (8, 2, -6, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-8, 17, 12, 3))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-2, -8, 35, -11))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (3, -8, -10, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (16, 9, 4, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (12, -6, 33, 14))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (17, 5, 10, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-1, 23, -3, 20))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (2, 4, 27, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (17, 1, 15, 30))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (12, 21, -11, 0))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (20, 12, -9, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (11, 27, 15, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-4, 1, 15, 3))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (3, 0, -11, -9))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (23, 15, 32, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (10, 18, -1, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (0, 14, 3, 1))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (13, 5, 0, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-1, -9, 29, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (14, 17, 37, 5))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (0, 10, 37, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-9, 7, 13, 3))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-6, -9, -12, 19))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (13, 28, 25, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (25, 19, 1, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-4, 28, 2, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (20, 12, 32, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-9, 19, 29, 0))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (3, 24, 36, -2))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (1, 19, -7, 38))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-8, 21, 13, 38))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (18, 4, -1, 37))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, None)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (16, 17, -6, 7))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-3, 0, 29, -4))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (5, 25, 40, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (5, 19, -12, 36))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (5, -9, 10, 32))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (17, 3, 15, 28))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-4, 18, 10, 38))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (28, 4, 6, 39))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (21, -4, 3, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (9, -5, -5, 18))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (3, 21, 28, 0))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (0, -3, 0, 33))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-1, -8, 26, 21))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-4, -5, 5, -6))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, None)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-8, 1, 26, 17))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-3, 7, 28, 8))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, 1, 18, 33))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (18, -3, 38, -11))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (30, 29, 17, -11))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-8, 2, 13, 5))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (2, 21, 10, -1))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-2, 12, 13, 1))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (13, 18, -8, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-7, 3, 40, 2))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-4, 5, -9, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (12, -5, 27, 0))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (5, 14, -1, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (3, 26, -5, 29))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (14, 11, 22, 21))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (16, 16, -1, 8))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (28, 29, 26, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (9, 3, -4, 15))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (15, 17, -6, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-4, 8, 13, 13))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (23, 7, 33, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (6, 24, 18, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (17, 13, 27, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (11, 16, 36, 4))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (21, 24, 12, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (1, 18, 35, 20))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (30, 2, -12, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (22, 7, 5, -5))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (17, -4, 34, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (29, 1, 28, -1))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (9, 15, 0, 8))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (11, 22, 35, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-9, 7, 5, -9))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-9, 23, 0, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (17, 3, 32, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-2, 26, -4, 24))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (9, 0, -7, 30))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (21, 21, 34, 0))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (11, -9, 35, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (15, -4, 5, 5))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (18, 4, 34, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (15, 11, 14, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (30, 2, -7, 10))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (8, -3, 22, 33))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (8, 18, 22, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, -4, 1, 27))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (10, -3, 2, 38))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (8, 22, 22, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (11, 0, -8, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-8, 10, 33, 31))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (20, 0, -6, -1))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (7, -9, 25, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (0, 8, 39, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-8, -8, 33, -3))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (21, 19, 3, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (16, 0, -3, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-1, 19, 0, 35))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (3, 20, 26, 4))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (23, -8, -9, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (2, 15, 13, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-1, 28, 19, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-4, 30, 29, -6))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-9, 16, 29, 22))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (6, 30, 23, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (9, 26, 13, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (5, 24, 33, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (17, 26, 18, -7))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, None)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (30, 14, 35, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (6, 6, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, 4, 17, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (8, -4, 40, 10))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-6, -1, 35, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (6, 19, 8, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (27, 13, 20, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (22, 13, -7, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (7, 29, 4, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (27, -9, 33, -2))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-5, -5, 15, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (30, 29, 9, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (17, 13, 38, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-5, 18, -8, 38))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (14, 20, 38, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (25, 4, 29, 25))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (14, 28, 35, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-7, 15, -3, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-1, 19, -4, 34))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (2, -8, 18, -4))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (29, 24, 13, -10))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (1, -5, 25, 36))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (27, 23, 27, -7))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (29, -5, -8, 13))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (30, 14, 1, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (8, -6, -8, 24))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (6, 2, -7, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-5, 24, 10, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (10, 14, 11, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (0, 27, 39, 40))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (20, 23, 1, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (3, -2, -11, 14))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (20, 0, -2, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (11, 8, -5, 5))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (7, 7, 24, 20))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (25, 15, 30, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (24, -2, -2, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (10, 27, 25, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (10, 20, 4, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (26, 25, 17, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (4, 9, 4, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-2, 8, 11, 21))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (9, -4, -9, 32))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (29, 5, 9, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (12, 26, -6, 13))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (4, 3, -9, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (23, -4, 24, 32))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (17, -7, 28, -7))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (21, 28, 30, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (21, 14, -12, 4))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-4, 21, 27, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (1, 27, -6, -3))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (11, -9, -11, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (29, 26, 33, -11))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (16, 20, 6, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (6, 19, 5, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (4, 8, 6, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, None)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-9, 26, 9, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-2, 16, -2, 5))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (3, -8, 37, 9))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (13, 9, -10, -2))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-7, 21, -12, 25))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-8, 16, 20, 28))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (8, -7, 27, 26))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (19, 13, 5, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (24, 2, 36, 14))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (7, 10, 19, -2))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (4, 17, 4, -4))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (19, 4, 10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (12, 4, 20, 27))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (8, 30, -1, 33))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-1, 1, 34, 26))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (2, 8, -6, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (1, -9, 24, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-8, 24, -3, 29))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-4, 14, 20, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (16, 18, 32, -10))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (11, 23, -9, 2))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (17, 20, 32, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (8, 27, 0, 31))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (18, 7, 24, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (2, 2, 14, 4))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (21, -3, 11, -12))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (15, 15, 25, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (25, 20, -10, 3))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (30, 13, -1, -8))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (15, 3, 37, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (22, -7, 8, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (9, -4, 37, 37))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (27, -5, 14, 10))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (9, 24, 9, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (18, 27, -5, 7))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, None)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (5, -8, 9, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (28, -2, 38, 28))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (10, 20, 19, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-2, -5, 12, 10))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (17, 17, 7, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (10, 23, 32, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (3, 11, 16, -10))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (25, -2, 24, 9))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-5, 2, 4, -8))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 7, 2, 29))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (27, -7, 10, -1))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (23, 25, -12, 0))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-9, 21, 2, -6))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (6, 29, 20, -8))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (2, 5, 37, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (27, 0, 38, 39))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (23, 3, -3, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (23, 27, 37, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (27, 7, 38, 20))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (9, 4, 25, 18))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (17, 16, 13, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-7, 16, 36, 39))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (16, 0, 14, 14))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (0, 3, 26, 38))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (23, -8, -6, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (5, 18, 10, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (22, 20, 18, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (22, 10, 3, -11))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (26, -9, 19, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (2, 13, 17, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (16, 24, -7, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (18, 7, 40, 39))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, None)
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (9, 11, 37, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (30, 2, 13, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (9, 17, -12, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (14, 17, -4, 8))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-7, 30, 12, 38))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (14, 13, -10, 39))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (2, -9, 27, 4))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-6, -6, 2, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-6, 12, -4, 22))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-7, 19, 21, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (2, -2, 26, 39))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (11, -8, 9, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (7, 17, 24, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (25, 0, 29, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-2, 14, 34, 4))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (13, 10, 40, 23))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-9, 10, 16, 8))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (10, 3, 38, -3))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (0, -6, 35, 36))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (21, -5, 19, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (15, -4, 24, 14))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (9, 29, 17, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-9, 8, 12, -4))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (13, 25, 5, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (17, 15, -11, 31))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (15, 11, 27, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (24, 1, 11, 17))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-5, 1, 26, 17))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (16, -9, 31, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (27, 9, 17, -6))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (21, -1, 8, 40))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-7, -4, 34, 21))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (3, 1, 21, 38))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (3, 9, 20, 34))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (12, 30, 32, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-2, -4, -12, -11))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (15, 11, -5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (4, 5, 39, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (18, -4, 38, -12))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-8, 23, 12, -6))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (3, 27, 21, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (27, 8, 40, 40))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (18, 27, 23, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-4, -2, -5, 20))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (28, 1, 16, 20))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (7, 6, 26, -7))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (17, -2, 6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (15, 16, 3, 14))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (20, 3, 11, -9))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (15, -5, 33, 33))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (14, -6, 32, 28))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (11, 30, -10, 24))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (7, 1, -7, 26))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (22, -5, 40, 6))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (19, -4, 29, 10))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-5, 7, 29, 36))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (2, 16, 29, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (9, 9, 31, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (16, -6, 36, 14))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (23, -7, -11, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-2, 10, -9, -4))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (3, 23, -1, -11))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (8, 13, 16, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (15, 22, 23, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (20, 1, 3, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (24, 13, 21, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (22, 2, 21, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, None)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-9, -8, 4, 25))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (5, 9, 16, 23))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (13, 20, 9, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-8, 4, -10, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (4, -2, 3, 4))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (28, 22, 19, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (6, 22, 0, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (23, 11, 40, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (26, -2, -12, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (30, 17, 17, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (19, 14, 2, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-7, 17, 15, -12))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-5, -8, -11, 8))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (24, -5, 6, 22))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (24, 8, 17, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (13, 5, 7, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (17, 20, 1, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-1, 10, -12, 18))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-4, 0, 8, 5))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (10, 30, 8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (11, 9, -8, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (11, 13, 26, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-4, 7, 22, -1))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (16, -3, 33, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (9, 6, 19, 30))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (23, 8, -5, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (3, 4, 0, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (2, 17, 36, 38))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-5, 6, 27, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (21, -2, 22, 25))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (29, -6, -3, 32))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (16, 20, 37, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-8, 19, 26, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (23, 14, 40, 33))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-6, 23, 38, 19))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (7, 2, 33, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-1, 0, -8, 23))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (6, 2, 31, -5))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (29, 12, 13, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-8, -4, -8, 19))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-6, 24, 4, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-3, 27, 18, -6))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (12, -9, 7, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (24, -4, 20, 9))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (6, 18, -3, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (15, -3, 40, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (8, 22, 35, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (7, 7, -2, 12))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-5, 18, 38, 21))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (20, 9, 30, -7))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (25, 9, 5, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (11, 2, 24, -12))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-1, 29, -12, 30))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (13, -1, -7, -9))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (19, 4, 35, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (30, -8, 7, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (30, 18, 23, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (7, 22, 10, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (4, 20, 36, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (11, 18, -8, 13))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (18, 18, -8, -9))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (15, 26, -7, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (14, 19, 28, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (27, 1, 37, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (13, 3, 28, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-3, 6, -8, 2))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (16, 3, 22, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-4, 18, 1, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (24, -4, -11, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (13, 30, 5, -6))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (26, 24, 26, -9))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-4, 8, 33, 16))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (11, 28, 35, -4))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (14, -2, 5, 34))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (4, -8, -11, 28))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (2, 1, 0, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (28, 13, 17, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (6, -8, 26, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (1, 24, 31, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (7, 20, 38, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-5, -1, 35, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (12, 12, -7, 32))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (18, 18, 3, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-3, 22, 10, 23))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (2, -5, -4, 40))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (1, 27, 22, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (2, 20, 19, 10))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (6, 26, 13, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (19, 14, 37, -1))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (11, -2, -9, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (20, 28, 27, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (20, 2, -8, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (28, 14, -2, 35))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (26, 25, 18, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, None)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (29, -5, -7, 21))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (23, 15, -5, 21))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-4, -1, 15, -2))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (7, -8, 35, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-1, 7, 37, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-7, 20, 4, -2))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (17, 2, -10, 26))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, None)
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (10, 23, 21, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (0, 18, -4, 33))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (17, 14, -10, 33))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (27, 14, 1, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, None)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (8, 7, -7, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (27, 14, 17, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (29, 29, 0, -12))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-5, -8, 25, 38))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (21, 1, -6, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (22, -7, 5, -4))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (25, -1, 28, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (14, 24, 9, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (7, 23, -2, 39))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (26, 19, 9, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (19, 17, 14, -1))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (27, -4, 35, -8))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (14, -8, 24, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (2, 3, -6, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (25, 29, 14, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (22, 22, -7, 19))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (22, 9, 9, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (5, -1, -12, 8))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, None)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-7, -5, -7, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (30, 8, 37, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-5, -4, 12, 15))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (27, 12, 30, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-5, 12, 20, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (29, -1, -7, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (23, 7, 2, -7))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (2, -8, 0, 30))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-8, -7, 17, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (19, 30, 33, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (25, -9, 35, -11))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (15, 25, 15, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, None)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (5, -3, 20, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (15, 13, 14, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (13, 16, 38, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (5, -3, 31, -5))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (27, 28, -11, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (28, 3, -4, 24))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (24, 29, 20, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (0, 27, 38, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-6, 26, -7, 6))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (22, 28, 31, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (19, 0, 21, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, None)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (24, -1, 30, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (14, -6, 38, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (18, 6, 14, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (5, 25, 4, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (29, 6, 8, 29))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (25, 8, 10, 21))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (10, 10, 28, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (7, 4, 16, 20))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (21, 12, 29, -5))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-9, 13, 11, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-9, 19, -6, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (22, 22, -1, 31))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (6, 25, 29, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (18, 21, 20, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (-4, -3, 1, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (21, 15, 3, -9))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (23, 27, -1, 28))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (28, 7, -1, -10))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-8, 18, 4, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-5, 7, 8, 28))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (30, 16, 10, -8))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (15, 0, 22, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-8, 9, 37, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (13, 0, 33, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-4, 11, 21, 8))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (12, 30, -12, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (4, 5, -1, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (26, 23, 17, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (26, 26, 12, -12))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (12, 4, -7, 33))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (24, 2, 40, 36))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (28, -7, 37, 31))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (16, 25, 1, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (28, 23, 26, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (11, -6, 36, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (0, 30, 33, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (30, -5, 9, 22))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (5, 18, 9, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-2, 0, -3, 1))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, None)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (24, 7, -1, 27))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (11, -1, 33, 27))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (18, -5, 14, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (5, 0, 22, 30))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-8, -6, 2, 11))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (30, -7, 37, -6))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (21, 8, 3, -3))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-4, 4, 26, 25))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (3, -6, 13, 31))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (30, 21, 38, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (11, -8, 1, 15))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (11, 24, -8, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (17, 27, 25, -11))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (26, 24, -5, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (17, 14, -4, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-2, 18, 16, 5))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (23, 0, 30, 12))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (14, 4, 30, 31))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-2, 14, 5, -5))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (25, 5, 24, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (8, 4, 38, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (23, 16, 20, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (29, 26, 9, -2))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (11, 7, 9, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (30, -3, 21, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (16, 2, 18, 0))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (0, 4, 32, 16))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (19, 24, 0, 3))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (3, 23, 5, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (28, 29, 7, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (10, 24, 26, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-8, 3, 15, -7))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (25, 26, 25, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, None)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 11, -10, 16))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (24, 14, 36, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (27, 21, 6, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (20, -4, -7, 29))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (25, 29, 34, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (6, 25, -12, -10))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (23, 6, -8, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (28, 24, 20, -11))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (20, 4, 2, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (26, 0, 9, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (25, 21, 38, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (26, 5, 16, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (5, -7, 7, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-9, 14, 3, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (29, 20, -6, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (2, 20, 5, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (11, 8, 26, -5))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (28, -7, -3, 34))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (27, 23, -9, -11))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-4, -6, -12, 4))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-8, 8, 34, 32))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (5, 6, 40, 33))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (10, 26, 15, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, None)
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (21, -5, 23, 25))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (24, 2, 19, 17))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (24, 19, 7, 0))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (16, 7, -6, -9))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (28, 30, -1, 25))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (12, -2, 36, 6))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-4, 7, 20, 4))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (0, 9, 33, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (2, -4, -7, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (26, 9, 7, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (15, 12, 8, 35))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (9, -3, -5, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (8, -4, 21, 15))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (30, 10, 1, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-7, 22, -8, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (30, 30, 9, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-9, 13, 1, -10))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (15, 2, -8, -9))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (13, 7, 25, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (3, -9, -10, 32))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-3, -1, 26, 37))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (17, 10, 39, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (27, 21, 9, -7))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (1, 23, 36, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (4, -8, 11, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (16, 13, 25, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-7, 2, 11, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (12, -8, 31, 34))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (24, 20, 33, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, None)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (4, 24, 34, -8))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (28, -2, -1, 33))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (11, 0, 40, 15))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (11, 9, 2, 3))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-5, 25, 8, 15))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (20, 20, 17, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (19, -8, 11, 38))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (2, 21, 21, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (14, 4, -4, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-4, 13, -1, 10))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (16, 19, 35, 40))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (25, 16, 14, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (9, 14, -6, -12))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (15, 2, 6, 32))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-2, 2, 14, -8))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (21, 9, 26, 34))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-2, 7, 37, 5))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (17, 1, 34, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (3, 15, 0, 15))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-1, 12, 30, -4))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (15, 21, 4, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (3, 17, 40, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-3, 19, 28, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (17, 24, 5, -12))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (13, 15, -5, 11))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (7, 18, 39, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (8, 0, 14, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (5, -4, 17, 9))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (0, 5, -7, -1))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (16, 11, 23, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (25, 12, 4, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (28, -1, -2, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (17, 26, -12, -12))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-7, -8, 39, -4))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (28, 18, 38, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (4, -5, 18, 30))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (7, -2, 18, 37))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (20, 7, 0, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-2, -3, 3, -4))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (24, 10, 26, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (9, 13, -4, 38))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-3, -3, -6, 26))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, 5, 5, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (30, -9, -5, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (27, 12, 32, -5))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (23, -5, -7, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (1, 5, 12, -6))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (6, 29, 23, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (21, 7, 9, 0))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (11, -5, 1, 30))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-3, -3, 22, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (4, 26, 35, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (7, 26, 31, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (29, 18, 35, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (16, 8, 16, 35))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-1, 4, 20, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-9, 22, 3, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 2, -8, 23))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (5, 15, 14, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (5, 25, 37, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (9, 0, -2, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-6, 27, 10, 21))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-2, 24, -7, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (9, 16, -5, 27))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (23, 9, 22, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (12, -7, 19, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 26, 29, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (24, 7, 39, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 6, 13, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-4, 25, 11, 20))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (8, 17, -6, 11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (0, 4, 1, 5))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-6, 22, -8, 8))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (25, 30, 19, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (30, -9, 11, -3))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (5, 23, 20, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (13, 5, 3, -5))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-7, 1, 21, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (19, 6, 35, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-7, 18, -11, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (8, 16, 9, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (14, 21, 1, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (12, -9, 38, 39))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (11, 8, 15, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (8, -5, 39, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (8, 30, 14, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, None)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (8, 30, -4, -6))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (18, -2, 26, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (0, 30, 40, -3))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, None)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (17, -6, 31, 25))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (26, 0, 37, 29))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (26, -3, 10, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (21, 28, 36, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (24, 22, 14, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (29, 22, 0, 11))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 23, -7, 8))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (7, 15, 21, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-9, 26, 31, 30))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (17, 4, -7, 1))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (0, -1, 40, 36))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (6, 21, -8, 22))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (5, -9, 40, 28))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (27, 7, -8, 4))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-8, 8, 4, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (14, -9, 1, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (25, 17, 32, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-1, 0, 2, 21))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-1, 14, 7, 11))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (14, -5, 14, 40))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (1, 0, 23, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-4, 13, -7, 36))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, None)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (30, 5, 26, 26))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, None)
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (19, 28, 19, -9))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (30, 16, 16, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (13, 18, 27, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (12, -4, 34, 35))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (28, 20, 13, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (27, 26, 7, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (3, 11, 39, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (28, -5, 18, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (11, 11, -1, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (28, -6, -5, 11))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (16, 15, -2, 0))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (0, 5, -3, 9))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-1, 3, -9, 39))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (8, 23, 20, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-8, -1, 27, 31))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (18, 5, 35, 9))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (2, -9, 12, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-5, 4, 3, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (5, -2, -9, 7))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (20, 6, 3, 9))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (27, -1, 37, 10))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (28, 4, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (17, 3, -8, -10))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (1, -5, 8, 30))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (17, 29, -9, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (29, 19, -12, 35))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (8, -6, 7, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (14, -8, 22, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, None)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (18, 0, 11, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (9, 21, -9, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (29, -4, 13, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (24, 4, 7, 38))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (20, 26, -4, -2))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (6, 25, 23, -1))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-6, 10, 17, 19))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-6, 8, 3, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (28, 28, -7, 20))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-2, -6, 30, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (20, 16, -10, 5))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (27, 8, 38, 22))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-2, -2, 9, 24))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (23, 20, 29, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (22, 0, 12, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (6, 25, 14, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (29, 2, 32, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (4, 16, 22, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (4, 2, 37, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (2, 4, 21, -12))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-9, 21, 1, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-8, -6, 13, 15))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-2, -2, 17, 26))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-5, 9, -4, 18))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (24, 16, 2, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (17, 14, 38, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (1, 16, 6, 35))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (30, 16, 5, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (21, 14, 31, 12))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (6, 3, 17, 8))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (1, 20, 36, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (30, 5, -10, 31))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (25, 7, -10, 30))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (28, 13, 38, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (5, 4, -5, -4))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-7, 28, -2, -2))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (5, -4, -10, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (9, 2, 22, 38))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (30, -9, 27, 22))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (7, 10, -8, 25))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-8, -4, 39, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 26, 36, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (8, 6, 40, 3))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (0, 11, 5, 4))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-8, 6, 37, -3))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-1, 7, 5, 11))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (9, -6, 27, 33))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-6, 16, 6, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (30, 29, 22, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, None)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (15, 2, 3, -3))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (9, 4, 36, 35))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (16, -9, -3, 36))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (30, 10, 9, 13))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (29, 2, -2, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (16, 6, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, None)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, 3, 31, 15))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-5, 6, -2, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (24, 0, 6, 20))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (23, 10, 36, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 22, 35, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 15, 20, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (4, -8, -1, -6))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (20, 29, 30, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (16, 12, 16, 0))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (19, -1, 37, 26))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, 12, 9, 29))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (29, 19, -2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (14, 7, 15, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (22, 30, -6, 23))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-1, 9, 9, 25))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (0, 1, 23, 12))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-1, 6, -10, 28))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (8, -1, 9, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (17, 10, -9, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (25, -3, 34, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-3, 28, 18, 32))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (2, 21, 35, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (19, -3, 27, 28))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (0, -8, 27, 16))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (0, 13, 23, 40))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (7, 7, 6, -9))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (19, -5, 37, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (15, 13, 5, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (10, 16, 7, 31))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (13, 3, 38, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (25, 13, 2, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (28, 12, 33, -8))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (17, 19, 32, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (2, -2, 32, 24))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (8, 10, 16, 7))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-3, 9, 24, 8))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-8, 19, 34, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (22, 15, -4, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (11, 3, 35, -6))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-1, 21, 6, 18))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (29, -4, -12, 29))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (22, -7, 26, 25))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (9, -5, 29, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (23, 29, 21, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (30, 7, 2, 14))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-7, 21, -1, 1))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (27, 18, 16, -4))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, None)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-7, 2, 14, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (17, 24, -3, -8))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (26, 4, 7, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (17, 21, 38, -10))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (4, 11, -9, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 20, -7, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (30, 17, 34, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (0, 17, 22, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-6, 21, 19, 28))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-4, 28, 5, 13))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (7, 16, 6, -5))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-1, -6, -5, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (27, -6, -11, -9))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (9, -4, -10, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (7, -7, 33, -12))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (19, 25, 24, -5))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (12, 26, 1, -7))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (11, -6, 24, -11))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (18, 22, -10, 36))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (7, 3, 19, 29))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-8, -5, 6, -4))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (9, 16, 33, 36))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 21, -1, -1))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (3, 20, 31, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (17, 24, 30, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (14, 16, 0, 23))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (5, 29, -12, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (19, 11, 29, -12))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (11, -8, 21, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (1, -2, 19, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (1, 5, -11, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (6, 26, 6, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-5, 8, -12, 8))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (13, 19, 24, -4))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (5, 23, 13, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (25, 28, 35, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (15, 28, 21, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-5, -5, 1, -9))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-5, -9, 11, 3))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (10, 14, 40, 36))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-1, 15, 31, 16))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (13, 4, 7, 36))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (6, 18, 4, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (12, -4, 25, -3))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (2, -9, 1, 20))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (20, -9, 37, -9))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (13, 7, 38, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (11, 12, -5, 5))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (12, 12, -12, 29))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (12, 28, 4, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, 14, 24, 15))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (14, 2, -10, -10))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (29, -9, 9, -9))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (23, 2, 16, 0))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-7, -8, 29, 1))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (25, 23, 4, -3))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (26, -7, -4, 27))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-7, 14, 26, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (19, -5, -3, 15))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (20, 25, 4, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-4, 9, 31, 23))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (20, 15, -6, -11))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (25, -6, -11, 33))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (27, 16, 25, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (-8, 21, 12, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-3, -5, -6, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (16, 18, -6, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (4, 22, 11, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, None)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (8, 8, 11, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (4, 8, 12, -12))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (27, 18, 22, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (24, 14, 36, 0))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (2, -2, 0, 34))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (-2, 19, -10, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-7, 12, -12, 21))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (19, 10, -6, 7))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-2, 17, -7, 15))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-4, 22, -2, -7))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (21, 24, 33, -1))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-2, 20, 0, 29))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (18, 24, 11, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (0, 4, 26, 35))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (6, 28, 17, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (6, -3, 13, 7))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (19, 1, 10, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (16, -9, 20, 26))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-9, -4, 28, 18))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (10, -1, 12, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (23, 16, -3, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (23, 27, 18, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-3, 17, -10, 28))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (29, -4, 36, 5))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-8, 3, 4, -7))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (22, 15, 28, -3))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (24, -4, 5, 35))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (22, 22, 22, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-2, 9, -4, -12))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (13, 15, 5, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (24, -3, -1, 24))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (28, 15, 6, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (21, 23, 27, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (11, -8, 11, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (16, 20, -7, -6))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (1, 14, 36, 39))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (8, 6, 36, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (13, 19, -9, 9))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (16, 10, 40, -7))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-5, 30, 12, 18))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (24, 6, 3, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (4, -5, 5, 6))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (6, -5, -6, -12))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-5, 20, 7, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-8, 26, -8, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (8, 0, 11, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (28, 11, 13, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (18, 12, -9, 34))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (29, 1, 12, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (6, 1, 34, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (24, -6, 30, 31))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, None)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (5, 8, 20, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (18, 9, -7, 1))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (21, 21, 11, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (25, 28, 38, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (17, 9, 31, 0))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-9, 22, 4, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-6, 1, 36, 13))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-3, 15, 16, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (23, 10, -11, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (15, 22, -3, 18))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (20, 28, 32, -10))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (21, 12, 40, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (19, -7, 5, -4))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (5, 25, 40, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-3, 4, -8, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (15, 29, 3, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (21, 6, 37, -8))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (16, 3, 30, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (12, 8, 5, -11))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (20, 2, 15, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (26, -6, 13, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (6, 5, 9, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-2, 2, -1, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-5, 17, 14, 9))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-5, 18, 35, -10))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (5, 2, -12, 21))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-8, -6, 30, 36))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (11, 19, 12, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (4, 4, 7, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-3, 29, -2, 24))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-1, 29, 30, 28))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (7, 24, 27, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (18, 12, -11, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (29, 27, 10, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (18, 16, -5, 35))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (18, 20, 12, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (24, 27, 2, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (0, 2, 34, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (19, -2, 28, 26))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (21, 21, 28, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (25, -6, 32, 23))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (12, 9, 24, 23))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (13, 20, 16, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (13, 5, -10, 10))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (15, 22, -9, 37))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-6, 4, 11, 32))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (16, -8, 32, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-2, 0, 4, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (2, 1, 27, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (4, 9, 40, -11))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (26, 19, 33, 0))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (17, 26, 3, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (28, -5, 29, 9))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-4, 6, 40, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-1, -6, 37, 17))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (11, 22, 40, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-3, 15, 35, 7))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (17, 22, 24, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (30, 30, 37, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (18, 29, 15, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (4, 30, -11, -1))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (25, 5, 32, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (15, 12, 38, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (18, 19, 2, -6))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (12, 2, 16, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (9, 30, 17, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (21, -1, 1, 36))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (24, -5, 3, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (1, 2, 20, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-2, 14, 15, 33))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (28, 5, 8, 24))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-9, 1, 33, -2))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (2, 22, 2, -7))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-2, 5, 2, 16))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (3, 15, 8, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (25, 20, 36, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (2, 3, 28, 27))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (2, 13, 33, 7))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (16, 6, 5, -6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (19, -8, 1, 29))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, 28, 32, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (23, 19, -7, 8))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-9, 22, 15, -2))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (1, 7, 15, 16))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-6, -9, 1, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-2, 5, 25, 5))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-3, 20, 36, 7))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (13, -6, -6, 7))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (25, -5, 35, 26))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (30, -4, 13, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (3, 14, 3, -3))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-2, 24, 31, 28))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (1, -7, -2, 35))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (24, 2, 1, 13))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (26, 23, 6, -2))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (8, 25, 5, -12))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (5, 14, 17, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (18, 12, 21, -2))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (19, 26, 30, -12))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (13, 24, 10, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (29, 20, 26, -8))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (25, -2, 12, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (29, 2, 33, -6))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-1, -6, -9, 23))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-1, 18, 5, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (24, 30, 17, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (0, 25, -6, -8))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (1, 2, -4, 14))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (13, 12, 26, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (16, 7, 23, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (11, -9, 10, 16))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (10, 20, -12, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (7, 14, 5, 33))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (8, 22, 39, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (21, 18, 34, 11))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, 8, 21, 20))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (13, 15, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (9, 10, 3, 29))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (1, -3, 23, 23))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (12, 21, 11, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (1, 25, 31, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (22, 16, 26, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (17, 13, 23, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (25, 21, 16, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (1, -1, 6, 39))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (11, 6, 15, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (23, 21, 21, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (9, 1, 0, 20))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-7, 5, 24, 23))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (3, 17, 17, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (8, 20, -11, 0))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (8, 0, 40, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (29, 1, 15, 27))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (4, 13, 10, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (0, 20, 17, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-1, 7, 36, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (12, 29, 38, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (12, 4, -10, 16))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (21, 4, -10, 3))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (6, -9, -5, 3))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (18, 0, -10, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (4, 29, 27, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (5, 17, 13, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (29, -9, -2, -11))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (5, 23, 16, -1))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (12, 14, 36, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (15, -8, 22, -2))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-9, 4, 16, 3))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (21, -4, -5, 3))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-6, 22, 25, -10))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (17, 8, 17, 8))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (21, 15, -11, 31))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (0, 12, 17, 2))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-5, 13, 40, 29))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (19, -1, 33, 24))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (7, 3, 25, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-1, -9, 23, 34))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-8, 21, 38, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (25, 25, 21, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (18, 21, -7, -4))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (3, -2, -2, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (8, -4, 24, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (11, 12, 39, 14))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (4, 27, -5, 11))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (2, 11, -6, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (10, 17, 8, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (26, 7, 31, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (14, 25, 26, -6))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-2, 12, 25, 15))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (3, 18, 12, 23))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (13, 13, 20, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, 23, 25, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (15, 20, -7, 1))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-8, 22, 21, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-3, -7, 18, 29))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (19, 3, 28, 4))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (30, 30, -4, 26))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, 13, -6, 0))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (4, 19, 23, 37))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-6, 15, -7, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-8, -1, 6, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (4, 1, 26, 25))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, None)
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (22, 27, -7, 32))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-2, 8, 28, 38))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (9, 19, -10, 31))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (6, 1, 7, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 21, 15, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-6, -5, 18, 11))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (11, 24, 24, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-4, 8, 7, 20))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (20, 16, 28, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (21, -4, 1, 16))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, None)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (21, 30, -10, 38))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (14, -1, 26, -8))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (3, 2, 37, 24))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (21, 13, 37, 0))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (14, 25, 26, -1))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (11, 25, -9, 24))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (14, -8, -3, 20))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (29, 5, 2, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (23, 19, 3, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-3, 6, 23, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (11, 24, -12, 36))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (11, 19, 25, -8))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (14, 24, -3, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-3, 10, 9, 19))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (1, 16, 20, -7))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (10, 25, 4, -11))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-7, 4, -10, 28))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (5, -3, 27, -8))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (2, 3, 16, -7))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (28, 1, 18, -9))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-2, 7, 11, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (26, 3, 33, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (20, 11, 34, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (0, 15, 24, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-5, 16, -12, 14))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (30, -1, -12, -8))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (6, -1, 15, -12))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (6, 3, 3, 26))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (24, -4, 22, -9))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (18, 1, 12, -6))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (27, 27, 13, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (0, -4, -4, 0))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (28, 24, -5, 30))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (1, 23, 14, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (24, 19, -8, 15))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (12, 15, 36, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (26, -2, 5, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (30, 24, -9, 28))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (19, 29, 22, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (18, -3, 27, 22))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (15, -4, 11, 33))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, None)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (13, 9, 39, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (8, 9, 2, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (18, 22, -1, 18))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (30, 26, 17, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (20, 15, 29, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-5, 24, 20, 25))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (4, -4, -10, -5))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-2, 21, -3, 4))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-3, 7, 1, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 8, 1, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (16, 4, -8, 38))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (3, 3, 37, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-2, 17, 10, 33))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (23, 1, 9, 38))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 20, 12, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (27, -4, 22, -7))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (-9, 12, 36, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (2, 4, 17, 39))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (7, 26, 16, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-8, 8, 26, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-1, 13, 32, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (17, 2, 20, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (4, 10, 13, 29))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (2, 30, -3, -10))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (29, 11, 13, -2))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (24, -5, 34, 37))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (10, 21, 31, -5))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (19, 7, 29, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (30, 15, 10, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-4, 3, 30, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (22, 26, 4, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (17, -2, -10, -5))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (0, 13, -3, -11))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, 5, 29, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (20, 25, -11, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (12, 22, 23, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (17, 23, 0, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (25, 23, 31, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-2, 20, 13, 1))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (14, -5, 32, 22))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (29, 2, 11, 0))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (2, 3, 15, 8))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (17, -1, 6, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (3, 12, 29, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (5, -5, -11, -9))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (-4, 7, 7, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, 15, 36, 4))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-6, 27, 20, -6))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-3, 3, -2, 40))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (7, 13, 11, 8))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (26, 19, 11, -5))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (15, 22, 14, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-5, -3, 10, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, None)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (11, 0, 18, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (18, 25, 25, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (24, 3, -4, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-7, 8, 29, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-4, -3, 31, 27))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-3, 24, 30, 4))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (30, 15, 40, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (14, 1, 26, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (1, 28, -1, 25))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (11, 13, -12, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (29, 13, 14, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, 20, 32, -10))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (24, 0, 20, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (18, 24, 2, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (0, 28, 29, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (3, 1, 12, 37))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-9, 7, 25, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (3, 25, 20, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (18, 8, 39, 25))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (24, -7, 7, 16))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (1, 30, 35, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (6, -5, 25, 17))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (28, 27, 10, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (13, 2, 37, -8))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (2, 7, 24, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (11, 13, 1, -7))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (5, 12, 20, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-1, 8, 33, 17))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (21, 18, 26, 31))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (3, 2, 8, 33))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (23, 17, -8, 1))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-7, -4, 8, 15))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (6, 20, 10, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-7, -3, 11, 20))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (0, 21, -4, 22))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (22, 17, 12, 6))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-1, 0, 19, 28))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (22, 2, 21, 34))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (20, 30, 32, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (23, -7, 38, 12))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (15, -7, 0, 5))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, -1, -2, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (22, 19, -2, 16))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-2, -6, 7, 25))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (22, 10, 8, -6))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (23, 6, 2, -8))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (21, 7, 31, 40))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-6, 20, 36, -9))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (18, 16, 18, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (24, -3, -5, 15))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (7, 12, -4, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (3, 0, 20, 27))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (4, 30, -4, 14))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (28, 25, 30, -12))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (26, -7, 30, 34))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (-5, 1, 23, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-6, -9, -12, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (18, -7, 30, -5))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-5, -7, 2, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-2, 28, -5, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (24, -8, 10, 17))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (15, 21, -8, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-8, 4, 33, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (21, 17, -10, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (29, 11, 30, 26))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (18, 26, 39, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (28, 26, 30, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (21, 13, 37, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-1, 29, 6, -12))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (7, 9, -4, 1))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (21, 19, -6, 37))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-9, -7, 28, 4))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (23, -9, 16, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (0, 20, -3, 31))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (5, -3, 8, -4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (8, 18, -4, 11))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (19, 0, -5, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (10, 13, -1, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (18, 18, 6, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, None)
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, None)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (27, 13, -9, 23))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-8, -8, 0, 5))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (12, 13, 2, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (4, 15, 39, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (21, 0, 38, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (20, -6, -1, -8))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (15, 19, 3, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (30, 21, -11, -10))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-8, 21, -12, 15))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (0, 18, 1, 28))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (18, 28, -1, 37))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, -4, 0, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (16, 9, 8, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (28, 21, 14, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (16, 18, 25, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (0, 16, -12, 29))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, None)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (6, 11, 26, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (24, 20, -10, -12))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (4, 4, -12, -6))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (6, 30, 4, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (15, 9, 0, 36))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (26, 6, 14, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (5, 18, 3, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (6, 12, 9, 36))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (16, 30, -5, 11))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (16, 0, 36, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (17, 25, 4, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, None)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (4, -1, -10, 5))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, 0, 8, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-9, -9, -11, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (16, 4, 32, 35))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (20, 3, 32, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-5, 8, 6, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (15, 15, -10, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (25, -5, 39, 12))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (8, 21, -9, -1))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (10, 12, 36, 25))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (19, 19, 29, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (14, 28, -5, 26))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (29, 27, -1, 9))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (28, 22, 11, -2))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (0, -1, 11, 39))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (27, 23, 32, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (2, 7, 0, -9))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (9, 1, 7, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (12, 14, 14, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (8, 23, 24, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (29, 14, 33, -8))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (20, 19, 10, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-6, 13, -5, 19))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (18, 1, -12, 14))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-7, 23, 11, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-3, 12, 20, 16))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (24, 16, 6, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-6, -4, 36, 0))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (16, 23, -8, 30))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (28, -5, 36, 36))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (4, 15, 13, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (1, 16, 1, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (4, 13, 22, 23))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (26, 18, 35, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (2, 1, 32, 34))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, None)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (11, -6, 16, -7))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (6, 13, -12, -4))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (23, -8, 5, -8))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-6, 15, 28, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (29, 8, 2, 15))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (5, 23, 14, 9))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (15, 11, 35, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (21, 30, 21, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-3, 9, 30, 1))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (12, 18, 37, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (19, 12, 2, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (13, 6, 30, 31))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (8, 11, 26, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (29, 6, 25, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-2, -4, 3, 23))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (0, 3, -8, 17))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (13, 24, 35, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (21, 21, 16, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (9, -1, 36, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (29, 28, 3, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-3, 17, -10, 2))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (26, 24, -7, -3))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (23, 2, 34, 29))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-2, 23, -1, 20))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (23, 9, 15, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (22, 20, 14, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (8, 10, 13, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (10, 11, 25, -6))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (3, 19, 17, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (21, 19, 32, -7))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (19, -7, 23, 20))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (20, 18, 36, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-4, 3, 1, 23))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (16, 13, -11, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (7, 0, 2, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (11, 3, -9, 36))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (30, 1, 40, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-1, -6, 37, 25))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-5, 16, 26, 33))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (10, 15, 11, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (7, 9, 18, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (30, 10, -2, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (18, 14, 25, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (2, 18, 13, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (27, 19, 35, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (7, 19, 24, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (30, 23, 37, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (8, -1, 4, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-2, 17, -1, 36))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (15, 28, -4, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (10, 25, 17, -1))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, None)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (3, 10, 19, -4))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (16, 18, 22, -1))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, None)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (0, -7, -10, 17))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (28, 20, -5, 25))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-2, 1, 32, 29))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (23, -8, 16, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-2, 0, 20, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (9, 4, 27, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (3, 19, 29, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (2, 8, 39, 17))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (18, 25, 36, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (25, 30, 18, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (11, 23, 26, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (18, 1, 19, 23))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (24, 3, 30, 15))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (30, 6, 0, -9))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (25, 30, 30, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (5, 11, 35, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (12, 25, -1, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (4, 14, -10, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (7, 13, 2, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (13, 19, -3, 20))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (5, 11, 26, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (21, 12, 21, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (6, 3, 32, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (14, 26, 9, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (5, 24, 31, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (24, 16, 0, 10))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (27, 16, -6, 26))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (12, 12, 23, -4))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-6, 13, 25, 39))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (7, -8, 9, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (28, -2, -11, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (4, -5, -11, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (10, 9, 11, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, None)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-7, -3, 15, 17))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (16, -6, 18, 11))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (30, 1, 36, 23))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-4, -6, 21, 37))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (17, 18, -4, 39))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, None)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (1, 20, -5, -11))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (13, 29, 4, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (15, 20, 34, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (16, 21, 32, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (1, 20, 22, 23))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (13, 11, -3, 25))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (29, -1, 13, -8))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (1, 30, 22, -8))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (21, -7, 30, 24))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (18, 1, 1, -12))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (29, -2, 38, 40))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (4, 22, 14, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-3, 5, 3, 12))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (10, 17, -6, 21))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (8, -6, -5, 16))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (1, 16, 7, -9))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (11, -2, -2, 38))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-6, 28, 31, 9))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (5, 30, 20, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (4, 3, 2, 29))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-4, -8, 12, 35))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-7, -4, 3, 39))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (2, -8, 7, 25))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (27, 30, -3, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (8, 10, -3, 30))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (12, 5, 20, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (23, 9, 1, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (30, -7, 29, 20))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (18, 9, -4, 6))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-6, 16, 8, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-6, 22, 29, 11))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (22, 8, 2, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-3, 10, 9, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (29, -7, 10, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-6, -9, 35, 9))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (15, 12, 20, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (1, 6, 27, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (26, -9, 12, 38))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (19, -5, 32, -8))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (6, 14, 15, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-4, 14, -10, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-9, 6, 38, -9))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (25, 6, 0, -5))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-1, 12, -1, -10))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (20, -6, -9, 26))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (6, 26, 25, -9))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (12, 22, 37, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (13, -8, -3, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (18, 17, 35, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (11, -5, 37, -12))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (19, 17, 0, 40))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (14, 2, 5, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-2, 22, -6, 16))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (13, 16, 22, -12))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (17, 10, 6, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (8, 19, 10, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-5, 30, 2, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (26, 6, -5, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (10, 10, 30, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (12, 22, 13, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (3, 29, 28, -10))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (29, 16, 5, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (29, 2, 34, 31))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (6, 4, -9, -10))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (19, 16, 2, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (3, -8, 3, -4))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (30, 16, -2, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-3, 15, -7, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (15, 27, 13, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (18, 27, 31, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (29, 5, 5, 34))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (8, 26, -4, 28))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (0, 12, 1, 15))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-8, -2, 9, 30))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-3, 14, 34, 13))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (14, 17, 35, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-8, 4, 36, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (9, 25, -10, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (6, 4, 31, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (9, 20, 33, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-1, 16, -3, 19))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (29, -8, 13, -11))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (26, -3, 18, 0))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (25, 6, -11, 36))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (30, 26, 24, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (17, -9, 12, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (11, 28, -10, 33))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-8, -1, 20, 26))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 7, -2, -5))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (17, 3, 1, 20))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (13, 30, 4, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (23, 12, 35, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (24, 0, 2, 22))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (2, -4, 28, -11))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (4, 20, -8, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (0, 2, -10, 35))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (26, 3, 16, 8))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (2, 26, 36, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (23, -5, -6, 17))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (11, 14, 36, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (18, 2, 16, 11))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-3, 15, 16, 24))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (26, -8, 6, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (21, 4, 31, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (2, -3, 7, 15))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (19, -5, 4, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-1, 16, 7, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (16, 7, 17, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (20, 13, 11, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (21, -2, 17, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-9, 17, 29, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (7, 26, 21, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-6, 9, 21, 0))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (14, 22, 12, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (8, -6, 7, 34))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (-9, 5, 40, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (6, 3, 3, 14))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (20, 16, -11, 40))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (16, 13, 36, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (15, -9, 13, 14))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 25, 29, -9))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (30, 4, 10, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (9, 2, -12, 5))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (14, 25, 28, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (12, 21, 10, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (18, 22, 18, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (0, 24, 10, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (21, 13, 23, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (28, 26, 36, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-5, 4, -5, -9))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-4, 13, 25, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (5, -8, 4, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (11, -7, -6, 9))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (4, 29, 2, -3))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (25, -5, -10, 16))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (6, -4, 8, 35))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (11, 24, 33, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (21, 23, 3, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (9, 7, -3, 22))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (2, 4, 6, 5))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-2, 29, 28, 31))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (0, 25, 28, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (28, 30, 10, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (22, 29, 18, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-5, 11, 12, 33))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (29, 15, 29, -10))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (17, 3, 20, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-4, 6, -2, 7))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (21, -5, 19, 12))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (25, 14, 14, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (10, 11, 29, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (5, 22, 13, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-8, 15, 5, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-8, 27, -7, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (16, 1, 1, 30))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (26, -2, 2, -6))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (17, 21, -10, 20))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (22, 19, 19, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (26, -8, -8, 20))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (7, -9, 33, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (7, -3, 11, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (2, -2, -11, 36))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (6, -7, 40, 36))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-9, 12, 0, 6))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-1, 13, 18, 36))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (8, 7, -7, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (12, 8, 21, 8))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (10, 0, -7, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-5, 6, -6, 37))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (10, 7, -12, 17))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (14, 13, 31, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (26, 2, -2, 38))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (3, 30, 32, -9))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, None)
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (21, -9, 40, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (6, 6, 21, -7))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-1, 17, 14, -3))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (-6, 8, 34, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (18, 27, -12, 21))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-2, 1, 37, 28))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (2, 26, -12, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (15, 14, 22, 15))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (29, 6, 31, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (18, 13, 9, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (18, 4, 23, 15))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (2, 3, 29, -4))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (15, -9, 6, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (20, 0, -11, 30))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-3, 7, 23, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (21, 17, -8, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (24, 25, 2, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-9, -8, 37, -10))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (20, 25, 25, -5))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (7, -3, 13, 34))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (17, 4, 13, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (25, -1, 17, 33))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (18, -5, 21, -4))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-7, 6, 13, 31))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 27, -4, 3))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-7, 23, -2, 7))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (10, 1, 30, -12))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (27, 29, 16, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (11, 21, 16, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (16, 23, 39, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (0, 24, 32, 39))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (9, 21, 39, -6))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (27, 3, -5, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (27, -2, -5, 1))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-8, -7, 6, 36))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (14, 19, -11, 23))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (9, 18, 39, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-1, 20, 27, 39))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (17, 19, -2, 11))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (9, -5, -6, 13))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-9, 15, 40, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (19, 9, 28, -3))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (28, -2, 12, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-8, 4, 1, -3))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (6, 27, 37, 0))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (27, 30, 4, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (6, 19, 36, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-7, 19, 26, -7))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (28, 14, 34, -4))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (11, 3, 36, -6))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (22, 29, 18, -11))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (8, 26, -5, -10))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (20, 3, 27, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-4, 11, 40, 12))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, None)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (22, 16, 8, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-8, 30, 31, 32))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (23, 23, 17, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-4, -1, 39, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (19, 13, 23, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (29, -2, 38, 12))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (22, 23, 12, -2))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (6, -8, 30, 31))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (27, 0, 13, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (24, 9, 2, 11))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-4, 13, 21, 9))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (11, 8, -6, 13))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-4, 3, 7, 4))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-8, 28, -2, 31))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (0, 21, 13, 22))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (23, 17, 2, -4))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (22, 14, 11, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (15, 5, 7, -1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (28, -7, -6, -11))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (11, 21, 8, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (5, 30, 5, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (2, -4, 9, 32))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (30, 8, -8, 4))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (27, -8, 19, 14))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (11, 5, -3, 11))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (13, -7, -6, -3))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (25, -8, -2, 24))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (6, 28, 31, -5))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (20, 14, 26, 35))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (0, 26, 5, 27))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (11, -6, -8, 1))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (29, 25, 11, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (14, 2, -11, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (23, 18, 4, -1))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-8, 0, -6, 40))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-5, 8, 36, 22))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (27, 13, -2, 36))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-1, 26, 31, 21))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, None)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-6, 24, 40, 18))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (22, 20, -1, 11))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (20, 12, 33, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (28, 18, 15, -4))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (17, 3, -1, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (7, 3, 24, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (6, 27, 5, -4))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (17, 4, 11, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (15, -9, 13, 24))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (27, 17, 22, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-3, 13, 27, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (27, 8, 18, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (30, 14, 34, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-1, 6, 30, 11))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (10, 10, 1, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (14, 12, 8, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (8, 12, 34, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, None)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (20, 0, 32, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (17, 14, -4, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (19, 1, -6, -10))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (30, -3, 34, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (2, 26, 38, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (26, 16, 21, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (21, -5, 28, 0))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (21, 30, 11, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-6, 12, 39, 17))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-4, -8, -11, 5))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (2, 16, 8, 30))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, None)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (11, 2, -2, 27))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-8, 6, 4, -7))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (13, 0, 6, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (2, 2, 14, 0))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-2, 15, 12, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-9, 4, 40, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, None)
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (0, 25, 36, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-8, 23, 27, 25))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (3, 22, 40, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (11, 10, 32, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-5, 11, 40, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (8, 5, 20, -11))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-3, 3, 37, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-8, -7, 14, 4))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (10, 18, -2, 37))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-2, 18, 40, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (8, 12, 27, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (10, 15, 19, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (19, 29, -11, 14))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-7, 28, 12, 0))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (17, 27, 5, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (2, 12, 5, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-3, 19, 21, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-1, -3, 5, 5))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (12, 6, 32, 21))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (7, 1, -6, 15))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (20, 12, 11, -3))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (20, 17, 39, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (4, 19, -3, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (4, 30, 17, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (13, 0, -1, 23))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (28, 4, 38, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-8, -6, 24, 8))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (17, 23, 16, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (23, 26, 7, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (12, 28, 25, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (4, 3, 37, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (13, 4, 15, -11))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (10, 11, 3, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (30, 8, 8, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (22, 12, 7, -12))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-3, 2, 23, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (22, 23, 3, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (22, -2, -1, 0))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (20, 19, -2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (23, 16, 17, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (2, -6, 34, 24))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-5, -9, 15, 33))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-9, 20, -5, 2))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (25, 3, -2, 23))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (30, 15, -1, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (16, 16, 7, 22))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (9, 23, 23, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (13, 8, -1, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (2, 2, 22, -10))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (24, 5, 31, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-3, -6, 25, -12))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-3, 24, 30, -9))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (13, 0, 29, 37))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (18, -8, -2, 9))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-6, 11, 22, 21))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (2, -7, 27, 4))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (30, 19, 8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-7, -2, -12, -11))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (-3, -6, 33, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (21, -3, 31, -7))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-9, 9, -7, 37))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (26, 8, 37, 14))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (10, 19, 33, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (11, -3, -5, 24))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (18, 28, -6, -3))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (0, 19, 16, 13))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (23, 1, 21, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (26, 30, -8, 23))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-1, 8, 1, 29))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-4, 2, 35, -6))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-9, -7, -3, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-1, 5, 19, 7))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (3, 5, 4, 25))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (5, 30, -7, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (19, 25, 39, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (10, -5, -10, 3))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (10, -6, 23, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (7, -4, -2, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-3, 24, 34, 19))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (28, -4, 22, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (1, 25, -4, 0))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-9, 28, 38, -8))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-3, 28, -10, 12))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (12, 2, 40, 33))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (22, 0, 14, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-2, 11, 10, -1))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (15, 20, 9, -2))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (16, 21, 36, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-2, 11, 10, 25))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (0, 16, 23, 31))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-8, 2, -10, 1))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (21, 28, 20, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-7, -9, -12, 24))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-3, 25, 28, -2))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (9, 9, 21, 19))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-2, 20, 2, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (28, 16, 0, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (20, 16, -11, -7))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (9, -3, 8, 29))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (19, -2, 26, 28))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (13, 11, 18, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (10, -7, -6, -1))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (7, 14, 21, 8))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (17, 23, 3, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (29, -6, 37, 23))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (1, 1, 28, 27))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-6, -8, 27, -8))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (18, 23, -3, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (8, 5, 37, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-8, 27, 30, 9))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (8, 29, 5, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (15, 0, 20, 39))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (23, 19, -4, 12))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (21, 0, -10, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (23, 27, 18, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (25, 23, 0, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (7, 12, 24, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (26, 9, 15, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-1, 26, 2, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-8, 21, 32, 2))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-7, 21, 5, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (1, 28, 38, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (30, 17, 18, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-6, 13, 8, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (23, 24, 16, -2))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (25, -3, -6, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (5, 0, -10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (6, 8, 37, -5))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (0, 24, 11, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (29, 29, 7, -4))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (17, -8, 9, -9))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (28, -6, 22, 33))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-1, 26, 8, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (18, -2, 30, 16))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (-2, 11, -4, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-5, 15, 13, 19))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (16, -7, 22, 34))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (28, 5, -12, 36))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-4, 30, 13, 31))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (14, -2, 11, -10))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, None)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (21, -8, -3, 32))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (10, 18, -10, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-5, 19, -11, 31))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (11, -9, 9, -12))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-9, 12, 13, 2))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (22, 4, 34, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (6, -1, 34, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (14, -4, 36, -8))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (2, 4, 18, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (17, 6, 40, 23))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (15, 19, 10, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, -1, 27, 11))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (7, 6, 8, 35))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (14, 3, 8, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (24, 15, 26, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (5, 13, 26, 19))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (10, 19, 8, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (15, 25, 16, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (30, 15, 2, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-9, 14, 16, -12))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (19, 15, 5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (15, 17, 34, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (19, -8, 8, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-5, 23, 18, 28))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (30, 6, 21, 25))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-3, 9, 9, -12))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-6, 0, -10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (28, 20, 22, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-2, 27, 23, -5))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (5, 30, -4, 7))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (3, 0, 22, 28))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (22, 15, -7, -6))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (19, -9, 38, -8))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (9, 4, 23, 0))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, None)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-7, 14, 36, -2))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (3, 10, 23, 28))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (9, 24, 26, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (27, 16, 34, -7))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (6, 17, 6, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (23, 14, -11, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (9, 2, 2, 19))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (19, 6, 3, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (0, -9, 23, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (30, 28, -6, 33))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-2, 6, 29, 1))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (7, 18, 22, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (14, 27, 35, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, None)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-2, 8, 18, -12))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (18, 29, 8, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (28, 19, 12, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (26, 1, 12, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (24, -5, 22, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-4, 6, 29, -11))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (0, 22, 8, -6))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-3, 14, 16, 22))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (30, -7, -7, 14))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (14, -5, 35, 34))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (26, 7, 19, 13))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (24, 8, -9, 23))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-8, -9, -7, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-4, 18, 40, 30))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-7, -1, 4, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (11, -5, 2, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (11, 3, 36, 19))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (21, -3, 24, -9))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (16, 26, -2, 2))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (12, 8, 11, 17))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (19, 22, 16, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-3, 19, -3, -10))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (11, -8, 4, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (11, 29, 19, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (13, 17, 3, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-9, -3, 20, 15))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (5, 11, 27, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (30, 29, 10, -11))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (18, 4, 0, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-8, 6, 27, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (1, 9, -4, -12))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-1, -1, 34, 37))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (7, 3, 27, -5))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (30, 9, 12, -10))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-8, 12, 31, 25))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (20, 1, 13, 0))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 0, 13, 0))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (18, 9, 33, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (18, 25, 19, -2))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (15, 24, 34, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (4, 29, 14, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-5, 8, 7, 21))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (13, -7, 15, 39))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (1, 12, 8, 28))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (20, 29, 18, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-3, 21, -8, 9))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (17, 16, 39, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-4, 24, 2, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-4, 20, 37, 27))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (25, 22, 20, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (27, 3, 29, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (9, 4, -12, 8))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, None)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (29, 7, 26, 31))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (24, 20, 18, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (23, 15, 37, -8))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (27, 7, 7, -4))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (30, -3, 32, -6))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-4, 20, -1, 32))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-4, 15, 10, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (21, 26, 40, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (26, 3, 1, -3))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (5, 25, -10, -3))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (3, 26, 17, 31))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (15, 3, 24, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-3, 9, 11, 27))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (0, 1, 30, 10))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (20, 16, 19, 33))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (16, 26, 0, 7))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (14, 3, -9, 12))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (16, 4, -10, 12))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, -4, 4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (24, 17, 26, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (9, 14, 15, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (27, 12, -1, 3))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (4, -6, 2, 0))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (4, 29, 32, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (18, 9, -10, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (27, 8, -1, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-9, -2, 8, 5))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (1, -7, 36, -2))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (23, 3, 23, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (11, 10, 20, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (19, -6, 17, 30))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (26, 5, 35, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (16, 0, -7, -3))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (12, -2, 8, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (15, 25, 20, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (22, 8, 25, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (11, 9, 1, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (30, 28, 16, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (27, 11, 37, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (4, 14, 2, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (7, 10, -2, 27))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-5, 16, 20, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-4, 20, -7, 36))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-4, -4, 11, 37))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-4, -7, 36, 12))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (30, 1, 27, 24))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, None)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-9, 16, -12, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (3, 6, 6, 17))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (23, -6, 21, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (9, -8, 21, 30))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-6, 17, 8, -4))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-6, 11, 33, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-9, 26, 29, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (12, 1, 14, 14))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (23, 24, 37, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (26, 25, 0, -7))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (14, 4, 22, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (8, 26, -2, -4))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (14, 15, 5, -5))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (3, -2, 28, 3))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-4, 26, 7, 5))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (13, 18, 16, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (22, 0, 24, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-3, -8, -7, 11))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-4, 4, 5, 7))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-5, 6, 10, 39))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (10, 24, 6, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (28, -2, 9, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-5, -2, 18, 28))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (11, 4, 36, 19))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (29, 8, 20, -2))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (3, 28, -9, 32))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (11, -8, 39, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (6, 7, 21, 40))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (20, 23, 21, -9))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, None)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (1, 21, -7, -10))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (10, 20, 11, -10))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-7, 23, 40, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (17, 0, 11, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (15, 22, -4, 0))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (19, 9, -4, 25))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (11, 24, -3, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (5, -1, 19, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (28, -4, 38, -3))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-9, 12, 19, 26))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (2, 3, 23, 4))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (27, -2, 3, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-1, 7, 34, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (1, 21, 30, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (1, 6, -12, 19))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-9, 30, 11, 17))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (23, 29, -8, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (20, -2, 25, 34))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-2, 10, -11, 28))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (20, 23, 13, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (24, 19, 12, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (6, -1, 28, 38))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-6, -7, 38, 8))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (29, 24, -11, 34))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (16, 11, -11, 1))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-2, 19, 6, 36))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-7, 27, 0, 20))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-6, 9, 9, -3))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (29, -6, 21, 40))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (0, -1, 24, 21))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (10, -4, -3, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, None)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-3, -6, 26, 38))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (9, 27, 29, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (10, -2, -5, 24))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (25, -4, 28, -3))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (13, -3, 14, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (17, 22, 24, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-2, 4, 10, 10))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-7, -6, -1, 12))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (11, 17, -7, 3))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (28, 21, 6, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (23, 4, 1, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (27, 30, 39, -2))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (25, -8, 3, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (8, 23, 38, -4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (24, 0, 17, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (27, 23, 24, -5))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-6, 20, 27, -12))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (5, 2, 16, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (21, 25, -2, 8))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-6, 1, -12, -10))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (0, 2, -9, -8))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (27, 10, -10, 40))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (29, 26, 35, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-4, 25, 30, 34))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (12, 28, 35, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (12, 7, 2, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (14, 10, 35, 40))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (2, -5, -12, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (14, -6, 5, 25))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, None)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (10, 25, 8, -6))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-5, 20, -11, -5))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (24, 5, 11, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (17, 23, -4, 32))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 30, 1, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (21, 4, -12, -5))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (12, 20, 39, -10))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (3, 20, 20, 11))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (13, 17, 12, -12))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (17, 13, 18, -10))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-8, 23, 36, -7))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (30, -2, 25, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (20, 13, 10, -6))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (4, 5, 17, 32))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-7, 23, 10, 22))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (30, -5, 24, -12))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-6, 2, 13, 27))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-4, 30, 8, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (28, 11, 17, -7))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (0, 4, 31, 11))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (5, 14, 8, 13))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (14, 26, 39, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-1, 20, 15, 12))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (8, 3, -11, 0))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (28, 27, 25, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (13, 29, 1, -9))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (16, 22, 3, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-1, 13, 34, -10))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (28, 10, -4, 38))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-9, -8, 10, 3))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (0, 27, 21, -12))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-5, 28, 6, 27))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (27, -3, 22, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-2, 26, 6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (28, 28, 11, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (22, -8, -8, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (10, 15, 6, -6))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (4, 16, -1, 30))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-9, -9, 22, -9))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-5, 10, -12, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (16, 7, -7, 16))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (29, -3, 18, 29))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (20, 21, 37, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (23, -6, 19, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (29, 25, 23, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (18, 3, 17, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (12, 22, 37, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-3, -4, 38, 0))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (7, 21, -3, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (19, 28, 26, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (24, -9, 15, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (26, 8, 18, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-3, 13, 7, 40))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (22, -3, 13, -7))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (9, -9, 32, -6))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (1, 28, 21, 28))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (25, 7, -5, 2))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (30, -4, 15, 26))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (22, 16, 6, -11))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-1, 26, 11, 17))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (4, 19, -3, -10))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (19, 5, 30, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (5, 28, 14, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (28, -7, 17, -5))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (7, -7, 28, 17))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-4, 10, -2, 39))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (-3, 13, 2, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (18, 29, 12, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (13, 19, 7, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-5, 29, 13, 15))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (2, 2, -11, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-1, 9, 39, 14))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-4, 6, -8, 21))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-4, 16, 9, -8))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (23, 9, -8, -7))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-5, 0, -3, 32))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (12, 1, -1, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (28, -7, 3, 32))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (10, -6, 4, 24))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (24, 23, -8, 34))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (27, 29, -3, 36))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (19, -5, 3, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (14, 21, 14, -1))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-7, 4, 0, 29))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-3, -7, 9, 37))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (1, 20, -7, 1))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (30, 17, 34, -3))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-4, 17, 3, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (19, 23, 40, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (3, -8, 10, 39))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (6, 17, 7, 22))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-7, 5, 37, 25))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (7, 19, 38, -11))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (3, 19, 2, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-9, -3, 29, 5))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (29, 16, 10, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (29, 19, 3, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-9, 27, -10, 11))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-9, 24, 34, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-9, 9, 16, 15))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-3, 4, 12, -6))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (27, -5, 18, 17))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (3, 22, -10, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-2, 2, 4, 26))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-8, 16, 39, 27))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-5, 10, -7, -11))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, 17, 30, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (28, 1, 1, -12))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (23, 6, 17, 37))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-9, -5, 36, -4))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (16, 7, 16, -7))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (17, 17, 28, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (6, 12, 0, 4))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (18, 2, 37, 37))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (3, 2, 3, -11))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (26, 5, -2, 9))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (5, 24, -12, -2))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (20, 5, -10, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (21, 17, 1, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (29, 8, 7, -3))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (22, 16, 33, -11))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (16, 18, 1, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (12, 27, 10, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (3, 26, 9, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (27, 4, -11, 29))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-4, -1, 14, 35))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-4, 0, 4, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (25, -9, 37, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (22, 15, 38, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-2, 3, -12, 22))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (30, 13, 31, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (27, 9, 30, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (30, 25, 13, -3))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (2, -6, 27, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (14, -5, 39, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-2, 25, -2, 12))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-1, 18, -7, 23))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (7, 28, 5, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (24, 18, 14, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (8, 26, 9, -11))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-4, 23, 16, 31))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (20, 12, -10, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (15, -6, 14, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (8, 24, -1, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (9, 11, -6, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (4, 6, 28, 7))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-1, 22, 17, 32))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (19, -9, 6, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (8, -1, 17, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (28, 22, 8, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (17, 30, 37, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (0, -6, 40, 12))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-2, -2, -6, 11))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (27, 1, 24, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (30, 21, 11, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (19, 4, 11, 32))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (25, -4, 23, -2))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (4, 26, 18, -1))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (12, 21, -12, 6))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (15, 4, 33, 35))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (11, 21, 25, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (4, 26, 27, 29))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-2, 0, 29, 12))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-6, 4, 15, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (8, 19, -10, -8))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (8, 24, 9, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (22, 29, 6, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-9, 6, -8, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (26, 5, 33, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-1, 15, 3, -12))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (23, -5, 29, 36))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (15, 18, 25, -1))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (29, 15, -1, 14))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-1, 3, 37, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (16, 9, 12, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (13, 10, 0, 10))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, -1, 28, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (25, -7, 4, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-1, 7, 4, 16))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (21, 10, 16, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (18, 23, 16, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (15, -2, 18, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-7, 11, -12, 11))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (26, 0, -2, 10))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-4, 3, 38, -12))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (25, 9, 2, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (10, 15, 37, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-7, 6, -12, 36))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (0, 11, 29, -1))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (4, 7, 28, 25))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (6, 6, 22, -8))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (13, 16, -6, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (13, 9, 38, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-8, -5, -12, 6))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (21, -1, 22, 22))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (20, 27, 26, -7))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (27, -3, -12, 10))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-9, -9, 16, 28))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (28, 4, -8, 25))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (23, 25, 3, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (26, 18, -3, 24))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (12, 16, 3, 34))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-8, 22, -10, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (7, 25, -4, 27))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (6, 19, 2, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-7, 4, 16, -9))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (8, 5, -3, -11))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (6, 18, 35, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (11, -3, 22, 36))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (11, -7, 38, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (14, 25, 36, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-1, 13, 4, 18))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (0, 14, 26, 9))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-8, 10, 12, 23))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (12, 20, -10, 32))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (9, 4, 0, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (11, 10, 38, 8))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, None)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-1, 23, 5, -12))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (22, 24, 23, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-2, 17, 21, -3))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-5, 16, 0, 24))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-7, 1, 25, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (1, 20, 15, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-6, -7, 4, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (1, -1, -11, 26))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-7, 6, -11, 12))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (6, 3, 17, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (6, 20, -8, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, None)
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (3, 24, 37, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (24, 11, 28, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-6, 21, 37, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (1, -9, -1, -8))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (4, 23, 37, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-2, -5, -2, 7))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (25, 17, -12, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (5, 18, 23, 28))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (27, -1, -6, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (26, 12, 20, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (28, -6, 1, 30))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-3, 14, -1, -7))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (22, 6, 6, 36))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (21, -1, -6, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (2, 8, -6, -1))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-7, 4, 36, -10))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 8, 36, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (0, 23, 21, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (11, 30, -12, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (6, 12, 6, -4))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (9, 21, 36, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (16, 5, -7, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (27, 10, 10, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (11, 0, 3, -12))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (25, 14, 23, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (6, 7, -9, 18))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (24, 23, 20, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (16, 14, 2, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (20, -3, 0, 1))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (13, 3, 31, -11))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (5, 2, 18, 12))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (19, -3, 7, 26))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (8, 3, -4, 8))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (19, 24, 14, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (5, 19, 37, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-8, 2, 29, 1))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (3, 2, 17, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (18, 15, 35, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (28, 2, 22, 14))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-1, -3, 6, 32))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (23, 23, 33, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (9, 29, 35, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (7, 3, 7, 22))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (19, 3, 20, -9))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (18, 15, 23, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (19, 3, 8, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (7, 12, 31, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (26, -3, -11, 38))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (6, 26, 4, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-9, 12, 20, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (5, 5, 25, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (7, -7, 14, 37))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (5, 18, 3, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (23, 27, 5, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (30, 10, 16, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (1, 15, -9, 25))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-6, -1, 12, 16))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (11, 20, 21, -8))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (28, -8, 35, -1))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 0, 6, 39))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-5, 25, 1, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (13, 18, -6, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (10, 22, 12, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (13, 25, -8, 15))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (0, -3, 38, 29))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, None)
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (10, 28, 11, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (19, 29, 18, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (22, 11, -8, 14))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (10, 16, 8, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (11, 30, 15, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (6, 8, 38, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (30, -7, 29, 12))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (28, 30, -7, 32))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (27, 16, 24, -5))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (27, 25, 36, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (3, 28, 10, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (8, 15, 30, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (6, 19, 29, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (27, 20, 9, -3))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (2, 10, 27, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (25, -9, 29, 23))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (17, 0, 12, -6))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-7, 12, -1, 24))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (25, -3, 13, 17))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (15, 19, 25, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-7, 25, -2, 31))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (26, -7, 8, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-6, 11, 38, 30))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (2, 23, 31, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (2, 29, 23, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (3, 2, 26, 33))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-6, 6, 31, 2))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (15, 28, -2, 23))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (24, 22, 30, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (10, 5, -3, -9))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (10, 13, 22, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (2, 17, 2, -5))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (10, -9, 19, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 6, -1, 40))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (30, 19, 29, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-9, 17, 25, -11))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (12, 6, 39, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (25, 26, 35, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (18, 13, 17, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (25, 22, 3, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-3, -4, 39, 21))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (1, 20, 35, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (26, 3, 35, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (1, 29, 7, 27))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-4, -6, 31, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (8, 0, 18, 15))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (14, 25, -8, 38))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (22, 4, 1, 33))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (14, 27, 23, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (27, 6, -10, -10))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (4, 20, 2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-7, 1, 32, -4))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (20, 21, 35, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (7, -5, 28, -4))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-7, 12, 22, 1))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (13, 16, 12, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (3, 11, 22, 2))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-1, 12, 36, 3))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (29, 18, -2, 37))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (5, 28, 39, 15))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (11, 27, 6, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (-6, 23, 6, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (16, 21, 5, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-7, 26, 15, 26))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (13, 19, -11, 36))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (9, 20, 22, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (22, 27, -9, 25))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-7, -8, -4, 0))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (21, 0, 36, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (1, -6, -3, 12))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-4, 24, -2, 6))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-2, -1, 5, 31))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-1, 19, 2, 8))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (6, 18, 22, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (26, 13, 28, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (15, 9, 14, 14))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (25, 11, 24, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (5, -9, 16, 14))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-5, 13, 15, -6))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (4, 19, 18, -5))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (23, 6, 26, -12))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (8, 9, 2, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (20, 25, 0, 28))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (10, 18, 9, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (30, -8, 13, -8))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (10, 0, 33, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (5, -8, 3, 11))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-9, 1, 14, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-2, 4, 23, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (2, 24, 5, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, None)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (4, 20, 5, 29))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-9, 29, 25, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (18, 5, 28, 40))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (21, 19, 23, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (28, 1, 5, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (20, 26, -1, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-3, 5, -6, 36))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (30, 7, 30, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (26, 23, -10, 12))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (18, -5, 36, 19))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-5, 13, -10, 28))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (4, 16, 2, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (7, 17, 22, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (10, -7, 12, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (30, 23, 34, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-5, -2, 35, 1))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, None)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (10, 15, -10, 15))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-9, 11, 19, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (5, 20, -1, 12))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-1, 2, -3, -3))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (0, -4, 9, -6))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-8, 30, 8, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (10, 5, -2, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (19, 15, 26, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (6, 27, 34, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (20, 28, 31, -8))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-1, 28, 17, 2))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (5, 4, 1, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-1, 17, -12, 24))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (27, 7, 15, 21))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (25, 5, 25, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (4, -1, 26, 4))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (27, -3, -12, 10))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (24, 0, -3, 11))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (20, -2, -3, 21))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (1, -7, 39, -10))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 17, 6, -5))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-9, 5, 9, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (18, 8, 24, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (2, 6, 38, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-1, 6, 14, 23))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (11, 9, -12, -2))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (2, -2, 36, 23))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (22, 8, -10, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (7, 15, 31, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (19, 9, 23, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (4, 15, 14, -9))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (22, 10, 12, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (20, -6, 9, -7))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (20, 11, -2, -11))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (29, 27, -6, 25))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (2, -5, 1, 36))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (27, 10, 10, 32))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (1, -9, 9, -3))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (26, 25, 37, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (27, 23, 26, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-1, 19, 22, 4))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-1, 27, 11, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (28, 28, 29, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (15, 24, -10, 9))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (14, 5, -10, 7))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (14, 20, 34, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (27, 28, 22, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-2, 3, 35, 37))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (15, 23, -8, -8))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (26, 5, 20, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-7, 26, 18, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (28, 4, 24, 37))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (22, -9, 12, 29))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-8, 4, 24, 29))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (1, -4, 12, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (24, -5, 24, 40))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-2, 20, -8, 23))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (12, 18, -12, 38))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (-9, 13, 2, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (2, -3, 6, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (26, -1, 27, -10))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (17, 6, 20, 8))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (3, -9, -2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (29, 27, 34, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (3, 3, 21, 4))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-1, 12, 14, 38))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (4, -5, 8, 16))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (17, 25, 13, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, 0, 4, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-3, 12, 1, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (3, 2, 2, 26))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (20, 7, 26, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-1, 6, -4, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (2, 25, 14, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (26, 29, 26, -5))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (21, 6, 21, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (18, 22, 27, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (19, 22, -3, 28))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (25, 28, 18, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-1, 29, 0, -3))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (21, 23, -5, 31))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (17, -6, 19, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (20, 26, 13, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (-9, 9, 17, 16))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (22, 0, -6, -7))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (13, 8, 8, -3))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (25, 5, 17, -5))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (16, 10, 6, 32))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (2, 29, 40, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, -3, 35, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-2, 25, -2, 26))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (19, 28, 3, -8))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (19, 14, 17, 37))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (15, -5, 27, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (23, 23, 26, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (13, 1, 30, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (-7, 7, -7, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (2, 4, -4, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (26, 12, 12, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (20, 12, -12, 35))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (22, 10, 12, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (14, -8, 28, 26))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (10, 4, 19, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-3, 2, -2, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (9, 11, 6, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (12, -5, -5, 27))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (23, 25, 31, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (13, -4, -9, -9))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (29, 12, 31, -8))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (10, 23, -4, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (21, 1, 31, 36))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (30, -6, 3, 39))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (17, -8, 11, 39))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (12, 5, -12, 25))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (17, -3, 8, 34))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (13, 15, -1, 19))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (12, -6, 27, 21))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (22, -6, -8, 12))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (12, 0, 5, 40))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (8, -7, 9, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-8, 19, 37, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (5, 24, 31, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (19, -2, -11, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (30, -9, 9, -6))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (3, 6, 3, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (22, 7, 19, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (10, -9, 15, -4))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (21, -7, 39, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (24, 13, 37, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (13, -6, -2, 37))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (1, 18, 39, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (17, -5, 6, 18))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (7, 5, 19, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (24, 15, -2, 34))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (24, 5, 19, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, 3, -5, 22))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (30, -8, 19, -5))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (16, -5, 15, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (7, 24, 9, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (14, 9, 5, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (15, -9, 19, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (23, -2, 2, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-3, 10, 29, 17))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (9, 4, 40, 25))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (30, 2, 0, -2))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (0, 18, 20, 39))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (26, 14, 17, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-7, 9, 5, -12))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (25, 3, 37, 25))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-5, 6, 4, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-1, 13, -7, 8))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (17, 15, 28, -3))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (19, -7, 5, 13))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (23, 9, 34, 7))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (26, 14, 11, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (1, 20, 39, 13))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (1, -6, -2, 36))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-5, 6, 25, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-4, -6, 34, 22))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-1, -8, 6, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-2, -6, 9, 10))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, None)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (21, 7, 1, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-3, 20, 26, 29))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-8, -7, 0, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (20, 11, 20, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-5, 22, 27, 15))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (1, 0, 30, 7))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (18, 17, 5, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (22, 7, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (0, 30, 2, -3))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (15, 29, -10, 8))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-7, -7, 15, 0))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (29, -7, 29, -4))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (22, 5, 39, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (26, 1, 40, -8))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-8, 7, 29, 29))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (21, 17, 26, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-4, 6, 0, 9))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (19, -9, 39, 14))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (30, 11, 13, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (15, -3, 23, 19))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (3, -3, 11, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-7, 12, 26, 14))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-6, -7, 36, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (11, -6, 6, -6))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (16, -3, -3, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (19, 21, 0, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-4, 23, 0, 29))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (10, 9, 31, 27))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (7, 24, 3, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-8, -4, 27, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, None)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-3, 4, -11, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, None)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-7, -3, 5, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (25, 13, -4, 15))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (21, 29, 1, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-5, 10, 11, 24))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (5, -3, 0, -5))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-3, 7, 38, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-2, -4, 13, 38))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-1, 8, 14, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (0, 4, 17, 34))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-4, -1, 28, -6))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (15, 30, 28, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (28, -9, 37, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (20, 16, 35, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-2, 16, -9, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-5, 14, 7, -3))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (21, 12, -4, 11))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, 29, -5, 14))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-6, -9, 19, 12))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (28, 15, 6, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (10, 24, 32, -7))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (12, -4, 0, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (29, 25, 0, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (27, 20, 11, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (18, 5, 21, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (23, 6, 9, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (7, 19, 37, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (24, 0, 35, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (11, 11, -5, 0))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (10, 10, -2, 15))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (21, -2, 14, 21))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (27, 9, -7, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (1, 12, -11, 19))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (14, -1, 18, 31))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-9, 9, -1, 35))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (0, 13, 1, 26))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (8, 10, 30, -11))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (5, 5, 37, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (27, -7, 21, -10))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (8, -3, 27, 38))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (29, 13, 22, 27))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (15, 14, -4, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-4, -9, 10, -4))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-8, -6, 30, 4))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (19, 4, 26, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (11, 17, 25, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (20, 29, 34, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (12, -9, 8, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (24, 13, 19, 0))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-5, 28, 20, 16))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (30, 9, 9, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (9, -8, -4, 34))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (14, 26, -4, 2))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (6, 12, -11, 28))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-6, -3, 33, 6))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-7, 1, 25, 39))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-2, 6, 5, 33))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (17, 9, -3, 17))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (18, 18, 19, -9))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (5, -1, 16, 30))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (3, 5, -12, 3))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (16, 16, 30, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (5, 19, -11, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, None)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (29, 18, 26, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (11, -5, 39, 24))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-6, 3, 2, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (30, 5, 34, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (29, 24, -6, 39))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (27, 3, 28, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (27, 2, -9, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (12, 22, 27, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (5, -4, 1, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-8, 21, 3, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (16, 20, 25, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (1, 22, 10, 15))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (23, -9, 30, 30))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (27, -7, 24, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (14, 2, 24, 38))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-6, 23, 24, 15))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (20, 14, 31, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (13, 19, 24, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (6, 4, -10, -8))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (18, 3, 24, 25))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (16, 11, 14, -6))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (27, -3, 19, 28))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (1, 8, 37, 1))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-5, 5, 19, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (10, 4, -9, 8))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (10, -7, -4, 15))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (10, 30, 28, -1))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-1, 16, -6, 21))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (7, -2, -10, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (12, -3, -5, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (5, 8, -11, 37))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (23, -9, 35, 39))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, None)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (28, -6, 30, -7))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (23, 4, 29, 11))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (19, -4, 1, -5))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (6, -4, -8, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (3, -4, 40, 14))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-3, -7, 33, 27))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (16, -6, -7, 0))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (4, 18, 22, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (13, 3, 16, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (1, 6, 19, 31))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-4, 26, 20, 32))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (19, 7, 31, 27))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (28, 23, 8, 0))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (28, 27, 8, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (11, 26, 25, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (15, 27, 18, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (11, 4, -12, 10))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (12, 24, 2, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (14, 20, 35, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (15, 8, 29, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (17, 7, 31, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, None)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-7, -7, 24, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (0, -6, 33, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, None)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (13, -2, 22, 29))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (12, -1, 17, 18))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (11, 19, -3, 31))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (17, 21, -5, -3))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (29, 0, 7, 23))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-4, 11, 37, 0))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (3, 5, -11, 40))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (20, 4, 5, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (11, -3, 23, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (10, 8, -4, 31))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (26, 10, 36, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-8, -5, 30, 19))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (1, 16, 38, -1))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (7, 14, 33, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (10, -6, 37, 0))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (12, -2, 5, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (1, -5, 27, 37))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-6, 26, 30, 4))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (22, 27, -5, 32))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (17, 16, 30, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (17, -1, 11, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (2, 3, 30, -5))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-8, 13, 11, 3))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, None)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (24, 5, 29, 24))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (14, 7, 40, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (15, 0, 22, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (15, -8, 18, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-8, -4, 33, 26))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (25, 13, 23, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (3, -5, -5, 3))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (28, 24, 1, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (24, 6, 23, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-6, 0, -12, 3))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-8, 9, 23, 36))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (14, 1, -8, -3))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (5, 1, 24, -12))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (9, 18, -3, 13))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (0, -2, 38, 5))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (1, -5, 14, 20))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (5, 12, 26, 30))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (17, 15, 17, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-5, -9, 15, 27))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (11, 2, 35, -1))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (11, -7, 32, 18))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (29, 2, 14, 20))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (0, -6, 6, -5))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-9, 30, -9, 27))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-5, 20, -9, 5))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (29, 26, 12, -3))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-7, 11, -5, 17))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (4, 23, -2, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (26, -6, 15, 23))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (30, -8, 30, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (21, 17, 40, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (25, 17, 8, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (10, -6, 17, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (15, 29, 2, -12))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (9, 0, 27, 21))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (6, 9, -7, 31))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-4, 19, 23, 20))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-5, -3, 15, 22))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (21, -1, 7, 25))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, None)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (4, 29, -4, 17))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (30, 15, 20, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (6, 1, 17, -8))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (6, 17, 18, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (29, 6, -9, -2))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, 22, 3, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (8, -9, -8, 37))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-9, 11, 40, 27))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-3, -9, 17, 36))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-3, 18, 21, 0))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (16, 7, 12, -2))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (10, -7, 24, 12))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (14, 12, 33, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-6, 22, 27, 9))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (26, 12, 14, -10))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-3, 5, 28, 8))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (7, 17, 28, -8))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (1, 8, 15, 30))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (19, 19, -2, 39))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (24, 13, -3, 10))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-9, -7, 4, -2))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (9, -7, -8, 27))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (13, 26, 35, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (11, 18, 32, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (19, 30, -9, -8))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-8, 21, -3, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (24, 12, 18, 17))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, None)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (22, -1, 22, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-7, 4, -5, -1))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (17, -8, -8, 2))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 23, -3, 7))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (7, -8, 25, 20))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, -6, 17, 20))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-9, 20, 7, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-7, -8, 32, -1))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (27, -2, 2, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (13, 18, 23, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (29, 9, -8, -3))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (29, 3, 14, 31))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (1, 2, 20, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (29, 22, -1, -6))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (28, 8, 27, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-3, -3, -11, 5))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (24, 5, 9, 29))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (0, 23, -5, -12))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-9, 17, 38, -8))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-1, -2, 31, 40))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (4, 20, 37, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (17, -2, 2, 19))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 22, 4, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (27, -8, -12, 17))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (27, -1, -3, 8))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-1, 28, -12, 3))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (25, 11, 27, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (22, 15, 0, 29))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (21, 12, 34, 25))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (13, 26, -5, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (28, -5, -5, 15))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (5, -7, 21, 27))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (7, 9, 25, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (25, 2, 28, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-1, -6, 29, -6))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, None)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-9, -1, 8, 7))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (0, -8, 7, 25))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (11, 30, 22, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-1, -1, 1, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (0, 13, 0, 8))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (22, 21, 12, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (12, 29, 3, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 22, 14, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-6, 28, -1, 13))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (6, 27, 12, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (15, -4, 38, 16))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, None)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (17, -1, 27, 33))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (5, -7, 13, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (12, 2, 36, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (8, 2, 19, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (2, -6, 15, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-2, 12, 13, 7))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (27, 4, 37, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (15, 7, -2, 28))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (7, 15, 3, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (7, 7, 6, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (17, 16, 3, -11))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, 4, 11, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (15, 7, 33, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (22, 30, 20, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (29, -7, 32, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (2, 11, 36, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (0, -2, 38, 32))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-5, 12, 6, 1))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (24, -6, 4, 32))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-7, 29, 26, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (10, 28, -8, 28))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-3, 23, -1, 29))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (22, 10, 28, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (26, 20, -1, 21))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-2, 7, 21, 38))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-9, 6, 23, -9))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (4, 2, -8, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (28, 9, 24, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-7, 12, 30, 40))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (9, -9, 29, 10))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-5, 14, 33, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (20, 15, -6, -6))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-1, 6, -7, 15))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (3, 15, 18, 21))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-1, 6, 24, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (7, 9, 29, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (22, 21, 6, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-8, 2, 6, 29))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (24, 5, 24, -7))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-3, 10, -4, 16))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (1, 5, -3, 10))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-1, 27, -8, 33))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (22, 14, 19, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (12, -2, 34, 17))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-2, 24, 40, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (10, 9, 21, 12))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (11, 22, -4, 33))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (8, 15, -7, 40))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (2, -1, 17, -3))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, None)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (18, 18, -10, 14))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-9, 3, -2, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (19, 17, 4, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (5, 5, 25, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (23, 7, 17, 29))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (0, 1, 15, 4))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (19, 26, 10, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (30, 16, 37, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-8, 6, 24, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (7, 26, 15, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-7, -8, 34, 12))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (3, 29, 16, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 11, -6, 16))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (10, 7, 2, 17))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (27, -4, -7, 27))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (18, 14, 20, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (30, 2, -1, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (2, -4, 12, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (22, 2, 33, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (3, 27, 40, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-5, 8, 35, 24))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-3, 3, -11, 31))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (27, 21, 24, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (29, -7, 18, -10))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (21, -5, 40, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (2, 8, 32, 26))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (15, 6, 0, -8))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-8, -6, -5, -3))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (8, 0, 16, 11))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-7, 8, -9, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-8, 24, 30, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-3, 15, 30, -10))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (0, 22, 40, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, 4, 17, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (13, 24, 39, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (7, 14, 20, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (0, 2, 1, 0))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-6, 14, 40, 22))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (24, 21, 39, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (18, -1, 23, -8))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-2, -2, -2, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (29, 20, 23, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (24, 10, 15, 16))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (7, 25, 18, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (15, 6, 38, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (17, 12, 6, 8))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (29, 26, 31, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (4, 1, 38, 13))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (20, -8, 37, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (15, 2, -6, 9))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-9, -3, 17, 6))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-4, -4, 15, 27))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-3, 13, 40, -12))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (13, -6, 23, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (1, 15, 28, 13))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (30, 25, 36, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-8, 20, 33, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (15, 7, 23, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-2, 9, 38, 11))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (14, 27, 8, 0))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (2, 4, 0, 36))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-9, 16, 38, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (5, -6, 2, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (29, 24, -5, 3))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (23, 18, 17, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-7, 14, -7, 21))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, -5, -6, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (7, 5, -5, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-7, 11, -9, 13))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (-8, -2, 5, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (8, -1, -4, 32))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (14, 3, 40, 12))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (21, -2, -7, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-3, 23, -7, 24))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (24, -6, 11, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (13, 6, 36, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (22, 24, -5, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-7, 18, 33, -12))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (7, 23, 36, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (9, 29, -3, -2))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (0, -2, -7, 16))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (11, 19, -9, 10))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-3, 22, 28, 13))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (6, 12, -4, -12))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (29, 19, -10, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (18, 7, 30, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (8, 19, -4, 9))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-3, 2, 20, 25))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (10, 8, -4, 17))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (4, 19, 30, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-2, -3, 8, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (10, 0, 32, -9))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (21, 23, 19, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-5, 20, 0, 1))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (3, 23, -7, -2))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (8, 21, 14, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (17, -8, -7, -5))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-9, 27, 38, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (0, 17, 24, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (4, 2, 9, 18))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (30, -2, 24, 37))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-1, 29, 0, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (14, 6, 32, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (1, -8, 16, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, None)
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (21, 28, 11, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (22, 7, 10, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (1, 27, 5, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-2, 22, 3, 32))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (25, -8, 12, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (23, 7, -5, 20))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (26, 25, -1, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (22, 27, 32, -12))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (15, 12, 39, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (8, 0, 5, 24))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-8, 7, 36, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (19, 10, 28, -10))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (27, 19, -8, -12))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-9, -3, 31, 22))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (25, 2, 24, 24))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-3, 22, 15, -9))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (9, -7, 22, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (3, -5, 24, -1))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (6, 0, 26, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (3, -4, -8, 26))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (30, 14, 8, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (-8, -8, 15, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (16, -8, -3, 19))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (21, 17, -7, 0))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (1, 6, 40, 40))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-6, -3, 17, 16))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (17, 8, 30, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (18, 19, 15, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (24, 29, 16, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 1, 0, 32))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (18, 26, 27, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (29, 12, 38, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-1, 28, -4, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (15, 21, 30, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (25, 10, -9, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-6, 1, 19, 34))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-7, -8, 20, -2))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (7, 26, 27, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-2, 26, 34, 32))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (2, 9, 4, -4))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (10, 10, -4, 28))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (30, 26, 22, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-6, 20, 27, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (24, 3, 38, 25))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (20, 22, 30, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (20, 13, 37, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-7, 11, 23, 0))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-3, 16, 22, 37))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, None)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (8, -5, 21, 30))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (18, 12, 39, 17))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (12, -7, 22, -8))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-7, 29, 31, 14))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (2, 23, 6, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, None)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-5, 30, -2, 7))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (10, 29, -1, 5))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (23, 19, 24, -5))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (12, 25, 35, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (24, 21, 40, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (9, 27, 14, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (29, 29, 15, -12))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (20, -9, 8, -6))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (30, -4, -1, 24))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (28, 0, 8, -1))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (28, 0, 18, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (13, 14, -10, 9))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (16, 19, 11, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (2, 13, 19, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, 28, -1, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (28, 19, 10, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (2, 0, -12, -11))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (20, 22, 14, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (30, 29, 19, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-1, 3, 35, 2))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (5, 24, -6, 7))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (8, 11, 37, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-9, 11, -11, -7))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-6, 20, 6, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (23, 21, 25, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-9, -8, 35, -10))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-4, 3, 8, 28))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-6, -5, 2, 40))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-7, 11, 21, -3))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (10, 22, 12, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (9, 10, 17, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, None)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (13, 6, 15, -5))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (21, 0, 3, 14))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (28, -2, -6, -10))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (18, 0, 19, 15))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-3, 0, -12, 16))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (24, 22, -12, -4))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (12, 12, 17, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (30, 24, 8, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-1, 9, -7, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (3, -9, 29, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (11, 26, -7, 13))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (24, -8, -8, -3))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-9, 25, 18, 19))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (19, 18, 27, -8))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-2, 14, 39, 34))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (16, 27, -3, -12))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (24, 2, 24, -12))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (6, 7, 17, 0))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (11, -9, 32, 35))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (20, 7, -7, 7))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (27, 22, 36, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-7, 24, 22, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (12, 10, 30, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (1, 6, -8, 13))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, None)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (7, 7, 27, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (25, 21, -1, 14))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (14, 7, 10, 0))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (22, 9, 32, 29))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (7, 8, 20, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (23, 7, 22, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (2, 11, 6, 0))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (14, 4, 28, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (24, 6, 39, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-4, -6, 20, 39))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-1, 5, 21, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (20, 13, 21, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-5, 0, -10, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (9, -9, 33, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (29, 25, 19, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (14, -6, 37, 7))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (10, 24, 22, -7))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (9, 9, -2, 32))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (26, 19, 22, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-2, 0, 39, 10))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-6, 26, 29, 27))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (5, 14, 3, -2))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, None)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (29, -3, 3, 4))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (15, 29, 16, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (28, 12, -10, 8))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (17, 8, 31, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (0, 22, 2, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (16, -5, 28, 10))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (19, 14, 32, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (14, 11, 0, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (19, 19, 4, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (13, -6, 9, 18))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-7, 5, 24, 15))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (17, 25, 0, 24))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (27, 14, 22, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (2, -7, 38, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, 26, 32, -9))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-6, 23, 2, -11))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-7, 18, 17, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (5, 13, -7, 14))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (17, 28, 0, 34))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (22, 23, 40, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-8, 8, 7, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (24, 21, -3, 19))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-7, 4, 21, -7))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-5, 28, -5, 40))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (4, 23, 5, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (27, 22, -6, 6))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (24, 3, 39, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (3, 11, 8, 29))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-7, -1, 17, -7))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (12, 7, -4, 25))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-3, -9, -8, 37))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-3, 5, -1, -11))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-7, 24, -4, 25))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-2, 0, 2, 24))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (13, 11, 37, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (18, 5, 28, 8))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (21, -6, 35, 25))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (6, 6, 18, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (4, 11, 12, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (3, 26, -1, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (29, 4, 38, 7))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-7, 28, 13, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (15, -3, -8, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (11, 29, 1, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (7, 23, 37, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (20, -9, 8, -8))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (28, 12, -5, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-1, 6, 23, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (18, -9, 13, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-3, 15, 28, -6))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (3, 26, 18, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (1, 17, 15, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-2, -8, 22, 8))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (13, -3, 9, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (23, 17, -5, 32))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (25, 20, -7, 13))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (7, 4, 24, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-7, -5, -10, 27))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (7, -9, 2, 13))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (9, 26, 0, 15))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (26, -1, 29, 3))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (0, 18, 3, 37))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (14, 5, -2, 10))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (21, 22, 24, -8))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-7, 23, 32, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (0, 30, 21, -10))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (30, 2, 33, -2))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (13, 13, 2, 29))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (12, 30, 7, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (24, 6, 0, 27))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-3, 16, 30, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, -2, 24, 33))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (24, 1, 13, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-3, 14, 19, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (6, 3, 8, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-8, 11, 4, 0))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (30, 21, -6, -9))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-3, -7, 30, 24))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (11, 0, 35, 4))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (29, 1, -9, -12))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (26, -9, 34, 39))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (13, -7, 13, -11))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (25, -8, 25, -5))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (14, 25, 0, 6))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (6, 26, 29, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-9, 30, 23, 15))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (28, 16, 0, 30))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (27, 20, 31, -10))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (25, -9, 33, -12))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (8, 22, 28, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-1, 27, 21, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-5, -2, -8, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (25, 6, 24, -10))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (15, 11, 14, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (18, 1, 31, 33))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (9, -9, 29, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-2, 11, 35, 11))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (25, -6, -1, 13))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (30, -8, 22, 40))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (22, 17, -10, 10))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (16, -9, -1, 21))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (17, -7, 7, 39))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (2, 28, 4, 4))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-3, 10, -8, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (12, 23, 7, -4))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, None)
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (19, 29, -2, 37))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (27, 1, 38, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (7, 26, 28, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (26, 30, 12, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (11, 1, -11, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (26, 4, 27, 18))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (27, 30, 15, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (8, 4, -7, 37))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (13, 25, -11, -6))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (26, 0, -10, 7))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (-4, -7, 14, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (4, 26, 26, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (14, -1, 28, 5))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-4, -7, 32, 24))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-1, 23, -11, 4))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (13, 6, -3, 20))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (14, 22, 30, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, None)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-7, -9, 12, 39))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (2, 0, 40, 33))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (5, 11, 24, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-8, 27, -10, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, None)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-8, 27, 21, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (28, 14, 34, -10))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (20, 18, -3, 39))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (0, -3, 22, -9))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (28, 12, 10, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (20, -8, 19, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (3, 12, 21, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-4, 16, 2, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (8, 1, 20, -11))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (18, 2, 4, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (6, 1, 8, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (11, 3, 10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (3, 27, -6, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (1, -9, -11, 21))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (5, 24, -12, -10))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (1, 3, 35, 31))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (29, 11, 36, 40))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (8, -9, 31, -1))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (28, 19, 0, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (-7, 2, 13, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (24, -3, 39, 18))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (21, 26, 32, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-7, 14, -7, 4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-4, 28, 7, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (16, 25, 10, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (23, 26, -6, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (15, -9, 11, -3))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (5, 28, 29, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (12, 2, 32, 35))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (20, 19, 0, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (6, 14, 12, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (12, -8, 36, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (30, 2, -6, 28))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (18, 9, 35, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (1, -8, 33, 16))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-8, 17, 16, 28))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (0, 6, 20, 34))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-9, 27, 10, 12))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-9, 27, -1, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (6, 12, 39, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (14, 15, 38, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (26, 27, 11, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (27, -5, 7, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (24, 8, 3, -3))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (18, 29, 7, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (19, 6, 9, -3))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (18, 14, 4, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (30, 14, 14, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (9, 20, 2, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (17, 14, 27, -9))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (1, 28, 5, 2))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-6, -1, 13, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (25, 0, 19, 30))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (7, 23, 36, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (16, 14, 20, 17))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (20, -5, 6, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (29, 28, -8, 20))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (22, -8, 34, 23))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (17, 30, 37, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (13, 17, 19, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-9, 4, -2, 0))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (22, 6, 23, 39))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (26, 18, 40, 33))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (21, 17, 3, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (5, 12, 40, 15))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (1, 8, 8, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (2, 27, 9, 11))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (18, -9, -6, -2))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (4, -5, 28, -12))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (8, 9, -3, 28))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (7, 8, 35, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (13, -7, 16, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (2, 25, 1, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (26, -6, -7, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (30, -5, 30, 35))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (22, 18, 26, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (16, -3, -9, 34))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (30, -3, 2, -10))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (19, 12, 14, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (20, 8, -1, 16))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (14, 13, 5, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-4, 12, 21, -7))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (12, -8, 3, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, None)
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-7, 26, 2, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (22, -3, 28, -1))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (28, 0, 14, 17))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-5, 24, 24, 0))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (24, -3, 29, 30))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (3, -8, 28, 28))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (29, 12, 15, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (14, 15, 20, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (2, -7, 26, 14))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (13, 28, 4, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (6, 26, 19, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-7, 0, -5, 28))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-9, 28, 39, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (27, 28, 19, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (18, 29, -9, 27))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (19, 1, 38, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-9, 20, 16, 2))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (22, 8, -6, 4))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, None)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-1, 22, 9, -6))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (26, 23, -7, 36))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (23, 17, 38, -1))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (20, 25, -6, 11))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (2, 12, -3, 21))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (14, 5, 10, 12))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (17, 20, 38, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (29, -1, 27, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (11, -5, 36, 28))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (11, 8, 34, 31))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (28, -2, -6, 15))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (0, 16, 7, -9))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (1, 21, 15, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (29, 22, 31, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-3, 26, 0, 30))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-2, -7, 27, -1))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-2, 3, 5, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (18, 6, 29, 28))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-7, 29, 24, 39))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (2, -6, -6, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (8, 7, -5, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (1, 4, 34, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-5, 10, 28, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (10, 5, 34, 24))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (4, 19, 2, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (24, -7, -8, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (25, 19, 16, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (21, 18, 15, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (5, 4, 39, -6))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (26, 12, 40, 25))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (25, -6, -10, 35))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, 5, 40, 39))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, None)
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-1, 4, 26, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (3, 27, 22, 16))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (19, 9, 16, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (19, 13, -7, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (10, -8, 18, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (25, 27, -9, -11))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (29, -7, 2, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-4, 27, -11, 3))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-2, 16, -4, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (1, -5, 4, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (21, 8, -1, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (9, 27, 35, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (18, 19, 22, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (0, -7, 17, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (30, 4, 26, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-1, 8, 33, 27))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (18, 9, -6, -2))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (27, 8, 26, 39))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (21, 5, -1, 33))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (2, -6, 30, 22))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (29, 30, 38, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (24, 7, 12, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (20, 26, 34, -5))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-6, -4, 33, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (0, -4, 6, 2))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (6, 8, 30, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (3, 19, 7, -3))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-8, -7, 8, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (13, -8, -5, 11))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (24, 10, 17, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (10, 22, -12, 18))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (7, 5, 33, 20))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-7, 20, 14, 34))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (14, 0, 24, 22))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, None)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-9, -9, 38, 7))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (8, 13, 15, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 27, 21, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (27, -8, 28, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (21, 17, 20, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (14, 23, 8, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-2, 19, 28, 16))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (9, -2, -2, 25))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (2, 10, -9, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (16, 28, -11, 12))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-5, 21, 0, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (29, 30, 10, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 16, 8, 3))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (12, 7, -8, 1))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (28, 20, -8, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-1, 6, 10, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (4, 5, -2, 10))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-9, 5, -2, 21))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (6, -3, -2, 29))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-6, 25, 11, -10))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-1, 3, 12, 17))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (23, 21, -4, -6))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (7, -7, 8, -10))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (22, 21, 36, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (25, 4, 30, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (25, 5, -8, -9))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-5, 26, -4, -8))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-7, 16, 32, 30))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (22, 16, -8, -6))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (0, -8, -1, 24))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-1, 7, -2, -1))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (14, -9, 16, 25))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (9, 25, 22, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-5, -2, 4, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-2, 17, 23, 7))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (1, 3, 10, -4))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (23, 13, 17, 15))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (0, -7, 32, -9))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (24, 5, -10, 38))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (19, 24, 22, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (18, 22, 6, -6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (18, 24, 14, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-1, 22, 34, 40))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (5, -6, -10, 23))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (6, 20, 28, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (19, 29, -2, 16))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-9, 26, -10, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-2, -9, 11, 5))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (9, -7, -5, 21))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (10, 0, 33, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (15, 9, 26, -2))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (18, 30, 3, -5))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (7, -8, -1, -11))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, None)
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (24, 8, 39, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (26, 19, 18, -6))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-2, 12, 36, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (13, -7, 21, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (17, 0, 4, 36))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (20, 22, 4, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (7, 27, 5, -10))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (16, 7, -2, 12))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (19, 1, -8, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (17, 19, -5, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (10, 20, 27, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (14, 19, 32, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (0, 2, 15, 24))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (18, 8, 21, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-1, 4, 36, 24))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (17, 28, 40, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (16, 0, 21, 33))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-5, -4, 18, -11))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, None)
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (21, -3, 11, 16))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (26, 8, 28, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (3, 3, 29, 27))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (9, 4, 24, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-7, 22, 26, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (3, 6, 9, 25))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (23, 26, 23, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (27, 10, 32, 24))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (22, -2, 32, 15))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (7, 29, 11, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (25, 27, 15, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-9, -4, 3, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-3, 3, 6, 26))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (0, 18, 25, 35))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (28, 13, 37, 38))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-2, 24, 23, 24))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (27, -3, 15, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-9, 24, 8, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (12, 23, 10, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (4, -2, 2, 21))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (24, 9, 10, 11))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (23, 17, -2, 31))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (9, 24, -9, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-1, 15, 28, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (3, -4, 15, 10))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (30, 0, -12, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (13, 3, 40, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (8, 7, 10, -7))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (3, -6, 15, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-3, 16, 19, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (5, 16, -3, 1))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (17, 8, 5, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (14, 21, 4, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (29, 16, 3, -3))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-6, 28, 38, 9))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (10, 0, 21, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (11, 17, 3, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (30, 14, 24, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (0, 24, 31, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (17, 20, 27, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (14, 6, 6, 8))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (19, 24, 1, -5))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (23, 30, -10, 40))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (4, 9, 17, 5))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (3, 26, 15, 10))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (14, 17, 2, -3))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (29, 29, 1, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-6, 15, 40, 10))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-9, 20, -2, 19))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (9, 26, 40, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (-7, 22, -3, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (7, 6, -4, 7))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (12, -7, -12, 26))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (30, -7, 33, 24))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (24, 20, -3, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (18, 2, -7, 1))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (10, 30, -1, 38))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (26, 5, 10, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (0, -7, 3, 13))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (13, 7, 39, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (1, -8, 26, 28))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (18, 12, 8, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (27, 22, 12, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (20, -4, 17, 28))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (30, 23, 34, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (20, 8, 36, 7))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (0, 8, 4, 6))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-6, 19, -10, -9))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (29, 22, 12, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (1, 29, 24, 30))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-6, 23, 30, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-6, 26, 5, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (18, 3, 10, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (19, 14, 1, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (1, 1, -5, 34))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (16, 6, 11, 10))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (8, 7, 29, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (22, 1, 15, 29))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (-8, 6, 40, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (25, 16, -7, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (21, 26, 37, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-8, 18, 38, -9))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-1, 17, 28, 27))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (26, 16, 14, -4))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-5, 15, 38, 18))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (5, 12, -5, -5))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-4, 0, 38, 7))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (5, 10, 25, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (26, -6, -2, 14))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (8, 0, 8, -3))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (15, 24, -3, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-4, 4, 8, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (26, 10, 23, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (3, 9, 3, 12))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-2, -4, -2, -1))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (30, -5, 0, 24))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (21, -7, 26, 0))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (24, 15, 32, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (12, 12, -11, 12))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (2, 29, 5, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (13, -6, -5, 30))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (11, 17, 38, -11))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (27, 16, 27, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-1, 12, -7, 20))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (11, 19, 39, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (8, 14, 25, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (24, 1, 26, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-4, 11, 33, -10))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-8, 13, 22, 34))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-6, 28, 18, 15))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (9, -7, -12, 11))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (17, 18, -11, -9))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (5, 29, 35, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (11, 20, 3, -7))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-9, 20, 14, 31))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (10, 24, 0, 11))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (14, -6, 0, 26))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (1, 7, 31, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-6, 8, 36, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (10, -4, 12, 22))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (9, 6, 21, -6))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (7, 9, -1, -12))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-4, 20, 1, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (4, -5, 1, 21))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-2, 9, 28, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (26, 30, -5, -7))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (3, 23, 2, 24))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (6, 20, 22, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 24, 2, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (12, 12, 0, 32))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (18, -8, 7, -8))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (9, -2, 17, 0))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (8, 22, 17, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (4, 29, -9, -5))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (22, 16, 36, -12))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (9, 2, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-4, 16, 26, 4))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (25, 5, 20, 40))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (9, 27, -8, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (23, 21, 14, -6))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-7, 27, 38, 24))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-8, -6, -12, 23))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (30, -9, 19, 17))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (5, 14, 10, -3))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-9, 20, -12, 36))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (25, -8, 17, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (17, 10, 7, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (4, 18, -6, -11))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, None)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (24, -7, 30, 13))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-5, 22, 29, -7))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-4, -1, 3, -1))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (6, 11, 22, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (27, 9, 23, 8))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-4, 2, 24, 11))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-3, 28, 17, -1))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (22, 11, 19, 35))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-2, 0, 1, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (22, -4, -2, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (12, 13, 27, -4))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (9, 28, -5, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (13, 25, 1, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (21, 9, 6, -5))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (10, 21, 10, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (7, 2, -8, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (10, 2, 11, -2))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (26, 19, 11, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (29, 4, 6, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, None)
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-4, 17, 13, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (4, 13, -2, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, 28, 8, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (3, 20, 22, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (9, 1, -8, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-3, 20, 21, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 23, -6, 20))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (20, -7, 15, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-3, -4, 14, -10))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-4, 15, 18, 1))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (13, 11, 6, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (20, -9, 34, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-4, 13, 31, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (13, 28, -1, 38))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (13, -8, -12, 40))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (7, 15, -5, -5))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (4, -7, -8, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (0, -3, 29, 11))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (7, 14, 2, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (1, 15, -10, 32))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (8, 20, 1, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-7, -8, 19, 24))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (1, -7, -11, 24))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (29, 4, 32, 19))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (28, 22, -3, 9))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (18, -8, 4, 21))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (17, 6, 5, 7))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (30, 11, 34, -2))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-5, 30, 26, 32))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (16, 14, 7, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (21, 30, 24, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (4, -5, 9, 9))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (26, 26, 15, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (9, -5, 8, 20))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (19, 11, -9, 19))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (20, 18, 20, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (13, 4, 6, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (17, 22, -4, 1))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-1, -5, 37, 2))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (7, 12, 5, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-4, 17, 3, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (23, -2, 16, 19))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (28, 12, -11, 27))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-3, 10, 19, 1))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (15, 18, 6, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (23, 15, 20, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (16, 5, 14, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (11, -7, -9, 15))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-9, -4, 13, 17))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (30, 19, 17, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-1, -9, 36, 32))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (17, -4, -2, 32))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (10, -2, 15, 7))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (12, 9, 26, -9))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-4, 10, 34, 22))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (0, -3, 35, 23))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (17, 24, -9, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (4, 29, 23, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (13, 21, 5, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (25, 1, 16, 17))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (29, 20, 23, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-5, 8, 2, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (24, 20, 33, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (12, 9, 28, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (14, 19, 24, -4))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (25, 4, 34, 29))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (20, -2, 11, 29))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (1, 4, -7, 27))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (14, 9, 28, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (20, -3, 17, -8))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (24, -7, 6, 13))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (11, -6, 1, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-2, 24, 8, -8))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-3, 14, -3, 33))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (7, 30, 4, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (1, 5, 14, 36))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (0, -1, 19, 30))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (9, 7, -9, 17))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (21, -2, -3, 35))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (2, 14, 9, 5))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (5, -4, -2, -5))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (15, 5, 26, 22))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-5, 13, 5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (29, -2, 40, 15))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-6, 17, -2, 18))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (2, -5, 16, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (14, 23, 19, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (0, 29, 6, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-6, -2, 0, 28))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (24, 11, -3, 1))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-5, 16, 38, 34))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (11, 15, 7, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (9, 7, -8, 35))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (23, 10, -2, 3))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-3, 11, 24, 36))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-9, 19, 40, 40))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (22, 13, 32, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (13, 7, 37, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-7, 23, -6, 6))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (28, 1, 2, 13))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (6, 4, 18, 12))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, None)
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, None)
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (0, 2, 11, 30))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (29, 24, 39, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (15, 2, 14, -7))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (9, 4, 40, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-3, 6, 11, 24))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-5, 11, 27, 28))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (28, 15, 29, -8))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (26, 28, 31, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (27, -6, 7, 10))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (12, 26, 6, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (30, -3, 29, 23))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (28, 24, 12, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (27, 21, 3, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (20, -7, -2, 10))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (27, 1, 6, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (25, -4, -9, 40))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (14, -4, 12, 28))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (15, 7, -10, 14))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-1, 5, 13, -1))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (12, 13, 39, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-8, 15, 19, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (27, -2, 27, -9))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (7, 15, 30, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-9, 2, 25, 17))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, 16, 25, -8))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (28, 28, 36, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (24, 14, -12, 28))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-7, 2, 35, 35))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-5, 8, -2, 2))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (17, 17, -7, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (19, -5, -2, -8))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (17, 18, 20, -4))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (3, 1, 0, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (3, 16, 16, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (6, 26, -4, 31))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-4, -5, -11, 32))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (20, -6, 4, 33))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (26, -5, 7, 27))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-2, 13, 35, 20))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (10, -6, -9, -10))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (21, -2, 3, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (12, 20, 40, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, None)
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (25, 27, 36, -1))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (18, -5, 37, -6))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (0, -2, 3, -6))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (3, -7, -1, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (14, -1, 3, -1))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-7, 18, -3, -3))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (26, 2, 29, -10))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (2, 8, 32, 31))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (8, 26, 8, -2))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (12, 11, 1, 38))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (12, 21, 7, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (17, -3, 13, 29))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-6, 14, 27, -3))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-8, 2, 19, 19))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (2, 14, 15, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, None)
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (19, 11, 32, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, None)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (8, 22, 7, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-6, -5, 3, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (28, 5, 5, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (24, 21, 24, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (7, 16, -9, 30))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (10, -5, 40, 23))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (25, 26, 27, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-7, 18, 1, -7))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (25, 6, 22, 11))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (6, 27, 24, -8))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (11, 13, 28, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (18, 28, 9, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (8, -7, -7, 20))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (7, 9, 31, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (15, 7, -1, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (24, 20, 32, -11))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (0, -8, 9, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (5, 3, -6, 21))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (3, 14, 29, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (7, 25, 13, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (17, 19, 8, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, 5, 15, 0))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 18, 30, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-6, 19, 19, 13))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, None)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (15, 20, 37, -3))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (3, 0, 2, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (10, -7, 30, -8))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (30, 29, 2, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (4, 13, 4, 35))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-1, 7, 1, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (30, -2, 14, 16))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-1, 10, 1, 11))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (4, 25, 7, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (16, 19, 20, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (18, 27, 34, -12))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (30, -8, 27, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-3, 22, 9, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-4, -9, 8, 11))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (22, 5, -11, -12))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (11, 15, -10, 8))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (12, 20, -1, -6))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (22, 8, 8, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (24, 28, 14, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (19, 26, -2, 11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (16, -8, -2, 23))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-4, 7, 30, 38))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (9, 25, 25, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (27, -6, 19, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (29, 16, 10, 38))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (10, -2, 21, -12))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-7, 26, 13, -8))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (16, 26, 26, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (4, 15, -1, -7))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (15, 28, 29, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (20, 17, 28, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-4, -7, 33, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (1, 28, 28, -2))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-3, 0, 24, 1))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (29, -7, 21, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (24, 14, 38, -11))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (21, 22, 7, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-2, 21, 37, -5))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (17, 8, -5, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (30, 9, 40, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (15, 0, 13, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (3, 14, -12, 7))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-1, 14, 15, -3))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (23, -7, 39, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (15, 28, 39, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (27, 27, 31, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (6, 8, 5, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-5, 0, 30, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (8, 8, 25, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (6, -6, 39, 13))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (15, -9, 0, -5))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (9, 30, -2, 16))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-2, 14, 15, 2))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (26, 24, -7, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (13, -5, 34, 9))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-3, 29, 17, 35))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (17, 4, 11, 24))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (6, -6, 38, 12))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (8, -5, 18, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (1, 21, 8, 8))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (1, 10, 13, 35))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-4, 15, 38, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-6, 21, -10, -8))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-2, 7, 7, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-2, 18, 18, 23))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (5, 24, 19, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (25, 13, -1, 24))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-6, -9, 21, 38))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-1, 30, 16, 3))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (25, -6, 18, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-5, 5, 5, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (10, 6, 1, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (14, 28, -8, 6))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, None)
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-1, 5, -8, 9))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-8, 0, -12, 4))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (25, 28, 25, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-7, 22, 7, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-8, 16, 5, -6))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (13, 14, 38, 0))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (17, 1, 33, 23))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, 27, 5, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (24, 3, -10, -9))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (6, 24, -5, 33))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-1, 27, 13, 18))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-4, -4, -12, 33))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (18, 4, 10, -11))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (27, 16, 7, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-3, -6, 26, -9))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (17, -6, 35, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (19, 21, 0, 12))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (24, -9, -7, 22))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (26, 18, 34, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (19, 29, 37, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, None)
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (20, -9, 31, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (30, 29, 40, -9))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (6, 27, 1, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (27, 14, 23, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (30, 6, 18, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (27, 21, 1, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (10, 19, -2, 21))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (28, 20, 7, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-1, 5, -7, 14))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, None)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (16, -8, 39, -6))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (28, 12, -12, -12))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (16, 30, -10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-8, 19, 35, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (3, 6, 32, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (-8, -9, 6, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (30, 1, -1, 13))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (18, 7, 34, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (22, 14, -8, 33))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (23, -4, 27, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-2, 22, 6, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (18, 13, 36, -8))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-3, 23, 37, -4))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (1, 5, 40, 15))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (22, -2, -5, 35))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-2, 15, 36, 27))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (21, 0, -3, 40))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (2, 0, 22, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, None)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (5, 24, 20, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-1, 22, 29, 40))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (7, -3, 23, -8))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (25, 1, -10, 17))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (9, 16, 37, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (13, 1, 5, 5))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-8, -8, 26, -9))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-9, 8, 18, 24))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (23, 1, 14, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (17, 14, 27, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (11, -7, 10, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (26, 20, 5, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-8, 1, -4, 0))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (8, 4, 15, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-3, 4, 23, -9))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (27, -8, 30, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (24, 25, -5, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-5, 26, -8, 9))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (20, 23, 37, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (2, 28, 40, 21))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-8, 1, -3, 3))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (25, 18, 20, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (22, 5, 14, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (4, 2, 35, 9))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (26, -9, 9, -4))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (2, 5, 11, 35))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (8, -2, 17, 10))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-9, 4, 17, -7))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (6, 13, 1, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (24, 29, 27, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (27, -5, 5, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (5, 2, 28, -6))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (26, -9, 11, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (26, 5, 33, -8))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, None)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (20, 21, -10, 38))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-3, 15, 24, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (9, 3, 22, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (6, 23, 40, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (27, 13, 4, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (30, 9, -8, -10))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (15, 5, 13, 23))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (10, 19, 16, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (15, 24, 7, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-8, 9, 22, -1))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (4, -2, 4, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (16, 26, 18, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (30, 5, -11, -12))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-7, 3, 4, 27))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-9, 16, 39, 9))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (18, -9, -7, 23))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (7, 10, -4, 26))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (24, -9, 11, 16))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, 14, 31, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (20, 20, 29, -2))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-2, 21, -2, 6))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (8, 16, -4, -3))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (1, 4, 39, -10))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (20, 13, 27, -1))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (9, 9, 9, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-6, 26, 21, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (17, 4, 2, -8))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (3, 9, 38, 13))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (11, 1, 18, 22))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-1, 15, 4, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-9, 7, 32, 27))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (17, 16, 34, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (7, 30, 12, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (7, 25, -5, 8))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, None)
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (15, -7, 31, 39))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-4, 26, 25, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (3, 8, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-9, 2, 32, 29))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (30, 19, 37, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, None)
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (1, 20, -12, 34))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (16, -8, 23, 25))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-6, 24, 7, 7))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (20, -1, 31, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (30, 24, 2, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (27, -2, -9, 30))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (26, 8, 5, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (2, 16, -6, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (2, -2, 5, 15))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (15, 15, 6, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (11, 27, -5, -3))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (19, -9, -5, 29))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, None)
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (29, 5, 19, 35))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (22, -6, 17, -12))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-4, 2, 17, 23))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (30, 11, 19, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (17, 28, 29, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (26, 29, 17, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (27, 30, 38, -1))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (16, 14, 34, -12))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (15, 1, 28, 35))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (12, 2, -2, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (11, 7, 19, 33))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (10, 18, 12, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (14, -1, 20, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (-1, 22, 12, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (18, 20, 14, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-6, -4, 31, 4))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (3, 10, -2, -10))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-8, -1, -3, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (2, -1, 27, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (7, 4, -3, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-4, 19, 39, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-3, -1, 1, -5))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (27, -5, -1, -3))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (6, 25, 30, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (6, 6, -8, 0))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (19, -9, 18, 21))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-4, -3, 34, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-1, 22, 18, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (10, 16, 39, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-1, 20, -8, 25))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-3, 28, 15, -8))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (3, 21, 37, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (20, 0, 7, -5))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (29, 28, 18, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (28, 27, -1, 32))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-5, 11, 2, -6))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (10, 13, 11, -10))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-4, 4, -4, 9))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, None)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (27, 15, 29, 38))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (0, 13, -4, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-4, 14, 31, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (4, 11, 26, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (12, 11, 7, 40))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-3, 26, -1, 6))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-4, 16, 35, 19))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (7, -1, 5, 18))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (6, 2, -5, 40))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-4, 5, 21, 24))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (13, 18, -9, -5))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (20, -6, -1, 0))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (1, 6, 15, -11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (28, 18, 0, -3))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (19, 19, -8, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (9, 4, 16, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (25, 27, -4, 31))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (11, 6, 25, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, None)
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (28, -1, 6, 14))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (-9, 11, 14, -5))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-2, 2, 36, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (17, 3, 24, 19))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (7, -1, 31, 17))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, None)
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (23, 3, 6, 16))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (10, -2, 11, 0))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, None)
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (5, 7, 37, 40))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (23, 13, -2, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (25, 16, 35, -12))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-6, 29, 10, 31))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (9, 3, 15, 36))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (26, 17, 9, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (3, 18, 37, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (26, -3, -3, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (15, 10, -11, 26))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (5, 30, 26, 4))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (7, 20, 37, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (5, 27, -9, 5))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (12, 16, 33, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (21, 29, 12, -10))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (5, 5, 29, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (27, 9, 12, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, 25, -6, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (23, 23, 14, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (9, 23, -10, 1))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (4, -4, 38, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (22, 22, 38, -6))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (0, 14, 7, 13))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (12, 26, 30, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-2, 4, 30, -9))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (6, 14, -12, 12))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (4, -4, 23, 28))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (24, 6, 20, 20))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (22, 24, 32, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (11, 28, -1, 23))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (13, 13, 8, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (27, 11, 2, -6))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (1, 30, 6, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (11, 18, 29, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (21, 12, 4, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (22, 19, 11, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (6, 29, 36, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (7, 21, 0, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (18, 11, -10, 10))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (25, 16, 28, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (6, 19, 3, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (28, 30, 23, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-5, 28, 15, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (7, -6, -4, 38))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, 14, 27, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (19, 13, 38, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (20, 21, 0, 33))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (9, 28, -2, -9))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (29, 22, 40, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (20, -3, 25, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (22, 8, 14, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, None)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (8, 12, 16, 29))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-2, -4, -4, 35))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (29, 30, 20, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-5, 22, 3, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-4, 13, 23, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (1, -9, 24, -9))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (12, 3, 9, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (7, 12, 9, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (3, 9, 38, 0))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (1, 25, 16, -10))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (-5, -3, 21, 34))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (4, 3, 5, 1))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (26, 16, 38, -9))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-5, 17, 16, 8))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (10, 30, -8, 35))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (0, 11, 15, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (-8, 26, 15, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-6, 10, 14, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (19, -8, 33, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (6, 11, 2, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (26, 22, 27, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (17, 7, 28, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (15, 12, 6, -8))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (3, 11, 27, 31))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-2, 18, -11, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (19, 12, -9, 2))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-6, 12, 38, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-8, 5, -1, 12))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (22, 1, -12, 17))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (26, 20, -10, 28))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, None)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (9, 28, 14, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-5, 24, 31, 16))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (26, -9, 37, -9))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-2, -4, 36, -6))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (26, 24, 13, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, -3, 15, 15))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (2, 14, 11, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (5, 3, 4, 27))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (27, 16, -4, 10))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, None)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-2, 2, 27, 4))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (26, 12, 25, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (8, -1, 3, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (12, 26, 16, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (10, 13, 31, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (21, 8, -3, -8))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (17, -6, 16, 16))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (0, 28, 2, 37))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (21, 25, 34, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (17, 6, 3, 38))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (22, 19, 21, -11))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (-6, -7, 33, 18))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (19, -3, -9, 6))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (8, 25, 20, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (21, 0, 20, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (21, 5, 3, -4))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (16, -2, -9, 23))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (8, 22, 36, 0))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (22, 26, 38, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-8, 9, 27, 9))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (-4, 12, -10, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-2, -9, 4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, 15, 28, -3))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (28, -6, -12, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (26, 14, 23, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (28, 9, 15, -6))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-2, 9, 7, 16))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (10, 11, 33, 11))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (30, 7, 33, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (6, 25, 36, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (17, -4, -11, 11))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (1, 3, -2, 24))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (15, -1, -1, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (20, 21, 30, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (14, 2, 4, 24))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (6, 2, -6, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (1, 23, 15, -7))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-8, 23, 14, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (25, -4, 27, 34))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (19, 29, 31, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (25, -1, 6, 35))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (10, 30, 14, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (24, 23, -6, 4))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (26, 30, 5, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (-1, 21, -5, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (5, -9, 6, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (20, 24, 15, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (28, 16, 7, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (28, 5, -8, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (16, 22, 7, -9))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, None)
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (8, -1, 13, 32))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, None)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (2, 10, -12, 2))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (7, -2, 23, -10))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (6, 29, -2, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-3, 17, 35, 4))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (22, 26, -9, 8))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (23, 3, 10, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (21, -7, 32, 33))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (30, 14, -10, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (9, 13, -1, -8))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (3, 11, -10, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-9, -4, 31, 32))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-6, -6, 28, -1))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (0, 6, 29, 13))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (20, 8, -12, -9))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (14, -8, -5, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (4, 5, -4, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (24, 7, -3, 11))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (26, -2, 12, 25))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-7, 19, 2, -1))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (25, 29, 22, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (20, 14, 9, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (-5, 3, 16, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (6, -2, 13, -10))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (16, 28, 31, -8))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (20, 29, -6, -2))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-1, 18, 38, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (8, 16, 31, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (14, 6, 8, 21))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (9, 25, 16, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-4, 27, 7, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (30, -8, -3, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (6, 13, 10, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (23, 12, -6, -11))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (22, 8, -12, 22))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (2, 18, -4, 38))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-3, 7, -12, 29))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (5, 28, 3, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (28, 20, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (6, 22, 29, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (25, 6, -2, 15))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (14, 8, 21, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (13, 15, 17, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (26, 7, 9, 0))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, None)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (14, 14, 24, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (3, 1, -8, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-4, 28, 14, -9))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (3, 14, 27, -3))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (28, 27, 19, -7))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (12, 18, -6, 21))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, None)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (17, 8, 13, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (28, 12, 23, -2))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (26, 0, 5, 17))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (9, 20, 3, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (4, 26, 8, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (7, 29, 35, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, None)
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (-3, 7, 37, -12))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (16, 28, -1, 8))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (21, 21, 23, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-8, 13, 15, 22))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (4, 20, -6, -2))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (2, 18, 37, -8))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (1, 23, 34, 35))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (1, 5, 25, 17))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (16, 20, -1, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-7, -6, 34, 28))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (14, 10, -4, 38))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (11, 14, 7, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (13, -8, -2, 7))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (9, -6, 2, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (15, -8, 38, 10))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (1, -6, 4, 6))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (10, 8, 7, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-5, 2, -10, 5))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-3, 17, -4, -8))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (28, 14, 27, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-3, 1, 15, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-4, 19, -11, 40))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (15, -4, 11, 14))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (28, -7, 6, 25))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (7, 1, -2, 25))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (30, 24, 5, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (13, 17, 6, -2))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (20, 15, 24, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (15, 28, 30, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (9, -3, -4, 7))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (12, 16, -9, 17))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-7, 17, -10, 25))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (16, 12, 17, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (25, -1, 29, 40))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (20, 14, 24, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (4, 2, 29, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-9, 10, 11, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (7, 11, 29, -12))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-7, 10, 10, 12))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-5, 8, 11, -3))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (27, 26, 25, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (29, 29, 12, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (20, 22, 15, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (29, 9, 6, -11))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (8, -5, 1, 40))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (13, 7, 6, -6))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (27, 16, 38, 37))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, None)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (21, 16, 11, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (22, -3, 35, 11))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (14, -4, 40, 35))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (14, 6, -8, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, None)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (5, 5, 1, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (5, -2, 28, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (19, 16, -9, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (15, 9, -7, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-5, 8, -3, 4))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (6, -4, 20, -10))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (6, -2, 38, 17))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-7, 23, 37, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (9, 2, -11, 28))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (21, 0, 22, -2))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (26, 5, 40, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (25, 3, 4, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (27, 8, 36, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (15, -1, 38, 12))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (1, 12, 24, 36))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (9, 6, 39, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (11, 30, 30, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (21, -5, 6, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (21, 13, 12, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (5, 4, 24, 15))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (12, 19, -1, -3))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (1, -5, 16, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (15, -4, 3, 37))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-2, 29, -5, 6))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (30, 23, 29, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (20, 7, -5, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (0, 10, 6, 20))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (20, -4, 5, -11))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-2, 26, 2, -3))
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-9, -7, 15, 37))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (6, 11, 13, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-2, 21, 24, 28))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (28, 29, 35, -7))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (18, -5, 15, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-4, -9, -7, 23))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (5, -5, 21, 1))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (21, 17, 38, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (23, -5, 2, -10))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (22, -6, 35, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (23, 1, -2, -2))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (7, 17, -1, 6))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, -1, -3, -12))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (27, -1, 8, 2))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (15, 14, -10, 30))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-2, 18, 39, -12))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (29, 15, 6, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (5, 7, 11, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-1, 6, 37, 26))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (21, 23, 25, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (5, 26, 35, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (23, 5, 26, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (20, 0, -6, -7))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (16, 19, 10, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (19, 19, 13, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (26, 21, -8, 33))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-4, -7, 5, 15))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (23, 9, -3, 21))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (11, 21, 35, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (7, 1, 0, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-7, 17, 8, 26))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-9, -4, 20, 5))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, None)
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (29, 21, 25, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (1, 21, 40, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (9, -8, 35, -1))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (-9, 10, 21, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-1, 21, 5, 4))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, None)
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (4, 2, 39, 25))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (22, -9, 23, 21))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (6, 2, 26, -3))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (28, -5, 18, -6))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-9, 4, 29, 2))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (10, 18, 40, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-9, 16, 27, 9))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (26, 2, 38, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (1, 14, 36, -6))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (12, -8, -2, 23))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (27, 19, 18, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (23, -2, 33, -4))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (14, 0, 38, 14))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (17, 3, 14, 28))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (3, 26, 11, -2))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (15, 17, 10, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (19, 26, 3, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (17, 22, -10, 10))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (12, 4, 3, 0))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-7, 0, 28, 27))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (30, -2, 25, 4))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-2, 9, -7, -11))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (30, 10, 34, -3))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (21, 0, 30, -5))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (6, 19, 4, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (27, 25, 27, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (23, 10, 30, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (17, 3, 8, 15))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (7, -8, 31, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (22, 17, -7, 9))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (8, 28, -8, 13))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (3, 6, 8, -7))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (0, 19, 27, 5))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-2, 23, 16, 9))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (4, 10, -9, 8))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (9, 3, 36, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (9, -6, 17, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (14, 29, 26, -3))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (20, 4, 40, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (15, 22, 7, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (9, 2, 15, -8))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-3, 6, 25, 1))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-8, -7, 14, 6))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (10, 22, 32, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, None)
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (1, 14, 14, 26))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-4, -9, 12, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (28, 1, -7, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (7, 2, 4, 25))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (2, 20, 22, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (28, 7, 34, -8))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (12, 29, 2, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, None)
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (24, -7, 24, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (27, 13, 31, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (28, 8, 15, 17))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (5, 8, 24, 11))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (-2, 30, 5, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, None)
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (-7, 1, 12, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (7, 7, 29, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (15, -8, 29, 11))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (1, 25, 31, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (15, 9, 26, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (20, 27, -3, 7))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (9, -5, 18, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (6, -6, 2, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-6, 17, 33, -7))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (28, -2, 1, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (11, 15, 6, -10))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-2, 21, 13, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (24, -1, 39, 3))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (1, -9, 4, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-7, 28, -3, 10))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-9, -7, 1, 30))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (10, 24, -6, 3))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (23, 24, 27, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-5, 5, 18, 18))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (7, 10, -5, 23))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (21, 19, 37, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-4, -4, 26, -8))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (6, 25, 13, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (30, -5, 1, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (28, 30, 16, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-4, 12, 19, -9))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (21, 0, 6, 27))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (18, -6, 26, 36))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (21, 15, 35, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (12, 30, -7, 18))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (4, -3, -12, 36))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (4, 25, -5, 13))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-9, 29, 7, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (29, 29, 8, -3))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-4, -4, 27, 39))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, None)
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, 9, 0, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-4, -4, 0, 16))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (0, 6, 35, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (-1, 26, 30, 16))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (6, -3, 16, 36))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (5, 19, 3, -4))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (5, 5, 6, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-3, 9, 36, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (18, 26, 21, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-6, 19, 8, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-1, -7, 30, 4))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (20, 27, 32, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (9, 2, 33, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (13, 15, -3, 36))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, None)
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (30, 11, 34, -11))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (25, -4, 24, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (13, 16, 22, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (22, 17, 14, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 25, 7, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-8, -2, 30, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (8, 15, 26, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (26, 29, 22, -10))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (18, -9, -3, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, None)
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (1, 17, 5, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-3, 6, 1, 13))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (21, 4, 4, 20))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (12, 26, -8, 16))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (21, -9, 0, 2))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (7, 25, 34, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (27, -9, 40, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (25, 13, 10, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (6, 16, 4, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (25, -4, -3, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-7, 1, 26, 5))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (21, 12, 2, -8))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (20, 13, 38, 18))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (13, -7, 10, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (8, -3, 38, 25))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (2, 4, 4, 25))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (17, 30, 16, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (-3, 25, 7, 22))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-2, -5, 8, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-1, 0, -12, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-6, 14, -5, 34))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-6, 19, 35, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (25, -3, 28, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (7, 30, 8, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (27, 22, 28, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (16, 19, 3, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (25, 11, 9, 38))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (3, 9, 22, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (7, 8, 23, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (6, 8, 5, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (13, 29, 34, -11))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (6, 13, 27, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-7, 11, 32, 13))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-6, 15, 12, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (26, 17, 34, -3))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (25, -6, 36, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (26, 8, 26, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (0, 8, 40, 8))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (15, -8, -10, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (18, 7, 39, 20))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (30, 22, -3, -8))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (29, 25, 15, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-8, 24, 39, 38))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (17, 10, 39, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (9, 25, 3, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (26, 6, 36, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (22, 28, 21, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (24, 4, 3, 14))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (19, 30, -9, 12))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-1, 8, 16, 40))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (-7, -2, 1, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (14, 15, -9, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, None)
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (28, 13, -5, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (24, 0, 11, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (26, 26, 40, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (1, 30, 39, -9))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (23, 9, 25, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-8, 16, -11, 28))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (27, 5, 28, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (13, 13, 32, 29))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (9, 22, -7, 0))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (20, 11, -11, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-3, 3, 25, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-2, 9, 5, 1))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-3, 14, 8, 21))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, None)
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (6, 3, -1, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-5, 25, 25, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (24, -6, -11, 6))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-6, 22, 32, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (1, 2, -1, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-3, 26, 4, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (28, 20, -4, 21))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (18, 29, 24, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-2, 1, 37, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (9, 26, 13, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-5, 9, 18, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (15, -9, -9, 12))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (2, 2, 2, 32))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (-9, 30, -3, 28))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-9, 11, 6, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-4, 30, 8, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (10, 27, -4, 38))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (19, -5, 1, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (2, 21, 25, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-4, 20, 25, -1))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-7, 28, 28, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (9, 3, 0, 13))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (-3, 22, 38, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-6, -6, 19, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-7, 15, 7, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-8, 27, -7, 14))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-9, 22, 32, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (0, 6, 16, 29))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (4, 6, -3, 33))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (0, -2, 21, 27))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (3, -9, 3, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (21, 11, -12, -11))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (14, 30, 17, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (1, 0, -7, -8))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (22, -2, 7, 18))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (1, -5, 24, 25))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (16, 11, -7, 18))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (19, 1, -4, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (13, 9, 16, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-7, 11, 0, 33))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-8, -1, 13, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (5, 2, 7, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (27, -3, 4, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (22, -4, 6, 32))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-7, 14, -4, 31))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (7, -9, -8, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-1, 6, 28, 1))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (-2, 0, 35, -2))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (26, 4, -4, 19))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (7, 22, 22, -2))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-8, 16, 34, 31))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (12, 10, 1, 25))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-1, 6, 19, 24))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-6, 12, 7, -5))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-4, 3, 37, 25))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-2, 23, 30, -2))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (10, 9, 17, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (18, -7, 1, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (27, -5, 3, 12))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (14, -9, -3, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (22, 24, 24, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (26, -6, 24, 30))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (0, -9, 11, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, None)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (17, 6, 18, 38))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (1, 8, 1, 12))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (28, 23, 21, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-5, 29, 35, 17))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 2, (19, 9, 35, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-7, 0, 6, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (13, 15, 13, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (29, 26, 24, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, None)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (0, -5, -1, 33))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (4, 17, -3, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-2, 25, 2, -7))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (5, 1, 30, 21))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (6, 9, 36, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (22, 28, -10, 25))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-8, 17, 16, 14))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (30, 20, 26, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (30, -5, 11, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (-8, -9, 25, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (15, 7, -8, 0))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, None)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (1, -6, -4, 12))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (17, 28, -12, 36))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (29, -6, 6, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (21, 13, -12, 8))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-5, -8, -2, 10))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-9, 26, 14, -3))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (3, -3, -10, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (13, 2, 1, 35))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (10, -1, -4, -12))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (15, -4, 15, 18))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-6, 7, 26, 18))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (10, 23, 4, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-6, -4, 8, 36))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (30, 28, 0, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-1, 4, -7, 12))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (26, 20, 1, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-7, 26, -3, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (3, 14, -7, 9))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (24, 27, 29, 0))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (20, -1, 19, 3))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-8, 1, 8, 26))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (21, -6, 37, 31))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (10, 8, 33, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-1, 4, 37, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (20, 29, -10, 32))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (30, 25, -4, 2))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (28, 16, -9, -7))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (13, 14, 26, -6))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (7, 16, 21, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (30, -5, 4, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-4, -9, 29, 25))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (14, 3, -11, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (19, -9, -6, -6))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (7, -5, 2, 30))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (0, 12, 16, 7))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-6, 25, 7, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (28, 6, 7, 32))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (29, -6, 37, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (28, 7, 24, 17))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (2, -2, 18, 28))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (19, 22, 29, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (21, 29, 34, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (27, -2, -4, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, None)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (19, 10, 15, -2))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-3, 5, 16, -3))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (15, 18, -12, 39))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, None)
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (4, 10, 6, 16))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (7, 0, 25, 20))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (21, 27, 0, -9))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (3, 29, 0, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (18, 0, -2, -11))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (3, 15, 23, -10))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (26, 6, 7, 10))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (6, 0, 0, 5))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-6, -3, 40, 32))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (13, 11, -5, 25))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-9, 22, 34, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (19, 9, -10, 20))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (18, 15, 29, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (26, 16, -1, -11))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (6, 25, 5, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-2, -1, 22, 4))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-2, 9, 32, 0))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (11, 19, 37, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (20, 19, 26, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (23, 15, 37, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (-7, 28, 8, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-5, 1, 18, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (4, -3, 35, 7))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-6, 16, 32, 16))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (2, -4, 20, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (28, 15, 8, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (5, -1, 39, -8))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-7, 27, 26, 21))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (18, -2, 39, 40))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-9, 12, -4, -7))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (30, 14, 4, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (17, 17, 33, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (22, -1, 20, 7))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (29, 30, -11, -1))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (11, 13, -12, 5))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (22, 0, -7, 33))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (25, 17, 34, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (27, -6, 39, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (0, -4, 34, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (3, 19, -3, -6))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (7, 3, 29, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (17, 0, 4, 33))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (29, -6, 18, -11))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (-2, -5, -6, 14))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (9, 3, 35, 16))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (22, 28, 32, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (8, 24, 40, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (29, 0, 36, -11))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-2, -2, 39, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (26, 23, -3, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (1, 15, 26, -11))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (7, 28, 29, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (2, 3, -2, 38))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (3, -8, -11, 40))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-9, 20, 18, 28))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (29, -8, 8, 35))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (23, 2, 28, -12))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (5, 20, -8, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (23, 15, 39, 27))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (-8, 28, 19, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (28, 12, 38, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-4, -2, 7, 4))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-3, 23, 27, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-8, 8, 0, 36))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-6, 22, 31, -11))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (25, 1, 28, -9))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-3, 9, 21, 25))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, None)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (5, -7, 25, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (17, 1, -1, 19))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (12, 15, 36, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (-8, 0, 17, 26))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (7, 20, 31, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (18, 8, 20, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (22, 26, 36, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-8, 26, 30, 16))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-7, 24, 13, 12))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (14, -6, 35, 34))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-4, 7, 28, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (28, 13, 17, 30))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (26, 23, 19, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (7, -8, 11, 27))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (16, 0, 2, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-2, 13, -4, 0))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (2, -6, -4, -6))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (25, 2, 33, 13))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (-8, 0, 12, 14))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (3, 25, 7, -6))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (12, 18, 28, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (7, 19, 40, -4))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (21, 16, -8, 23))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-2, 5, 11, 5))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-5, 27, 35, -11))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (9, -1, 37, 30))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, 24, 15, 9))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (25, 3, 5, -10))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-2, 17, 16, 40))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (9, -3, 32, 14))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (9, 4, 38, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (11, 25, 21, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (25, 28, 13, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (16, -2, 15, 19))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (14, -5, 11, -4))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (27, 10, -3, 26))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (-5, 2, 18, 23))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-1, -7, 12, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (18, 4, 17, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (21, 25, 17, -3))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (30, 14, 29, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-3, -8, -6, 2))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (28, 25, -2, -3))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (-9, 11, 23, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (27, 20, 19, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (23, -5, -6, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-1, -7, -10, -9))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-5, 4, 29, 30))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (5, -7, -7, -4))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-8, 18, -6, 20))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (13, 25, 5, -5))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, -4, 25, 4))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (26, 13, -6, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (0, 8, 37, -3))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (12, 17, -7, 2))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (0, 20, 26, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (12, 8, 26, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (28, 2, 32, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (2, 8, 5, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (14, 23, 34, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (14, 15, 33, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (4, 22, -6, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (28, -1, 25, -1))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-1, -5, 1, 30))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-1, 18, -4, 39))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-1, 23, 14, 30))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (26, 2, 13, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (9, -4, 6, -6))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (0, -2, 17, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (9, 13, 29, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (9, 6, 24, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (0, 23, 20, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (11, 24, 30, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (9, 19, 32, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-4, 19, -11, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (1, 28, -11, 22))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (14, 28, 36, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (29, 12, 38, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (12, 11, 38, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-1, 20, 9, 7))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (15, 22, 30, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (15, -3, 32, -10))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (5, 11, 10, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (27, 3, -4, 38))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (5, 18, 10, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (25, 7, 35, 12))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (29, 7, 20, -10))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (22, 5, 6, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (26, 21, -12, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (-3, 16, -5, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, None)
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (9, 26, 35, -10))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-1, 7, 20, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (16, 25, 29, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (1, 14, 24, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-7, 2, 34, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (13, 13, 27, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (25, 19, 35, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (22, -2, 3, 14))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-8, 3, 15, -1))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (10, 29, 5, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (2, -5, 23, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (11, 30, 2, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (17, -1, 34, 40))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (3, 2, 28, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (24, 29, -10, 36))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (13, -5, 34, -4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (1, 27, 18, 8))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (17, 21, 11, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (4, 1, 7, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (5, 17, 6, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (26, 18, 13, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (16, 15, 27, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (13, -6, -6, 0))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (19, 8, -6, 33))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, None)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (24, -6, 13, 9))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (12, 25, 29, 0))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (25, 21, 20, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (1, 10, 13, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (8, -2, 12, 21))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (14, 28, 24, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (10, -6, 23, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (6, 16, 27, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (9, 30, -1, 35))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (8, 3, 15, -4))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (5, 26, -8, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (17, 10, 27, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (10, 11, -3, -4))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (9, -6, 1, 15))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (6, 30, 33, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-8, -4, 25, -9))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (21, 29, 24, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (20, 20, 1, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-6, 11, -11, -9))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-1, 17, 13, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (21, 18, 38, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (25, 24, -10, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-5, -1, 34, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (27, 8, 9, 9))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (29, 16, -6, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (22, 16, 35, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-1, 15, 25, 5))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-5, 27, 28, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-9, -2, 24, -2))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (21, 6, 5, 34))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (21, 18, 17, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, None)
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-3, 28, -11, 27))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (-9, 29, -6, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-9, 29, -7, 40))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (18, 28, 8, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-5, -4, 25, 15))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (5, -6, 23, 5))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (11, -8, 26, 27))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (8, 2, 20, 12))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (8, 25, -8, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (12, 30, -11, 5))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (17, 23, 20, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, None)
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (28, 0, 22, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (27, 17, 9, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (21, -5, 29, 27))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (16, 7, 27, 24))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-5, -6, 26, 18))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (3, 3, -3, -4))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (25, 21, 12, -5))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (12, 14, 31, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (27, 11, 22, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (7, 25, 24, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (22, 6, 34, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (8, 7, 28, 19))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-7, -4, 16, -3))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (21, 24, 40, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (-2, 6, 17, 34))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (3, 15, 30, 33))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (19, -4, 18, 7))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (5, 11, 29, 17))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (29, 19, 32, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-5, -3, -6, 24))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (7, -7, -2, -10))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-6, -5, 22, 21))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (29, 13, 12, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (17, 6, 12, 15))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-5, 20, 7, -2))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (22, -1, -1, 35))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, None)
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (1, 24, 20, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-6, 29, 36, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (11, 21, 2, -2))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (20, 21, 25, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-3, 26, 4, 9))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (22, 18, -2, 35))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (14, 15, -9, 40))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-2, 11, 25, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, None)
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (2, 8, -9, 21))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (25, -9, 5, 15))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (1, -2, 16, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (-8, 18, 13, 13))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (29, 16, 0, 29))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (25, 5, 3, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (3, -5, 9, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (18, 11, 1, -6))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (12, -7, 15, 8))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-7, 1, 2, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-5, 23, -10, 34))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (-7, 20, 0, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (24, 25, 38, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-7, 8, 17, 27))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, None)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (2, 27, 25, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (-9, -2, 8, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (27, 24, -6, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (26, 0, 24, 24))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (30, 19, 30, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (2, 11, 3, 38))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (0, 16, 7, 39))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (20, -8, 5, 24))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-4, 3, -9, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (1, 27, 30, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (27, 2, 39, 25))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (12, 12, -5, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (28, -1, 0, -1))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (1, 1, 23, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (1, 16, 18, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (18, -1, 3, 34))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (11, -2, -5, 26))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-4, 24, 12, 16))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (23, 22, 33, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (28, 15, -9, 34))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (-2, -3, -1, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, None)
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (7, -7, 20, -7))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (14, 14, 4, 13))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (5, 29, 24, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-5, 11, 21, 23))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (14, 15, 27, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (10, 14, 0, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, None)
	res = op(img)
	assert res.size == (5, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (0, -5, 20, 4))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, None)
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (4, -9, 16, -10))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-2, 28, 33, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (15, 22, 34, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (24, 22, 34, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (6, 30, 7, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (26, 3, 18, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 17, 34, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (9, -7, -5, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (8, 15, 21, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, None)
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (13, -8, 38, -5))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (22, 7, 6, -2))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (19, 9, 36, -1))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (12, 8, 0, -11))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (10, 5, 17, -6))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, None)
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (1, 18, 37, -4))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-4, -6, 18, 8))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (28, 25, -8, 32))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (7, 24, -11, 4))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-4, -7, 17, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, None)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (28, 22, 19, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (18, -9, 15, -9))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (12, 13, -5, 9))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (29, 21, 12, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (27, 14, 26, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (27, 23, 35, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (7, 29, 31, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (0, 19, 27, -1))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (18, -2, 21, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-1, 23, -7, -5))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (22, 21, 8, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (16, 10, 13, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, None)
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, None)
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-3, 14, -6, 18))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (25, -6, 5, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-1, 14, 29, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (10, 18, 29, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (15, 10, 8, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 26, 11, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (25, 30, 1, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (6, 5, 34, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (12, 16, 1, -5))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (0, -1, -7, 11))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (5, 23, 20, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (23, 22, 11, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (18, 13, -8, 37))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (26, -2, 1, 11))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (29, 16, 15, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (13, 23, -2, 10))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (15, 9, 10, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (28, 3, 29, 4))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (12, 19, 22, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (16, 10, 19, 16))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (11, 11, -1, -11))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (22, 27, 25, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-5, 15, -2, -8))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (12, 0, -4, 36))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (19, 17, 40, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (29, 5, 36, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (26, -6, 36, -9))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (9, -5, -12, -11))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-7, 24, 36, 9))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (17, -4, -12, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (3, 15, 24, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (23, 21, 37, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (28, 5, -1, 0))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-7, 0, 0, 13))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (8, 2, 8, -11))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (-9, 28, -9, -8))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (22, 17, -7, -11))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-1, -2, 15, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (18, -9, 6, -10))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (10, 5, 1, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (10, -7, 12, 35))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (26, 6, 4, 24))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (30, 3, -4, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-6, 30, 26, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (9, -7, 23, 37))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (27, -4, -3, 2))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (25, 1, 29, 22))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (20, -5, 17, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (22, 5, 32, -9))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (12, 16, 1, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (-3, 18, 34, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (19, 18, 6, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (20, 11, 29, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (15, 10, 26, -9))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (29, 27, 6, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (30, 19, 32, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (2, 10, 36, 22))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-6, 19, 22, 14))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (30, 15, -6, 26))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (20, 15, 35, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-1, -5, -3, 17))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (11, -8, -11, 19))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (16, 14, 9, -5))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (21, 22, 40, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (19, -7, 19, 24))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (6, -4, 23, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-8, 27, 2, -4))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (6, 30, -7, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (15, 30, 23, -8))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (18, -6, 24, -10))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (1, 7, 32, 34))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (11, 6, 21, 19))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (16, 5, 32, 30))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (24, -5, 1, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (3, 19, 23, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (-9, 22, 26, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (18, -9, 16, 39))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (21, 17, -11, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (7, 29, 3, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (18, -4, -6, -12))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-2, 19, 2, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (9, 28, -6, 11))
	res = op(img)
	assert res.size == (1, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (21, 10, 16, 34))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (27, 3, 5, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (8, 26, 31, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-9, -1, 24, -10))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (5, 22, 13, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (16, 12, 5, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (13, -1, 35, -6))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (23, -3, 26, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-7, 17, 13, 13))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-4, 26, -4, -6))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (24, 2, 22, -3))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-4, -9, 4, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (21, 6, 15, 15))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (30, 26, 15, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (1, 8, 23, 8))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (28, 3, 18, 27))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (23, 10, 35, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (18, 5, 34, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (16, 10, 4, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (11, 7, 26, 7))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (25, 16, 0, -6))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (7, 11, -11, 21))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (14, 27, 36, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (15, -3, 11, 27))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (26, -1, 6, -9))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (-1, 11, 40, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (3, -1, 2, 24))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (24, -7, 11, 14))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, None)
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (12, 17, -4, 10))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (6, 16, 15, 8))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (6, 8, 5, 0))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (13, 29, -12, 10))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-8, 25, -6, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (16, 22, 37, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (14, 29, 11, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (2, 7, 28, 6))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (28, 30, -9, 36))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (15, 14, 33, -5))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (7, 29, -8, 4))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (9, 3, 0, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (8, -4, 36, -9))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (0, 1, -10, 30))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (20, 27, 0, 2))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (28, -1, 5, 23))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (0, 16, -5, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (16, 17, 12, -9))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (11, 22, 0, 5))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-6, 23, 3, -10))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (15, 22, 32, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (25, 0, 4, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (17, 27, 18, -6))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (29, -4, -8, -6))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (28, -6, -1, 38))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (25, 11, 31, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (10, 25, 30, -8))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-3, 16, 32, 1))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (-3, 23, 19, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (1, 7, 18, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (2, 7, -8, -11))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (8, 12, 21, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (28, -7, 13, 35))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (17, 20, 18, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (17, 26, 31, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (12, -7, 1, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (18, 0, 29, 31))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (13, 27, -3, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-4, -5, 15, 6))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (17, 26, 3, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-7, 24, 28, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (24, 6, 13, 13))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (-9, 3, 0, 24))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (18, 18, -2, 40))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (25, -5, 40, -1))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (11, 20, 35, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (29, 12, 1, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (11, -7, 28, 10))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (-5, 18, 9, 23))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (19, -8, 20, 15))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (29, 10, 19, -11))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-7, 25, 5, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (13, 12, 7, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-2, 12, 29, 40))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (23, 28, 37, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-2, 24, 31, 31))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (12, 5, 4, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (7, 5, 32, 34))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-5, 5, 14, -11))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (29, 26, -10, -10))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (9, 19, -12, 38))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (29, 28, 32, -10))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (7, -9, -12, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (21, -2, -3, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (5, 4, 40, -12))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (20, 19, 32, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-4, 3, 26, 15))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (0, 8, 20, 21))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (0, 1, -1, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-8, 11, 10, 18))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (30, 6, 16, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (29, -4, 1, 8))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (20, 0, 22, 29))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (20, 7, 26, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, None)
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (25, 11, 33, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (1, 6, 2, 10))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (-9, -5, -2, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (6, 19, 5, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (20, 12, 2, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-9, 1, 37, 36))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (17, -6, 38, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (10, -9, 24, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-9, 7, 12, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (21, 23, 39, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-1, 23, 16, 5))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (22, -6, 25, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (28, 27, 7, -10))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-7, -4, 21, 12))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-6, 17, 40, 19))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (-3, 23, 33, 9))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-8, 2, 4, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (5, -6, -1, -2))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (11, 12, 23, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (18, 2, 4, 16))
	res = op(img)
	assert res.size == (0, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-5, 21, 14, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (-4, 4, 26, -10))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (23, -9, -10, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (25, 13, 39, 19))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (7, -3, 0, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (19, -2, 36, -1))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (19, 7, -3, 19))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (7, 16, -11, 27))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, None)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (27, -6, -4, 16))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (14, 30, 6, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (23, 6, 1, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (-3, 16, -9, 28))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (13, 13, 32, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (0, -1, -3, 26))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (17, 26, -8, 25))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (6, 6, 34, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, None)
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (20, 25, -12, -6))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (0, -8, 10, 16))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, None)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (22, 19, 9, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (25, -1, 26, -2))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (-3, -9, 22, 13))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (5, 10, 19, 9))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-1, 27, 8, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (3, 12, -8, -9))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-8, 19, -2, 0))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (4, 17, 15, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (10, -2, 0, 7))
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (9, -7, -9, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-2, 20, -3, 35))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (4, 12, 2, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (23, 9, 30, 13))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (2, 16, 10, 28))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (11, -8, 12, 33))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (11, -3, 1, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (30, -7, 24, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (25, -2, 11, 4))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-6, 30, 25, 29))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (25, 0, -6, -11))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (11, 14, 1, -7))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-1, 25, 13, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (16, 16, 0, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (28, 16, 13, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (22, 15, 11, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-4, 5, -3, -12))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (3, 6, 37, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (19, 6, 10, 0))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (6, -3, 17, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (24, 27, 20, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (-3, 5, 1, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, None)
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (-6, 29, 21, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-4, -7, -3, 21))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, None)
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-8, 14, 31, 26))
	res = op(img)
	assert res.size == (1, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (9, -8, 19, -4))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (30, 24, 9, -7))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (19, -7, 34, -11))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-9, 26, -9, 2))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (22, 13, 25, 4))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-9, 14, 20, 23))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, (23, 1, -4, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (22, -2, 22, -11))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-3, 14, 1, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-9, 1, 36, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (13, 23, -4, 27))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (23, -2, 29, 9))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, None)
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (11, 14, -9, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-6, -7, -12, 31))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-9, 8, 16, 3))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (-4, -7, 12, 18))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (10, 9, -3, 26))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-8, 14, -7, 35))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (2, 21, 29, 14))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, None)
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-2, 28, 22, -7))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (22, 22, 18, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (24, 4, 6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (14, 13, 1, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (27, 2, 18, -4))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (29, 3, 2, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (1, 21, -1, -9))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (9, 25, 20, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (11, 19, 23, -6))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (10, 15, 3, -9))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (0, 0, 15, 31))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, None)
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-9, 2, 26, 36))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (14, 1, -4, 18))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (25, 23, 22, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (24, -5, 32, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (21, 21, 10, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-5, 23, 12, -3))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (10, 12, 25, -11))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (4, 10, 39, 34))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (21, -4, -9, 27))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (1, -5, 38, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (4, 1, -3, 8))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (10, -7, -4, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (13, 3, 19, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (1, 8, -3, -8))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (1, 8, -9, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (28, -6, 18, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-2, 25, 9, 17))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (7, 18, 5, -9))
	res = op(img)
	assert res.size == (2, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (6, 17, 33, 11))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (2, 11, -12, -7))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (24, 18, 9, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (-7, 9, 35, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (9, 29, 30, -4))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (22, 18, 17, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (-6, 18, -12, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (24, 18, 13, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (1, 0, 35, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (6, -9, -5, 14))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (22, 12, 34, -9))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (26, 24, 7, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (21, 19, 16, -7))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (1, -7, -3, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-5, 27, 37, 32))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (7, -9, -5, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (1, 1, 38, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (14, 28, 7, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (-3, 12, 24, 14))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-3, -2, -4, 5))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (3, 10, 1, -4))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 10, (12, 7, 0, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (13, 24, 15, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-8, 29, 1, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (20, 8, 22, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (24, -1, 6, 5))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (16, 4, 39, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-5, 12, -8, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (18, 20, 38, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (7, -1, -6, 36))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (6, 26, -5, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (16, -9, 36, 21))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (28, -1, 34, 18))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (-2, 3, 24, 24))
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (19, 22, 15, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (5, 11, 5, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (16, -1, 31, 15))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (29, 17, 40, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (29, -8, 19, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (28, -5, 14, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (19, -2, 0, 19))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (27, 7, 2, 34))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (6, 30, 10, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (3, -7, 34, -1))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (6, 16, 32, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, None)
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (20, 23, 6, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (1, 30, 31, -2))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (18, 22, 27, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (7, -8, 38, 13))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (1, 5, -12, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (-7, -7, -12, 1))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-3, 27, 34, 20))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (16, -5, 2, 14))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (4, 24, 25, 16))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-7, 9, 16, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (9, -1, 32, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (27, 16, 7, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-3, 29, 22, -11))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-3, 10, 32, -2))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (25, 20, -11, -8))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (8, -2, 32, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (5, -6, -2, 7))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-7, 1, 19, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (4, 1, 39, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (16, 14, 8, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, None)
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (11, -1, 17, 30))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (29, 2, -3, 35))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (22, 19, 19, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-6, 20, 16, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 1, 32, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (2, 11, 20, 18))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (30, 30, 19, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-4, -6, -9, -12))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (26, 20, 31, -10))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-6, 3, 26, -8))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-5, -2, -7, 31))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (10, 10, 34, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (5, -4, 8, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (13, 27, -2, 9))
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (9, 26, 8, -10))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (23, -1, 11, 9))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (24, 7, 19, 26))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (0, 6, 32, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-4, 22, 26, 22))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (12, 28, 7, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, None)
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (27, 13, 8, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (15, 13, 29, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, None)
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (12, 17, 14, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (3, 0, 31, 6))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, None)
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (21, 18, 19, 29))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (13, 23, 9, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (9, -5, 30, -5))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (16, 29, 28, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (30, 3, 17, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (-6, 0, 31, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (23, 13, -7, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (8, -2, 28, 28))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (18, 18, -3, 4))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, None)
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (23, 0, 23, 8))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-3, -9, 0, -5))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (22, 3, 17, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (21, -4, 33, -2))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (6, -1, -8, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (2, -4, 40, 11))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (9, -8, 9, 34))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (12, 19, 18, -7))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (8, -3, -5, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (4, 6, -6, 29))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-1, 14, 31, -6))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (25, 21, 35, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (12, 23, 7, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-9, 7, 40, 26))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (12, 23, 35, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (9, -1, 29, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (22, 2, 21, -12))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (7, 5, 29, 19))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (17, 15, -10, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (2, 2, 1, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (18, -4, 28, -5))
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-5, 24, 33, 35))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-5, 26, 3, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (15, -8, 38, -7))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (24, 23, 13, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (18, 23, 23, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (6, 28, -8, 17))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (4, 18, 27, -4))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-2, 30, 24, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, 14, 26, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (27, 8, 22, -11))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (25, 1, 5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-4, 1, -7, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (22, -5, 7, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (-8, 0, 38, 1))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-1, 5, 32, 24))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (16, 28, 33, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (24, 29, 0, 24))
	res = op(img)
	assert res.size == (6, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (-4, 1, 5, -11))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, None)
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (24, 14, 25, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 19, (9, 28, 31, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (8, 21, -12, 19))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, None)
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (6, 29, 5, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (3, 20, 19, -9))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (24, 30, 30, -12))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (24, 26, 8, -6))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-4, -6, -7, 5))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (25, 14, 7, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (30, 15, 26, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, 1, 2, 8))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (2, -5, -6, 8))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (0, 16, -6, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-7, 17, 29, 24))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (11, 8, 19, 31))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (3, -9, 39, 9))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (5, 14, 17, 34))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (22, 2, 28, -4))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (28, 26, 8, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (29, 20, 20, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, None)
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (24, 17, 24, 0))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (22, 1, -2, 39))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (1, 1, 21, -6))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (21, 11, 18, 32))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (0, 22, 27, 2))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (10, 23, 17, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (27, 29, 22, -7))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-6, 6, 17, 26))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (3, 11, 3, 36))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-2, 23, 0, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 5, 3, 22))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (1, 27, 30, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (8, -1, 22, -8))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-5, 16, 11, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (16, 8, 21, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (26, 21, 28, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-9, -3, 15, -8))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, None)
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (1, 4, 24, -8))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (17, 5, 19, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (5, 17, 18, 27))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-2, 5, 1, 30))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, None)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, None)
	res = op(img)
	assert res.size == (6, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (0, 12, -5, 6))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 10, (-8, 21, 34, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (9, 6, 30, 6))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (0, 23, 21, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (11, 17, 39, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (10, 6, 34, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (29, -7, 36, 30))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, None)
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-6, 26, 24, 18))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (-2, 25, -1, 3))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (21, 2, -5, -5))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-1, 7, -10, 12))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (0, 20, -9, 2))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-8, 30, -12, 24))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (2, -4, 37, 3))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (12, 15, -6, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (20, 28, 1, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (22, 8, 9, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-8, 28, -3, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (21, -9, 11, 38))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (22, 2, 30, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-7, 6, 32, 37))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (25, 18, 11, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-3, 15, 26, 11))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (0, 16, 9, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 6, (10, 4, 20, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (9, 17, -5, -8))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-4, 29, -2, -2))
	res = op(img)
	assert res.size == (2, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (24, 24, 8, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (18, 8, 12, 1))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (26, 16, 33, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (-6, 1, 0, 27))
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (24, 27, -3, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (23, 27, 9, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-5, 3, 33, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (12, -6, -11, 10))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (-4, 30, 4, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (18, 5, 20, 24))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (23, 19, 7, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (-7, 14, 27, 8))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (14, 13, 1, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (15, 0, 31, 26))
	res = op(img)
	assert res.size == (0, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (28, 13, 25, -9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (23, 16, 12, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (-7, -2, -6, 19))
	res = op(img)
	assert res.size == (6, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-2, 5, 3, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (6, 9, 40, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (0, 9, 18, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (13, 6, -12, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-5, -5, 7, 17))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (24, 13, 38, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (30, 9, -8, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-4, 25, 2, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (21, -8, 34, 26))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (20, 8, 16, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (21, 10, 35, 38))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (26, 15, 0, 10))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (4, -4, 7, -12))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (22, -8, 23, 23))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-9, -8, 1, 20))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, None)
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (8, 21, 21, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (28, 20, 7, -11))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (23, 6, 2, -5))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (0, -7, 7, 16))
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (23, 14, 16, 34))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (24, -7, 11, 38))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (5, 2, 0, 26))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (2, 16, 3, -4))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (13, -5, 13, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (-9, 13, 35, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (-7, 2, 17, -12))
	res = op(img)
	assert res.size == (1, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-4, 13, -6, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-5, 23, 30, 0))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (0, 29, 16, 1))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (-1, 2, 37, 35))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (5, 14, 1, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, None)
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (18, 17, 18, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (30, -6, 11, 22))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (29, 10, 11, -7))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (27, 25, -4, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (22, 21, 38, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-6, 7, 30, 4))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (25, 10, 4, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (-4, 6, 11, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-6, 6, -3, 11))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, None)
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-6, 25, 33, 29))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (15, -4, 27, -8))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-8, 27, 9, 36))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (6, 24, 35, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (20, 26, 35, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (-3, 27, 13, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (4, 5, 18, 9))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (4, 30, 9, 23))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, None)
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (21, -9, 24, 15))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, None)
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (9, 17, 19, 15))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (23, 29, 25, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, None)
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (-6, 10, 31, 14))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (9, -8, 9, 22))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, None)
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, None)
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (7, 23, -7, -4))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-5, 4, 29, 3))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (5, 20, 10, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-9, 2, 14, -2))
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-5, 2, 17, 20))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (11, 2, 17, 22))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (0, 30, 14, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (14, -9, 15, 28))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (16, 13, -7, 13))
	res = op(img)
	assert res.size == (1, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (8, -7, 20, -2))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (5, 21, 4, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (27, 8, -9, 14))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (30, 7, -6, -7))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (6, 5, 15, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (1, 7, 10, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (21, 19, 6, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (4, -1, 14, 6))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (11, 0, 25, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (17, 9, 20, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (26, 5, 1, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (1, 3, 12, 21))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-7, 11, 8, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (28, 28, -8, 34))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (7, 0, 36, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (11, 22, 40, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (20, -3, 34, 22))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-1, 30, 0, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-2, 15, -5, -2))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, None)
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, None)
	res = op(img)
	assert res.size == (2, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (11, 25, 6, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-1, 23, 30, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, None)
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (3, -4, -8, 33))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (7, -2, -12, -1))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (10, 7, 19, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (-9, 2, 31, -11))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (16, 5, -12, 8))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-7, 12, 4, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (28, 13, 13, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (8, -9, 21, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, None)
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (14, -7, 31, 29))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (18, -7, 11, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (13, 5, 30, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (30, -1, 17, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (21, 12, 3, -4))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (15, -5, 21, 16))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (24, 9, -2, 31))
	res = op(img)
	assert res.size == (6, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (8, -4, -10, 16))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (11, 21, 35, -3))
	res = op(img)
	assert res.size == (3, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (13, 21, 14, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-8, 26, 20, -5))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (19, 11, 2, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (1, -9, -8, 15))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (11, 29, 14, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (29, 19, -6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, 20, 16, 11))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (14, 20, 12, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (12, 24, -9, 2))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-3, -1, 40, 22))
	res = op(img)
	assert res.size == (2, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (3, 1, 21, 24))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (12, 19, 37, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (-3, 6, 16, -11))
	res = op(img)
	assert res.size == (1, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (18, -6, 28, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (6, 5, 34, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (-2, -1, 30, 5))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (7, 19, 17, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (-5, 30, 9, 6))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 17, (29, 2, 35, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (5, 27, 21, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (-7, 6, 9, 28))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (13, -4, 6, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (15, 4, 10, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (0, -1, -12, -9))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (4, 8, 11, 35))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (7, 22, 30, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (0, 1, -7, -3))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (18, -5, 32, 23))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, (28, -3, -4, -12))
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (-4, 23, 5, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (8, 15, 13, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (2, -3, -3, -12))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, None)
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (26, 1, -12, 32))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (5, 9, 36, 34))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (9, 5, 4, 39))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-6, 1, -12, 15))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 4, (27, -6, 32, 4))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (10, 16, -8, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, None)
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (1, 7, 8, 17))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (23, -6, 6, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (10, 8, 33, 2))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (10, 18, 10, -11))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-9, -5, 32, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (2, 10, -6, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-6, -3, 17, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (23, -9, -10, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (6, 25, 16, -9))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (22, 30, 14, -12))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (19, 4, 18, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-4, 6, 25, -4))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (5, 20, 15, -2))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (17, 24, 27, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, None)
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (4, 5, -6, 17))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-1, 8, 40, 16))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (9, 6, -9, -4))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (8, -3, 38, -9))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-9, 1, 20, 18))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (3, -2, 14, 6))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (14, 9, -8, 19))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (10, 22, 21, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, None)
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (18, 4, 18, 16))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-7, -3, 14, -12))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (18, 19, 27, -12))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (18, 8, 24, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (5, -7, -9, 28))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (18, 21, -4, 9))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (30, 8, -3, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (6, 18, -1, 4))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (2, 11, 31, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-4, 0, 17, 7))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (24, 26, 12, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (1, 18, 20, 28))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-1, 14, 36, 40))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (0, 15, 17, -6))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (1, 27, 36, 14))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (25, 23, 30, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (3, -5, 22, 26))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (13, 23, 12, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (9, 2, 5, 29))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (26, 5, -11, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (24, -9, 0, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (26, 18, 37, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-3, 11, 0, 0))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (20, -2, 12, 6))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (2, -4, -1, 19))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (19, 15, -1, 35))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (7, 7, 33, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-9, 1, 8, 32))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (25, 17, -4, 17))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (26, 1, 17, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, None)
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (5, 3, 0, -6))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (27, -6, 8, 27))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (10, -4, 26, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (-9, 9, 28, 5))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (30, 7, 34, -11))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (9, 17, -11, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (4, 6, 30, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (27, 24, 8, 0))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (11, 2, 24, 40))
	res = op(img)
	assert res.size == (0, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (19, 17, 13, 28))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (4, 15, 17, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (14, 15, -11, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, None)
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (5, 19, -9, 22))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (0, -7, 0, -6))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (8, 22, -1, 37))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (28, 18, 7, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (12, -8, 6, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (-4, 25, 15, -4))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (-4, 3, -6, -4))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (6, 26, 4, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (-5, 28, -2, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (1, 25, 34, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-8, -9, -12, 11))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (9, 19, 33, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (6, -9, 4, 31))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (15, -5, 13, 37))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (19, 2, -4, 29))
	res = op(img)
	assert res.size == (5, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (5, 20, 29, 33))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-4, 9, 25, 28))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 10, (11, 19, 32, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (-3, 20, -2, -11))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-6, 12, 7, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-1, 24, -9, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (3, 1, 34, 30))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (16, 8, 7, -3))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-3, 3, 37, 29))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (20, -4, 36, 35))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (2, 7, 14, -3))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (11, -6, 7, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (9, 2, 35, 3))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (17, 16, 3, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, 25, 11, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (15, 29, 33, -6))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (18, 7, 19, -6))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (23, 17, 19, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (27, 12, 36, 38))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (-3, -8, 5, 20))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (6, 0, 31, 10))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (15, 16, -12, -6))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (26, 28, 40, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, 23, 25, 24))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (18, 7, 21, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (18, 16, -8, -5))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (3, 23, 18, 9))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (-5, 6, 38, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (4, 1, 10, 20))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (9, 18, -8, 27))
	res = op(img)
	assert res.size == (3, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (1, 22, -12, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (7, 0, 19, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (16, 28, -10, 23))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-3, 20, 3, -9))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (21, 28, 4, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-2, 0, 16, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (2, 30, 29, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (3, 10, -2, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (1, 15, 15, 4))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (-4, 26, 16, -3))
	res = op(img)
	assert res.size == (1, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-4, 6, -11, 0))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (-8, 0, -7, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 14, (29, 1, -7, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (25, 0, 5, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (-2, 15, -2, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, None)
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (22, -2, 11, 26))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (21, -6, 16, 20))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (2, 2, 35, 12))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (20, 28, 7, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-7, 6, 22, 12))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (9, 8, 32, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (1, 22, 6, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (24, -4, 13, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, None)
	res = op(img)
	assert res.size == (6, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (8, 25, 39, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (5, 20, 24, 19))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (-4, 0, 6, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (27, 1, 17, 21))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (16, 27, 5, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (23, -5, 14, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (2, 27, -8, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-6, 0, -1, 11))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (28, 29, -3, 7))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (22, 9, 10, 28))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (21, -2, 14, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (-2, -7, 19, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, None)
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (17, -7, 28, 26))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-3, 10, 30, 32))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-5, -9, 9, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (24, 26, 29, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (30, -2, 6, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (29, -8, 39, 22))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (5, 21, 24, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (6, 13, 25, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (26, 13, -11, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, None)
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 20, (-3, 3, 15, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (-3, 10, 15, -9))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (6, 24, 7, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (-6, -5, 40, 13))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (25, 21, 20, -5))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (1, 12, 8, 33))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (-2, 4, 40, 13))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (2, -8, 24, -4))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (16, 22, -11, 5))
	res = op(img)
	assert res.size == (5, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-8, -2, 9, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (4, -3, -6, 22))
	res = op(img)
	assert res.size == (5, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (6, 12, 17, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (29, 6, 9, 18))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (6, -5, 4, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 15, (12, 5, 8, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, None)
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (9, 15, -11, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (23, 1, 10, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (20, 11, 22, 0))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (19, 6, 13, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (20, 4, 18, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (13, 6, 9, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 20, (1, 25, 29, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (19, 17, 25, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-9, 12, 16, 17))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (21, 6, -11, 14))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (22, 18, 11, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (28, 13, 19, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (4, -7, -2, 2))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-7, -7, 21, 26))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (14, -9, 39, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (27, 0, 25, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-1, 25, 13, 0))
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (10, 18, 21, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (27, 15, 27, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (0, 18, 32, -3))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (28, 30, 9, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (1, 19, 14, 27))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (26, 4, 18, 25))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (12, 7, 32, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (6, 20, -4, 2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (-7, 28, 14, -3))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, None)
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, None)
	res = op(img)
	assert res.size == (4, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (28, 28, 36, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (4, 23, 33, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, None)
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (-9, -6, 8, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-4, 10, 5, 37))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (17, 7, 13, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (11, 9, -2, 30))
	res = op(img)
	assert res.size == (3, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (19, -3, 36, 28))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-1, 7, -5, 3))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (23, -7, 29, 13))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (17, 21, -10, 2))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (11, -4, 24, -1))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (16, -8, 8, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (17, 3, 36, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (-7, 2, 38, 15))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (3, 18, 6, -4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (26, -4, 35, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (14, 1, -2, 3))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (17, 7, 23, 12))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (12, 0, 1, -12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (4, 25, 33, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (21, 18, 34, -7))
	res = op(img)
	assert res.size == (5, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, (17, 6, 7, 23))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (7, 18, 35, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (16, 10, 0, -9))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 17, (15, 13, 7, 37))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 13, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (-7, -9, 32, -7))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 5, (-9, 16, 0, 2))
	res = op(img)
	assert res.size == (5, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (8, -8, 8, 40))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (29, 20, 38, -5))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (26, 26, 38, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (23, 27, 12, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (20, 7, -5, -2))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (-4, 22, -8, 4))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (1, 14, 32, 8))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-2, 0, -8, 31))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (7, 20, -6, 14))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (2, -4, -3, 24))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (16, 30, -4, 2))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (0, 19, 40, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 8, (0, -5, 27, -12))
	res = op(img)
	assert res.size == (5, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (29, 21, -3, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (13, 19, 31, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-9, 2, 12, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (10, 25, 22, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, (-9, 4, 39, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (-7, -4, 30, 15))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 19, (21, 19, -6, 29))
	res = op(img)
	assert res.size == (3, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (0, 20, 23, -11))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-4, 6, 22, -9))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-6, 9, 2, 21))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (8, 22, 4, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, None)
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (-5, -3, 13, 26))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (1, 19, 21, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (7, 5, 40, -5))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (-1, 17, -12, 4))
	res = op(img)
	assert res.size == (4, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (-3, 12, 25, 15))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (27, 24, 39, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 5, (13, 1, 24, 25))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-2, -9, 10, 39))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (22, 16, 23, -3))
	res = op(img)
	assert res.size == (2, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (18, 14, 13, 17))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (19, 4, -3, -8))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (19, 7, 18, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (8, 19, 19, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-4, 18, 39, 40))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (-9, 4, 2, 25))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (4, -2, -3, 13))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (27, -8, 24, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (28, 29, -12, 24))
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, -4, -12, 28))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (13, 1, -2, 8))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 18, (-2, 21, 15, 8))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (-8, -7, 10, 37))
	res = op(img)
	assert res.size == (2, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-6, 15, 6, 32))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (9, 11, -2, 23))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (15, 15, 28, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (11, -5, 3, 20))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (7, 24, -6, -5))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 3, (17, -6, 30, 12))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (-8, -7, 26, 28))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (-4, 7, 11, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (1, 20, 13, 14))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (17, -9, 28, 40))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (3, 25, 7, 26))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (12, -8, 33, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (26, 29, 28, 40))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (22, 13, -11, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (18, 0, -3, 21))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (23, 11, -3, -2))
	res = op(img)
	assert res.size == (3, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (-1, 14, 32, -7))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (1, 22, 18, 10))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (19, 25, 36, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (23, -1, 21, 30))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (-2, -1, -10, 17))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (-3, -7, 11, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (12, 12, 31, -11))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-4, 7, 12, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, None)
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-9, 22, -11, -10))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (-4, -8, -6, 16))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-2, -7, 27, 33))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (27, 23, 39, 39))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (-2, 13, 39, -9))
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (-7, 3, 15, 40))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (19, 17, -2, 23))
	res = op(img)
	assert res.size == (1, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (12, 17, 15, 17))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (-8, 8, -2, 18))
	res = op(img)
	assert res.size == (6, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (23, 7, 33, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (-7, 8, 11, -6))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (2, -9, 8, 12))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (17, 20, 8, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (13, 24, -12, 29))
	res = op(img)
	assert res.size == (4, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 20, (29, 22, 35, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (23, 5, -8, 32))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (-8, 16, 14, 13))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (9, 21, 37, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (30, 5, 23, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, None)
	res = op(img)
	assert res.size == (1, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (17, -8, 34, 23))
	res = op(img)
	assert res.size == (0, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (9, 24, 12, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (29, 5, 31, 39))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (18, 26, 20, -8))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (30, -2, -5, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-6, 27, -9, 24))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 13, (18, 16, 4, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, (2, 10, -5, 39))
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (27, 15, 6, -12))
	res = op(img)
	assert res.size == (6, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (20, 24, 32, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (27, 14, 6, 7))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (-6, 12, -7, 39))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (20, -5, 27, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, None)
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (-4, -4, 16, 33))
	res = op(img)
	assert res.size == (2, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (7, 19, 7, -3))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, None, (22, 9, -5, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (15, 9, 0, 29))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (29, 0, 39, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (24, -4, -5, 21))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (4, 26, -9, 11))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (12, 20, 25, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (24, -8, 35, 9))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (26, -4, 40, 35))
	res = op(img)
	assert res.size == (0, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (2, 28, 33, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (21, 3, -3, -12))
	res = op(img)
	assert res.size == (4, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (0, 18, 2, 6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (7, 5, 27, 0))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, (20, 10, 26, 3))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-7, 1, 26, 39))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (20, -7, 10, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, 29, 22, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 3, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (11, 2, 12, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (3, 11, 35, 30))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (11, 19, 36, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-1, 13, 10, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (-7, 23, -7, 20))
	res = op(img)
	assert res.size == (5, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (28, 5, -3, 19))
	res = op(img)
	assert res.size == (5, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-7, 16, 13, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (11, 26, -10, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 6, (27, 14, 36, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 1, (14, -4, 18, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (1, 11, -5, 40))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 15, (28, 11, -12, 11))
	res = op(img)
	assert res.size == (6, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (9, 30, 22, -11))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 4, (27, 21, 8, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (12, 29, 37, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (29, 2, -8, -1))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (25, -7, 24, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (12, 6, 11, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 3, (3, 23, 32, 38))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (10, -8, -6, -10))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 2, (6, 13, -2, 7))
	res = op(img)
	assert res.size == (4, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (-3, 3, 37, 30))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, (10, 13, -1, 36))
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (3, 10, -4, 35))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (9, -9, 22, 29))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (11, 30, -3, 13))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 7, (24, 27, 15, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, (-5, 15, 12, 21))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (0, 28, 34, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, None)
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (19, 30, 34, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (-7, 7, 22, 27))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (21, 20, -12, 22))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 7, (12, 25, 21, 24))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-4, 6, 40, 26))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 9, (-5, 23, -12, 31))
	res = op(img)
	assert res.size == (2, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (29, -4, 13, 7))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (18, 3, -1, 12))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (-6, 10, 36, 19))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (12, 6, -10, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (-1, -8, 26, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (25, 6, 7, 3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (23, 30, 13, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, (8, 6, -11, 12))
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (5, 2, 26, -7))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (1, 13, 11, 16))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (30, 28, -3, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (12, -9, 15, 5))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (-3, 26, 32, 11))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (9, 20, 18, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (20, 2, 6, 39))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (28, 14, -6, 39))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (25, 16, 7, -5))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (22, 30, -3, 34))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (14, 5, 23, -11))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, None)
	res = op(img)
	assert res.size == (4, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (3, -4, 35, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (-3, 24, 31, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-2, 12, 13, 5))
	res = op(img)
	assert res.size == (5, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (20, 18, 7, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (29, -2, 18, 34))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (-5, 2, 37, 39))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-3, 26, 33, 8))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (16, 12, 30, 11))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 1, (-7, 19, 7, -10))
	res = op(img)
	assert res.size == (4, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 17, (-2, 2, 24, 36))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (28, -1, 35, -10))
	res = op(img)
	assert res.size == (6, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 9, (17, 11, -10, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (17, 0, -11, -10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 13, (4, -6, -5, -8))
	res = op(img)
	assert res.size == (6, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 19, (10, 23, 16, 28))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (2, 9, 1, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 7, (7, -3, 5, -1))
	res = op(img)
	assert res.size == (3, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (8, -5, 18, 0))
	res = op(img)
	assert res.size == (3, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 0, (5, 13, -8, 31))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, None, (19, 27, 14, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (30, 17, -11, 3))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 11, (23, -7, 6, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (9, -4, -6, 31))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 11, (20, 15, 3, -1))
	res = op(img)
	assert res.size == (1, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (-7, 4, 29, -5))
	res = op(img)
	assert res.size == (4, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-3, 18, 8, 1))
	res = op(img)
	assert res.size == (5, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 15, (30, 2, -4, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, (7, -7, -10, 20))
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (5, -6, 34, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (29, -3, 36, -5))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (30, 15, 19, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 11, (-6, 11, 8, -2))
	res = op(img)
	assert res.size == (3, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 12, None)
	res = op(img)
	assert res.size == (4, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (-1, -1, 18, 40))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (29, 24, 29, -5))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-3, 6, 17, -12))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 7, None)
	res = op(img)
	assert res.size == (5, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (16, 19, -6, 21))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 3, (-1, 5, 19, 24))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (3, 30, -7, 5))
	res = op(img)
	assert res.size == (4, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 19, (8, 4, 27, 18))
	res = op(img)
	assert res.size == (0, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (-3, 23, 11, 12))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 4, (30, 27, 30, 36))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (5, 25, -6, 36))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-1, -4, 1, -11))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (7, 7, 39, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (27, 27, 35, -8))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 9, (17, 9, 6, 37))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (22, 6, 34, -2))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (1, 13, -9, 7))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (17, 21, 5, -4))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (18, 15, 38, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (14, 17, -4, 14))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (1, 11, -11, 2))
	res = op(img)
	assert res.size == (4, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (14, 24, 25, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-8, 26, 40, 40))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (5, 23, -11, 9))
	res = op(img)
	assert res.size == (3, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (12, 17, 39, 31))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (27, -3, 32, 5))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (0, 29, 2, 34))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (10, 5, 17, 22))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (28, 27, -6, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 4, (-8, 26, 19, 16))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (15, 11, 32, 37))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 6, (9, 25, 16, 10))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (10, 25, 3, -11))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (7, 11, 17, 0))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 12, (14, 30, -3, 18))
	res = op(img)
	assert res.size == (3, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (1, 28, 7, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (-5, 26, -11, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (-4, 8, -10, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-7, 27, -6, -11))
	res = op(img)
	assert res.size == (2, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 2, None)
	res = op(img)
	assert res.size == (6, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-1, 17, 14, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (11, 1, 39, -6))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (30, 8, -5, -4))
	res = op(img)
	assert res.size == (1, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (8, 30, -3, -4))
	res = op(img)
	assert res.size == (5, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (-7, -1, -12, 28))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (17, -6, -2, 34))
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (2, 29, 4, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (-5, 18, 7, -6))
	res = op(img)
	assert res.size == (1, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (-3, 24, 8, -4))
	res = op(img)
	assert res.size == (5, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (22, -8, 30, 19))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 6, (26, 14, -8, 23))
	res = op(img)
	assert res.size == (4, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (25, -8, 12, 37))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 2, (-8, 24, 28, 20))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (5, 20, -12, 18))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 7, (14, 10, 23, -10))
	res = op(img)
	assert res.size == (2, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (8, 10, 20, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 1, (7, 24, 6, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 17, (20, 19, 38, -10))
	res = op(img)
	assert res.size == (3, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (28, -2, 19, 21))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (7, 7, 15, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, None)
	res = op(img)
	assert res.size == (2, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (24, 28, -5, 21))
	res = op(img)
	assert res.size == (5, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (11, -6, 22, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (11, 12, 31, 33))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 6, (5, 13, 13, 30))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 11, None)
	res = op(img)
	assert res.size == (6, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 11, (24, 18, 25, -7))
	res = op(img)
	assert res.size == (4, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (17, 8, 1, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (5, 2, 20, 17))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (8, 27, -4, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (20, -3, 26, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 18, (-8, 7, 36, 36))
	res = op(img)
	assert res.size == (2, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (7, -4, 24, -8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (28, 16, 18, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (5, 20, -1, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (16, 20, 17, -6))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, (-7, -4, 16, -4))
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 13, (9, 2, 10, 6))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 19, (-3, -3, 31, 1))
	res = op(img)
	assert res.size == (2, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, None)
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (29, 27, 18, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (-7, 6, 6, -9))
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (-6, -3, 1, 11))
	res = op(img)
	assert res.size == (0, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 9, (7, 15, 3, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 0, (16, 29, 2, 33))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, None, (-5, 6, 24, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (0, 16, -2, 35))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (17, 28, 9, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, None)
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (8, -1, 10, 23))
	res = op(img)
	assert res.size == (0, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-4, 11, 40, 30))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 5, (24, 0, 26, 14))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 3, (30, 2, -5, 5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (19, -7, 20, 14))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 16, None)
	res = op(img)
	assert res.size == (2, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, (27, -8, 20, 17))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (1, 17, 36, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 8, (-9, 26, 31, 10))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (-3, 22, 16, -2))
	res = op(img)
	assert res.size == (2, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 19, (-6, 10, 22, -2))
	res = op(img)
	assert res.size == (4, 19)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (14, 10, 5, 20))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 17, (28, 0, 4, 5))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (-1, 20, 30, 23))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 17, (-3, 9, -11, 9))
	res = op(img)
	assert res.size == (4, 17)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, None)
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 14, (19, 21, 40, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 14, (6, 17, 40, 14))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 19, (18, 2, 40, 14))
	res = op(img)
	assert res.size == (0, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 1, (7, 16, 13, 27))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 14, (15, -3, 24, -10))
	res = op(img)
	assert res.size == (5, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 14, (-9, 12, 37, 17))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 15, (22, 21, 23, 20))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (25, 12, 37, 26))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 1, (15, 0, 38, 28))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (3, 9, -8, -1))
	res = op(img)
	assert res.size == (5, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (0, 17, 40, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 18, None)
	res = op(img)
	assert res.size == (5, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (27, 8, -12, -2))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 16, None)
	res = op(img)
	assert res.size == (3, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 20, (5, 26, 16, -2))
	res = op(img)
	assert res.size == (6, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 13, (3, 1, 15, -7))
	res = op(img)
	assert res.size == (1, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 20, (7, -8, 37, -9))
	res = op(img)
	assert res.size == (3, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 8, (-6, 6, 20, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 8, (8, 30, 1, -4))
	res = op(img)
	assert res.size == (6, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (22, 13, 33, 18))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (25, 23, -2, -6))
	res = op(img)
	assert res.size == (3, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 12, None)
	res = op(img)
	assert res.size == (5, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 16, (9, -9, 25, 29))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (20, 23, -8, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (-4, 17, 5, 7))
	res = op(img)
	assert res.size == (1, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 2, (11, -2, 28, 26))
	res = op(img)
	assert res.size == (0, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (20, 19, 21, -10))
	res = op(img)
	assert res.size == (1, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-5, -9, -4, 5))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 16, (20, 4, 32, 11))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, None, (-5, 27, -10, 18))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 18, (3, -8, 31, 27))
	res = op(img)
	assert res.size == (3, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 12, (12, 15, 31, 9))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, (14, -3, 29, 22))
	res = op(img)
	assert res.size == (0, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 15, (9, 20, -4, 24))
	res = op(img)
	assert res.size == (3, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (29, 1, -4, 0))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 13, (26, -1, 16, 20))
	res = op(img)
	assert res.size == (0, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (18, 24, -9, 12))
	res = op(img)
	assert res.size == (2, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (17, 6, 40, -9))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 1, (2, 4, 13, -10))
	res = op(img)
	assert res.size == (3, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-6, -7, -11, 22))
	res = op(img)
	assert res.size == (6, 12)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 14, (-9, 21, -2, -6))
	res = op(img)
	assert res.size == (4, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (10, 24, 26, -6))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (9, -2, 39, 19))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (20, -5, 31, -11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 4, (-5, 16, 23, 6))
	res = op(img)
	assert res.size == (3, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 17, (7, 15, 25, 37))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 15, (-1, 21, -9, 20))
	res = op(img)
	assert res.size == (1, 15)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 10, (-7, 2, 16, 11))
	res = op(img)
	assert res.size == (4, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 19, (28, 18, 3, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 13, (15, 6, -5, 23))
	res = op(img)
	assert res.size == (2, 13)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 1, (-6, -9, -3, 26))
	res = op(img)
	assert res.size == (1, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 1, (26, -6, 25, 14))
	res = op(img)
	assert res.size == (0, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (-1, 2, 32, 25))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (-4, 0, 11, 26))
	res = op(img)
	assert res.size == (3, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 10, (15, 24, 2, 1))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 8, (14, 25, 10, 16))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (26, 7, 24, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, None, (25, 18, -11, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 3, (29, 17, 4, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 5, (9, 25, 29, 13))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 0, (24, 16, 32, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-5, -8, 39, 9))
	res = op(img)
	assert res.size == (6, 1)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (0, 10, 25, -1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 5, None)
	res = op(img)
	assert res.size == (6, 5)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 8, (30, 15, 27, 26))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (-7, 16, 4, 34))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (-1, 19, 7, 8))
	res = op(img)
	assert res.size == (6, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 7, (26, 6, -1, 33))
	res = op(img)
	assert res.size == (6, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 11, (7, 24, 3, 11))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 16, (19, 30, 17, 7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 9, (-9, 4, 27, -6))
	res = op(img)
	assert res.size == (1, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 12, (-9, 3, 13, 36))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (-1, -4, 10, -10))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 18, (-2, 6, 37, 27))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 0, (-4, 4, -8, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 20, (9, -2, 12, 12))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 13, (-1, 7, 17, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, None, (20, -9, 16, 38))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-9, -9, -9, 23))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 4, None)
	res = op(img)
	assert res.size == (4, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 11, (27, -9, 17, 33))
	res = op(img)
	assert res.size == (0, 11)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 7, (26, -5, -12, 3))
	res = op(img)
	assert res.size == (4, 7)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 2, (5, -9, 23, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 0, (-2, 3, 39, 8))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (2, 10, 21, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (3, -3, 19, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 6, (-3, 14, 39, -7))
	res = op(img)
	assert res.size == (2, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 16, None)
	res = op(img)
	assert res.size == (5, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 16, (6, 12, 29, -3))
	res = op(img)
	assert res.size == (1, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 6, (24, -4, 18, 19))
	res = op(img)
	assert res.size == (0, 6)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (16, 11, 16, 25))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 10, (12, 29, 7, 32))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 0, (18, 1, 35, 4))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 16, (-8, -3, -5, 5))
	res = op(img)
	assert res.size == (4, 16)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 3, (16, 10, 20, -2))
	res = op(img)
	assert res.size == (3, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, None, (29, 4, 7, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 20, (8, 3, 20, -12))
	res = op(img)
	assert res.size == (5, 20)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(None, 12, (30, -4, 21, -5))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 15, (6, -1, 11, 4))
	res = op(img)
	assert res.size == (0, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (-8, 24, 3, 6))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 4, (12, 10, -6, 39))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 20, (27, 20, 19, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 18, (5, -9, 21, 29))
	res = op(img)
	assert res.size == (0, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 0, (0, 25, 17, 32))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(4, 5, (-2, 12, 15, 27))
	res = op(img)
	assert res.size == (4, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 18, (23, 15, -11, 36))
	res = op(img)
	assert res.size == (1, 18)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 7, (29, 12, 33, 12))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 9, (21, 29, 11, -4))
	res = op(img)
	assert res.size == (6, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 10, (21, 8, 22, -1))
	res = op(img)
	assert res.size == (1, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 5, (22, 17, 11, 23))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (-8, -1, 30, -1))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 18, (10, -8, 31, 15))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 5, (-5, -6, 18, -7))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (28, 3, 34, 23))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 11, (5, -6, 17, 16))
	res = op(img)
	assert res.size == (0, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 14, (23, -2, 33, 10))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 12, (-2, 4, 19, 9))
	res = op(img)
	assert res.size == (2, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 0, (1, -2, -4, -3))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 8, (10, 25, 0, 21))
	res = op(img)
	assert res.size == (1, 8)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 15, (8, 6, 1, 26))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 9, (26, -7, 23, 18))
	res = op(img)
	assert res.size == (0, 9)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 12, (18, 30, 27, 35))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 8, (27, 4, -5, 1))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, 9, (28, -6, 36, 35))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 14, (1, -1, 32, 29))
	res = op(img)
	assert res.size == (2, 14)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(3, 10, (11, 15, -6, 22))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 17, (12, 24, 37, 2))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 4, (4, -1, 5, 12))
	res = op(img)
	assert res.size == (0, 4)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(2, 2, (19, 29, -5, 1))
	res = op(img)
	assert res.size == (2, 2)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(6, 3, (4, 7, -8, 30))
	res = op(img)
	assert res.size == (6, 3)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(1, 2, (25, 28, 2, 8))
	res = op(img)
	assert res.size == (0, 0)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(0, None, (19, 27, 30, 9))
	res = op(img)
	assert res.size == (3, 10)


	img = Image.new('RGBA', (3, 10), color=(0,0,0,0))
	op = Operations.Manual(5, 6, (27, 1, -6, -1))
	res = op(img)
	assert res.size == (5, 6)


